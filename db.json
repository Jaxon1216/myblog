{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":0},{"_id":"source/img/math.png","path":"img/math.png","modified":0,"renderable":0},{"_id":"source/img/test.png","path":"img/test.png","modified":0,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Sophomore 1st Sem.md","hash":"5a0f5bf79678d229b9aa650d48a36d805019c861","modified":1758869560810},{"_id":"source/_posts/vercel-hexo-github-auto-deploy.md","hash":"ba0160c1b910477adf736bc85392e29988f864b4","modified":1758163898821},{"_id":"source/_posts/confusion.md","hash":"4cf187bad496e863671c971b7220dfefb235abea","modified":1758261459666},{"_id":"source/_posts/tools.md","hash":"776bcfdcdd785c205e939d4b338abee70b8cb871","modified":1758181077160},{"_id":"source/about/index.md","hash":"04121a5f997612414133e43fadacfe763f34d464","modified":1757563388436},{"_id":"source/books/index.md","hash":"ea659e47c3bdf4deafa957e17472848cbe009759","modified":1757482445742},{"_id":"source/_posts/study-materials.md","hash":"1968f418b72c383815d2a5dc19d98195a56c391e","modified":1757506319642},{"_id":"source/links/index.md","hash":"d8ffbb159db78f088da96f2a689052e84d57c78a","modified":1757482445807},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1757564914110},{"_id":"source/archives/index.md","hash":"63644c52b6b6282cc9c881674403b69cab4832eb","modified":1757482445741},{"_id":"source/tags/index.md","hash":"539ac4465f170bee4418eb813beeff978ffc69c1","modified":1757482445810},{"_id":"source/categories/index.md","hash":"8a3af0700db0610249988f28c1fc15a9e71559dd","modified":1757482445743},{"_id":"source/_posts/.vercel-hexo-github-auto-deploy.pdf.md5","hash":"9289c75d3367ffb033ae20038c3de52562655440","modified":1758454569266},{"_id":"source/_posts/August.md","hash":"c6a59888d7ef5dadc71d16a38471dcd299700ee6","modified":1757482445735},{"_id":"source/img/test.png","hash":"4a24fa814071da9a6799a423dee8891acbd2cf49","modified":1757482445805},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1757482446364},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1757482446364},{"_id":"themes/pure/README.cn.md","hash":"ddf15a1feb7a2630210aae0528df3504fca23b5e","modified":1757482446365},{"_id":"themes/pure/_config.yml","hash":"9ff4850a645d8198639590aa333f2908a7b949fd","modified":1757598319983},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1757482446366},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1757482446367},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1757482446417},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1757482446372},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1757482446372},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1757482446373},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1757482446373},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1757482446411},{"_id":"themes/pure/layout/archive.ejs","hash":"0e9e67a82202ca3971be59579744d43ec6696bbf","modified":1757482446411},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1757482446412},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1757482446414},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1757482446414},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1757482446414},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1757482446412},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1757482446413},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1757482446415},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1757482446416},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1757482446416},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1757482446413},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1757482446415},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1757482446447},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1757482446452},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1757482446368},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1757482446367},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1757482446368},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1757482446363},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1757482446362},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1757482446369},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1757482446370},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1757482446363},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1757482446369},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1757482446371},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1757482446371},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1757482446375},{"_id":"themes/pure/layout/_common/header.ejs","hash":"5c1c3461f6781018e87abfde264c1164413625f2","modified":1757482446376},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"4e4c7e93ac39545a34134228b463658516f28eb7","modified":1757482446374},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1757482446376},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1757482446371},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1757482446378},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1757482446378},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a9ef77165f459ecdf2dcd3397ca04abbeb560d1f","modified":1757482446377},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1757482446379},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"1081974f182e8e1ce452d701b8f6575b6dc45b0c","modified":1757482446379},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1757482446381},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1757482446382},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"3464682ae0359ba23034ac40e8153699c37fb7be","modified":1757482446380},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1757482446380},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1757482446382},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1757482446381},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"c792537723b59f437967262c9575a20fac02e911","modified":1757482446383},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"46da1ee327b8af107335146bd8fc131eee6c9c4f","modified":1757482446391},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"2f3790257d6ad07fdad2043b27950842c9011daa","modified":1757482446383},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"fa9e2041c4a6e03f566545db1385c5ae1a80f879","modified":1757482446391},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1757482446404},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1757482446392},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1757482446407},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1757482446405},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1757482446405},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1757482446406},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1757482446408},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1757482446409},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1757482446406},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1757482446407},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1757482446409},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1757482446400},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1757482446410},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1757482446403},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"ee21c4e7ccac26ff2ab6d1d178447fd11fea4d7e","modified":1757482446401},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1757482446401},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1757482446404},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"32f0ac36fa68d8786506957338e552661f2f809c","modified":1757482446403},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1757482446452},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1757482446453},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1757482446402},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1757482446468},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1757482446469},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1757482446458},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1757482446469},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1757482446457},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1757482446402},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1757482446384},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1757482446385},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1757482446386},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1757482446386},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1757482446387},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"15f86fb01e64e784f27dfa2671a9db7c107f1633","modified":1757482446385},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"fcbe3695ae9b164a4a2d27a66a6827dcf3ee76f1","modified":1757482446387},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1757482446389},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1757482446388},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1757482446390},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1757482446389},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1757482446388},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1757482446394},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1757482446392},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"d1379e4ef5863dcc6ed133579c1f0cd254f374ce","modified":1758185295224},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1757482446395},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1757482446393},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"de4c43d3056825c14283fe426b8cc677dea59617","modified":1757482446395},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1757482446396},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1757482446396},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1757482446397},{"_id":"themes/pure/layout/_script/_repository/gitee.ejs","hash":"0e1ecabe809f149ebe3ce3ac393f6e6155dd6780","modified":1757482446398},{"_id":"themes/pure/layout/_script/_repository/github.ejs","hash":"a4762135de6816c85156e85886f50fb32b0adc89","modified":1757482446398},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1757482446400},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1757482446399},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1757482446466},{"_id":"themes/pure/layout/_script/_repository/legacy.ejs","hash":"b5e5c666e89550abb5004e35c7ef165c6edab62d","modified":1757482446399},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1757482446464},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1757482446465},{"_id":"source/img/math.png","hash":"49654576ea90732f89ba1e09f6609033722bca57","modified":1757482445801},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1757482446466},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1757482446467},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1757482446419},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1757482446422},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1757482446420},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1757482446424},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1757482446426},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1757482446473},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1757482446471},{"_id":"themes/pure/source/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1757482446449},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1757482446477},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1757482446475},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1757482446456},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1757482446451},{"_id":"source/_posts/vercel-hexo-github-auto-deploy.pdf","hash":"670793ee02efdfe09cd38081bf1f567c64c2b557","modified":1758164457877},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1757482446446},{"_id":"source/img/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757482445795},{"_id":"themes/pure/source/images/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757482446462}],"Category":[{"name":"diary","_id":"cmg0gdxzj0004k49k0cef7nyv"},{"name":"study","_id":"cmg0gdy02000ck49k54lzegbr"},{"name":"技术","_id":"cmg0gdy0i000ok49kf44f57u0"}],"Data":[],"Page":[{"title":"about","date":"2025-08-03T12:40:48.000Z","_content":"欢迎来到我的博客！","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-08-03 20:40:48\n---\n欢迎来到我的博客！","updated":"2025-09-11T04:03:08.436Z","path":"about/index.html","comments":1,"layout":"page","_id":"cmg0gdxyv0000k49kcncaejyc","content":"<p>欢迎来到我的博客！</p>\n","excerpt":"","more":"<p>欢迎来到我的博客！</p>\n"},{"title":"Books","date":"2024-12-31T16:00:00.000Z","type":"books","_content":" \n\n## 📚 我的书单推荐\n\n### 个人成长\n- **[High Agency](https://www.highagency.com/)** - 21世纪最重要的思维模式：高主动性思维，教你如何成为\"发生在生活中\"而非\"被生活发生\"的人\n\n\n### 数学类\n- **考研数学你真的掌握了吗全套** - 张杨文博士匠心之作\n\n\n### 技术类书籍\n- 暂无\n\n\n\n---\n*最后更新：2025年8月*\n","source":"books/index.md","raw":"---\ntitle: Books\ndate: 2025-01-01 00:00:00\ntype: books\n--- \n\n## 📚 我的书单推荐\n\n### 个人成长\n- **[High Agency](https://www.highagency.com/)** - 21世纪最重要的思维模式：高主动性思维，教你如何成为\"发生在生活中\"而非\"被生活发生\"的人\n\n\n### 数学类\n- **考研数学你真的掌握了吗全套** - 张杨文博士匠心之作\n\n\n### 技术类书籍\n- 暂无\n\n\n\n---\n*最后更新：2025年8月*\n","updated":"2025-09-10T05:34:05.742Z","path":"books/index.html","comments":1,"layout":"page","_id":"cmg0gdxzd0002k49kgyui2zgq","content":"<h2 id=\"📚-我的书单推荐\"><a href=\"#📚-我的书单推荐\" class=\"headerlink\" title=\"📚 我的书单推荐\"></a>📚 我的书单推荐</h2><h3 id=\"个人成长\"><a href=\"#个人成长\" class=\"headerlink\" title=\"个人成长\"></a>个人成长</h3><ul>\n<li><strong><a href=\"https://www.highagency.com/\">High Agency</a></strong> - 21世纪最重要的思维模式：高主动性思维，教你如何成为”发生在生活中”而非”被生活发生”的人</li>\n</ul>\n<h3 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h3><ul>\n<li><strong>考研数学你真的掌握了吗全套</strong> - 张杨文博士匠心之作</li>\n</ul>\n<h3 id=\"技术类书籍\"><a href=\"#技术类书籍\" class=\"headerlink\" title=\"技术类书籍\"></a>技术类书籍</h3><ul>\n<li>暂无</li>\n</ul>\n<hr>\n<p><em>最后更新：2025年8月</em></p>\n","excerpt":"","more":"<h2 id=\"📚-我的书单推荐\"><a href=\"#📚-我的书单推荐\" class=\"headerlink\" title=\"📚 我的书单推荐\"></a>📚 我的书单推荐</h2><h3 id=\"个人成长\"><a href=\"#个人成长\" class=\"headerlink\" title=\"个人成长\"></a>个人成长</h3><ul>\n<li><strong><a href=\"https://www.highagency.com/\">High Agency</a></strong> - 21世纪最重要的思维模式：高主动性思维，教你如何成为”发生在生活中”而非”被生活发生”的人</li>\n</ul>\n<h3 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h3><ul>\n<li><strong>考研数学你真的掌握了吗全套</strong> - 张杨文博士匠心之作</li>\n</ul>\n<h3 id=\"技术类书籍\"><a href=\"#技术类书籍\" class=\"headerlink\" title=\"技术类书籍\"></a>技术类书籍</h3><ul>\n<li>暂无</li>\n</ul>\n<hr>\n<p><em>最后更新：2025年8月</em></p>\n"},{"title":"Archives","date":"2024-12-31T16:00:00.000Z","type":"archives","_content":"\n\n","source":"archives/index.md","raw":"---\ntitle: Archives\ndate: 2025-01-01 00:00:00\ntype: archives\n---\n\n\n","updated":"2025-09-10T05:34:05.741Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cmg0gdxzl0006k49k7pnpd85x","content":"","excerpt":"","more":""},{"title":"Links","date":"2024-12-31T16:00:00.000Z","type":"links","_content":" ","source":"links/index.md","raw":"---\ntitle: Links\ndate: 2025-01-01 00:00:00\ntype: links\n--- ","updated":"2025-09-10T05:34:05.807Z","path":"links/index.html","comments":1,"layout":"page","_id":"cmg0gdxzs0008k49k9s6g1yzg","content":"","excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2025-09-11T04:28:34.110Z","updated":"2025-09-11T04:28:34.110Z","path":"repository/index.html","_id":"cmg0gdy00000ak49k7rd7egtx","content":"","excerpt":"","more":""},{"title":"Tags","date":"2024-12-31T16:00:00.000Z","type":"tags","_content":" ","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2025-01-01 00:00:00\ntype: tags\n--- ","updated":"2025-09-10T05:34:05.810Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cmg0gdy0b000fk49k9riua8tz","content":"","excerpt":"","more":""},{"title":"Categories","date":"2024-12-31T16:00:00.000Z","type":"categories","_content":" \n \n","source":"categories/index.md","raw":"---\ntitle: Categories\ndate: 2025-01-01 00:00:00\ntype: categories\n--- \n \n","updated":"2025-09-10T05:34:05.743Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cmg0gdy0c000gk49kfse17e29","content":"","excerpt":"","more":""}],"Post":[{"title":"Sophomore 1st Sem","date":"2025-09-26T11:30:32.000Z","_content":"Goals:\n- 线代基础，高数基础，660，张宇30。\n- 数据结构英雄课程过一遍，。\n- 按照考研强度准备六级，包括口语。\n- 大英赛，数学竞赛。\nEvents:\n- 9到10月报名蓝桥杯\n- 11月六级 http://cet-bm.neea.edu.cn\n- 11月转专业https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\n- \nIDEA:\n- \n# September\n\n| Date | Day | Math | Code | English | Exercise | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-09-01 | Monday | 3h 线性表示，线性相关无关及其秩| | | 1.5h 游泳，还是没学会换气| |\n| 2025-09-02 | Tuesday | 3h 做题，线性方程组解的性质和判定| | 20min英语趣配音| 2h 俯卧撑100个，跑步4km| 明天一定早早起|\n| 2025-09-07 | Sunday | 3h 同解，特征值特征向量| | |游泳1.5h | |\n| 2025-09-08 | Monday | | |30min 英语单词 | | 做规划，学习如何利用Apple日历|\n| 2025-09-09 | Tuesday | | 3h 线性代数特征值特征向量| | 120 俯卧撑 60 臂力棒弯举| |\n| 2025-09-10 | Wednesday |1.5h 二次型| 5h pages迁移| 15min 单词| 60 深蹲 60弓步蹲 40 桥式| |\n| 2025-09-11 | Thursday | |3h 数据结构刷题|20min 单词|28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩| 要注意时间的利用率|\n| 2025-09-12 | Friday |40min 660| 4.5h 单向链表刷题| 记单词 跟读一集youtube| 1.5h 游泳 |要想弄明白什么是递归，那就先弄明白什么是递归|\n| 2025-09-13 | Saturday |1.3h 660|1.5h 栈模版代码|20min单词 20min YouTube跟读 | | |\n| 2025-09-15 | Monday |2h 660|1.5h 栈刷题| | | |\n| 2025-09-16 | Tuesday | | | | |全天课|\n| 2025-09-17 | Wednesday |1.3h 660|3.5h data structures|30min YouTube 15min 单词 | 20min jogging 60x深蹲 60x弓步蹲| 开始旷课|\n| 2025-09-18 | Thursday |40min 660 1.3h 30讲|3h 队列题|30min YouTube 15min 单词| |优化做题习惯|\n| 2025-09-19 | Friday |2h 30讲 |1.5h 数据结构| |5km 慢跑 | |\n| 2025-09-20 | Saturday | | | |1.5h 游泳| |\n| 2025-09-21至26 | 反复感冒摆烂，就学了两三百个单词 |\n| 2025-09-26 | Friday | | | | | |\n| 2025-09-27 | Saturday | | | | | |\n| 2025-09-28 | Sunday | | | | | |\n| 2025-09-29 | Monday | | | | | |\n| 2025-09-30 | Tuesday | | | | | |\n","source":"_posts/Sophomore 1st Sem.md","raw":"---\ntitle: Sophomore 1st Sem\ndate: 2025-09-26 19:30:32\ncategories: \n- diary\ntags:\n- 学习记录\n---\nGoals:\n- 线代基础，高数基础，660，张宇30。\n- 数据结构英雄课程过一遍，。\n- 按照考研强度准备六级，包括口语。\n- 大英赛，数学竞赛。\nEvents:\n- 9到10月报名蓝桥杯\n- 11月六级 http://cet-bm.neea.edu.cn\n- 11月转专业https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\n- \nIDEA:\n- \n# September\n\n| Date | Day | Math | Code | English | Exercise | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-09-01 | Monday | 3h 线性表示，线性相关无关及其秩| | | 1.5h 游泳，还是没学会换气| |\n| 2025-09-02 | Tuesday | 3h 做题，线性方程组解的性质和判定| | 20min英语趣配音| 2h 俯卧撑100个，跑步4km| 明天一定早早起|\n| 2025-09-07 | Sunday | 3h 同解，特征值特征向量| | |游泳1.5h | |\n| 2025-09-08 | Monday | | |30min 英语单词 | | 做规划，学习如何利用Apple日历|\n| 2025-09-09 | Tuesday | | 3h 线性代数特征值特征向量| | 120 俯卧撑 60 臂力棒弯举| |\n| 2025-09-10 | Wednesday |1.5h 二次型| 5h pages迁移| 15min 单词| 60 深蹲 60弓步蹲 40 桥式| |\n| 2025-09-11 | Thursday | |3h 数据结构刷题|20min 单词|28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩| 要注意时间的利用率|\n| 2025-09-12 | Friday |40min 660| 4.5h 单向链表刷题| 记单词 跟读一集youtube| 1.5h 游泳 |要想弄明白什么是递归，那就先弄明白什么是递归|\n| 2025-09-13 | Saturday |1.3h 660|1.5h 栈模版代码|20min单词 20min YouTube跟读 | | |\n| 2025-09-15 | Monday |2h 660|1.5h 栈刷题| | | |\n| 2025-09-16 | Tuesday | | | | |全天课|\n| 2025-09-17 | Wednesday |1.3h 660|3.5h data structures|30min YouTube 15min 单词 | 20min jogging 60x深蹲 60x弓步蹲| 开始旷课|\n| 2025-09-18 | Thursday |40min 660 1.3h 30讲|3h 队列题|30min YouTube 15min 单词| |优化做题习惯|\n| 2025-09-19 | Friday |2h 30讲 |1.5h 数据结构| |5km 慢跑 | |\n| 2025-09-20 | Saturday | | | |1.5h 游泳| |\n| 2025-09-21至26 | 反复感冒摆烂，就学了两三百个单词 |\n| 2025-09-26 | Friday | | | | | |\n| 2025-09-27 | Saturday | | | | | |\n| 2025-09-28 | Sunday | | | | | |\n| 2025-09-29 | Monday | | | | | |\n| 2025-09-30 | Tuesday | | | | | |\n","slug":"Sophomore 1st Sem","published":1,"updated":"2025-09-26T07:00:59.717Z","_id":"cmg0gdxyy0001k49k2rdn2gbp","comments":1,"layout":"post","photos":[],"content":"<p>Goals:</p>\n<ul>\n<li>线代基础，高数基础，660，张宇30。</li>\n<li>数据结构英雄课程过一遍，。</li>\n<li>按照考研强度准备六级，包括口语。</li>\n<li>大英赛，数学竞赛。<br>Events:</li>\n<li>9到10月报名蓝桥杯</li>\n<li>11月六级 <a href=\"http://cet-bm.neea.edu.cn/\">http://cet-bm.neea.edu.cn</a></li>\n<li>11月转专业<a href=\"https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\">https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml</a></li>\n<li></li>\n</ul>\n<h2 id=\"IDEA\"><a href=\"#IDEA\" class=\"headerlink\" title=\"IDEA:\"></a>IDEA:</h2><h1 id=\"September\"><a href=\"#September\" class=\"headerlink\" title=\"September\"></a>September</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Exercise</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-09-01</td>\n<td>Monday</td>\n<td>3h 线性表示，线性相关无关及其秩</td>\n<td></td>\n<td></td>\n<td>1.5h 游泳，还是没学会换气</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-02</td>\n<td>Tuesday</td>\n<td>3h 做题，线性方程组解的性质和判定</td>\n<td></td>\n<td>20min英语趣配音</td>\n<td>2h 俯卧撑100个，跑步4km</td>\n<td>明天一定早早起</td>\n</tr>\n<tr>\n<td>2025-09-07</td>\n<td>Sunday</td>\n<td>3h 同解，特征值特征向量</td>\n<td></td>\n<td></td>\n<td>游泳1.5h</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-08</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>30min 英语单词</td>\n<td></td>\n<td>做规划，学习如何利用Apple日历</td>\n</tr>\n<tr>\n<td>2025-09-09</td>\n<td>Tuesday</td>\n<td></td>\n<td>3h 线性代数特征值特征向量</td>\n<td></td>\n<td>120 俯卧撑 60 臂力棒弯举</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-10</td>\n<td>Wednesday</td>\n<td>1.5h 二次型</td>\n<td>5h pages迁移</td>\n<td>15min 单词</td>\n<td>60 深蹲 60弓步蹲 40 桥式</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-11</td>\n<td>Thursday</td>\n<td></td>\n<td>3h 数据结构刷题</td>\n<td>20min 单词</td>\n<td>28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩</td>\n<td>要注意时间的利用率</td>\n</tr>\n<tr>\n<td>2025-09-12</td>\n<td>Friday</td>\n<td>40min 660</td>\n<td>4.5h 单向链表刷题</td>\n<td>记单词 跟读一集youtube</td>\n<td>1.5h 游泳</td>\n<td>要想弄明白什么是递归，那就先弄明白什么是递归</td>\n</tr>\n<tr>\n<td>2025-09-13</td>\n<td>Saturday</td>\n<td>1.3h 660</td>\n<td>1.5h 栈模版代码</td>\n<td>20min单词 20min YouTube跟读</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-15</td>\n<td>Monday</td>\n<td>2h 660</td>\n<td>1.5h 栈刷题</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-16</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>全天课</td>\n</tr>\n<tr>\n<td>2025-09-17</td>\n<td>Wednesday</td>\n<td>1.3h 660</td>\n<td>3.5h data structures</td>\n<td>30min YouTube 15min 单词</td>\n<td>20min jogging 60x深蹲 60x弓步蹲</td>\n<td>开始旷课</td>\n</tr>\n<tr>\n<td>2025-09-18</td>\n<td>Thursday</td>\n<td>40min 660 1.3h 30讲</td>\n<td>3h 队列题</td>\n<td>30min YouTube 15min 单词</td>\n<td></td>\n<td>优化做题习惯</td>\n</tr>\n<tr>\n<td>2025-09-19</td>\n<td>Friday</td>\n<td>2h 30讲</td>\n<td>1.5h 数据结构</td>\n<td></td>\n<td>5km 慢跑</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-20</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td>1.5h 游泳</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-21至26</td>\n<td>反复感冒摆烂，就学了两三百个单词</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-26</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-27</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-28</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-29</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-30</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n","excerpt":"","more":"<p>Goals:</p>\n<ul>\n<li>线代基础，高数基础，660，张宇30。</li>\n<li>数据结构英雄课程过一遍，。</li>\n<li>按照考研强度准备六级，包括口语。</li>\n<li>大英赛，数学竞赛。<br>Events:</li>\n<li>9到10月报名蓝桥杯</li>\n<li>11月六级 <a href=\"http://cet-bm.neea.edu.cn/\">http://cet-bm.neea.edu.cn</a></li>\n<li>11月转专业<a href=\"https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\">https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml</a></li>\n<li></li>\n</ul>\n<h2 id=\"IDEA\"><a href=\"#IDEA\" class=\"headerlink\" title=\"IDEA:\"></a>IDEA:</h2><h1 id=\"September\"><a href=\"#September\" class=\"headerlink\" title=\"September\"></a>September</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Exercise</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-09-01</td>\n<td>Monday</td>\n<td>3h 线性表示，线性相关无关及其秩</td>\n<td></td>\n<td></td>\n<td>1.5h 游泳，还是没学会换气</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-02</td>\n<td>Tuesday</td>\n<td>3h 做题，线性方程组解的性质和判定</td>\n<td></td>\n<td>20min英语趣配音</td>\n<td>2h 俯卧撑100个，跑步4km</td>\n<td>明天一定早早起</td>\n</tr>\n<tr>\n<td>2025-09-07</td>\n<td>Sunday</td>\n<td>3h 同解，特征值特征向量</td>\n<td></td>\n<td></td>\n<td>游泳1.5h</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-08</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>30min 英语单词</td>\n<td></td>\n<td>做规划，学习如何利用Apple日历</td>\n</tr>\n<tr>\n<td>2025-09-09</td>\n<td>Tuesday</td>\n<td></td>\n<td>3h 线性代数特征值特征向量</td>\n<td></td>\n<td>120 俯卧撑 60 臂力棒弯举</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-10</td>\n<td>Wednesday</td>\n<td>1.5h 二次型</td>\n<td>5h pages迁移</td>\n<td>15min 单词</td>\n<td>60 深蹲 60弓步蹲 40 桥式</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-11</td>\n<td>Thursday</td>\n<td></td>\n<td>3h 数据结构刷题</td>\n<td>20min 单词</td>\n<td>28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩</td>\n<td>要注意时间的利用率</td>\n</tr>\n<tr>\n<td>2025-09-12</td>\n<td>Friday</td>\n<td>40min 660</td>\n<td>4.5h 单向链表刷题</td>\n<td>记单词 跟读一集youtube</td>\n<td>1.5h 游泳</td>\n<td>要想弄明白什么是递归，那就先弄明白什么是递归</td>\n</tr>\n<tr>\n<td>2025-09-13</td>\n<td>Saturday</td>\n<td>1.3h 660</td>\n<td>1.5h 栈模版代码</td>\n<td>20min单词 20min YouTube跟读</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-15</td>\n<td>Monday</td>\n<td>2h 660</td>\n<td>1.5h 栈刷题</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-16</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>全天课</td>\n</tr>\n<tr>\n<td>2025-09-17</td>\n<td>Wednesday</td>\n<td>1.3h 660</td>\n<td>3.5h data structures</td>\n<td>30min YouTube 15min 单词</td>\n<td>20min jogging 60x深蹲 60x弓步蹲</td>\n<td>开始旷课</td>\n</tr>\n<tr>\n<td>2025-09-18</td>\n<td>Thursday</td>\n<td>40min 660 1.3h 30讲</td>\n<td>3h 队列题</td>\n<td>30min YouTube 15min 单词</td>\n<td></td>\n<td>优化做题习惯</td>\n</tr>\n<tr>\n<td>2025-09-19</td>\n<td>Friday</td>\n<td>2h 30讲</td>\n<td>1.5h 数据结构</td>\n<td></td>\n<td>5km 慢跑</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-20</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td>1.5h 游泳</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-21至26</td>\n<td>反复感冒摆烂，就学了两三百个单词</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-26</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-27</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-28</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-29</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-30</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n"},{"title":"confusion","date":"2025-09-17T07:20:10.000Z","_content":"# 常识性\n### index.md无内容但侧边栏显示仓库\n- index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的`projects`和`repository`部分，非Markdown文件内容决定。\n\n#### Hexo中repository/index.md与主题配置的关系\n在Hexo博客系统中，`source/repository/index.md`文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：\n\n1. **index.md文件的作用**：\n   - 这个文件主要是创建一个名为\"Repositories\"的页面路由（/repository/）\n   - 它包含前置信息（Front Matter）定义了页面标题、布局等基本属性\n   - 文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的\n\n2. **主题配置中的仓库设置**：\n   - 在`themes/pure/_config.yml`文件中，仓库信息通过两个部分配置：\n     ```yaml\n     repository:\n       platform: github # 托管平台（github | gitee）\n       username: Jaxon1216 # 用户名\n     ```\n     和\n     ```yaml\n     projects:\n       cofess/hexo-theme-pure: https://github.com/cofess/hexo-theme-pure\n     ```\n   - `repository`部分定义了平台和用户名\n   - `projects`部分直接列出了要显示的特定仓库\n\n3. **工作原理**：\n   - 当访问`/repository/`页面时，Hexo使用`layout: repository`指定的布局模板\n   - 该模板会读取主题配置文件中的`repository`和`projects`部分\n   - 即使`index.md`文件中没有内容，模板也会根据配置信息渲染出仓库列表\n\n这就是为什么即使`source/repository/index.md`文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。\n\n---\n\n# 知识性\n### `return`、`break`、`return 0` \n\n### 一句话结论\n\n- 在 `void` 函数里用 `return;` 直接结束函数。\n- `break;` 只退出当前循环/`switch`，函数还会继续往下执行。\n- `return 0;` 是“有返回值的函数”返回整数 0。\n\n#### 最小示例\n\n```cpp\nvoid LinkedList::ascinsert(eleType value) {\n    if (size == 0) {\n        insert(0, value);\n        return;                 // 提前结束整个函数\n    }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i) {\n        if (value <= curr->data) {\n            insert(i, value);\n            return;             // 找到位置后直接结束函数\n        }\n        curr = curr->next;\n    }\n    insert(size, value);\n}\n```\n\n#### 如果把第二个 `return` 换成 `break` 会怎样？\n\n```cpp\nvoid LinkedList::ascinsert(eleType value){\n    if (size == 0) { insert(0, value); return; }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i){\n        if (value <= curr->data){\n            insert(i, value);\n            break;              // 只跳出 for 循环\n        }\n        curr = curr->next;\n    }\n    insert(size, value);        // 仍会执行 → 造成重复插入\n}\n```\n\n- 核心原因：`break` 只离开循环，函数没有结束；而 `return` 结束整个函数。\n\n####  `return;` 和 `return 0;`\n\n- `return 0;`：用于有返回值的函数，返回整数 0。\n- `return;`：用于 `void` 函数，只退出函数，不返回值。\n\n```cpp\nint main() { return 0; }\nint add(int a, int b) { return a + b; }\nvoid ascinsert(eleType v) { /* ... */ return; }\n```\n\n#### 速查表\n\n| 语句        | 适用场景           | 作用                    |\n| ----------- | ------------------ | ----------------------- |\n| `break;`    | 循环或 `switch` 内 | 跳出当前循环/`switch`   |\n| `return;`   | `void` 函数        | 立即结束整个函数        |\n| `return 0;` | 返回 `int` 的函数  | 结束函数并返回 `0`      |\n\n### delete\n\n#### delete\n\n```cpp\nint* p = new int(5);    // 单个对象\ndelete p;               // 正确：不需要[]\n\nint* arr = new int[10]; // 数组\ndelete[] arr;           // 必须加[]\n\n// 错误示范\nint* wrong = new int[10];\ndelete wrong;           // 未使用[] → 内存泄漏/未定义行为\n```\n\n- 不需要加`[]`的情况：\n  1. 释放**单个对象**时用`delete`\n  2. 当指针是`nullptr`时（`delete nullptr`安全但无意义）\n\n- 必须加`[]`的情况：\n  - 释放数组时用`delete[]`\n  - 与`new[]`严格配对使用\n\n- 核心原则：`new`和`delete`形式必须匹配\n\n---\n\n### c中的打印\n```c\nif(x >= 10) \n    printf(\"%c\", 'A' + x - 10);\nelse \n    printf(\"%d\", x);\n```\n\n`printf` 是 C 语言中用于格式化输出的标准函数。格式说明符以 `%` 开头，指定如何显示后续参数。\n\n在上面的代码中：\n- `%c` 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。`'A' + x - 10` 计算出 A-F 对应的字符。\n- `%d` 是十进制整数格式说明符，直接输出数字。\n\n其他常见的格式说明符：\n- `%s`: 字符串\n- `%f`: 浮点数\n- `%x`: 十六进制数（小写 a-f）\n- `%X`: 十六进制数（大写 A-F）\n- `%p`: 指针地址\n\nC++ 中通常使用 `cout` 进行输出：\n```cpp\nif(x >= 10) \n    cout << static_cast<char>('A' + x - 10);\nelse \n    cout << x;\n```\nC 的 `printf` 需要手动指定格式，而 C++ 的 `cout` 会根据变量类型自动选择格式。\n\n\n---\n### 易混括号\n\n#### `Type name[N]` - 数组声明\n```cpp\nQueue<int> q[1001];  // 创建1001个队列对象 ❗易错点\nvector<int> v[5];    // 创建5个vector对象\n```\n**特点：** 创建N个独立的Type对象  \n**坑点：** 这不是1个大小为N的队列，而是N个独立的队列！\n#### `Type name(N)` - 带参构造\n```cpp\nvector<int> v(100);  // 1个vector，含100个元素\nstring s(5, 'a');    // 1个string，5个'a'\n```\n**特点：** 创建1个对象，初始化N个内容\n#### `Type name{N}` - 列表初始化\n```cpp\nvector<int> v{1,2,3}; // 1个vector，元素为1,2,3\nint arr[]{1,2,3};     // 3个int的数组\n```\n**特点：** 使用花括号指定初始值\n##### 快速记忆\n- `[N]` → 多个对象（N个Type）\n- `(N)` → 单个对象，N个内容  \n- `{N}` → 初始化值为N\n\n\n\n","source":"_posts/confusion.md","raw":"---\ntitle: confusion\ndate: 2025-09-17 15:20:10\ncategories:\n  - study\ntags:\n  - C++\n  - \n---\n# 常识性\n### index.md无内容但侧边栏显示仓库\n- index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的`projects`和`repository`部分，非Markdown文件内容决定。\n\n#### Hexo中repository/index.md与主题配置的关系\n在Hexo博客系统中，`source/repository/index.md`文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：\n\n1. **index.md文件的作用**：\n   - 这个文件主要是创建一个名为\"Repositories\"的页面路由（/repository/）\n   - 它包含前置信息（Front Matter）定义了页面标题、布局等基本属性\n   - 文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的\n\n2. **主题配置中的仓库设置**：\n   - 在`themes/pure/_config.yml`文件中，仓库信息通过两个部分配置：\n     ```yaml\n     repository:\n       platform: github # 托管平台（github | gitee）\n       username: Jaxon1216 # 用户名\n     ```\n     和\n     ```yaml\n     projects:\n       cofess/hexo-theme-pure: https://github.com/cofess/hexo-theme-pure\n     ```\n   - `repository`部分定义了平台和用户名\n   - `projects`部分直接列出了要显示的特定仓库\n\n3. **工作原理**：\n   - 当访问`/repository/`页面时，Hexo使用`layout: repository`指定的布局模板\n   - 该模板会读取主题配置文件中的`repository`和`projects`部分\n   - 即使`index.md`文件中没有内容，模板也会根据配置信息渲染出仓库列表\n\n这就是为什么即使`source/repository/index.md`文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。\n\n---\n\n# 知识性\n### `return`、`break`、`return 0` \n\n### 一句话结论\n\n- 在 `void` 函数里用 `return;` 直接结束函数。\n- `break;` 只退出当前循环/`switch`，函数还会继续往下执行。\n- `return 0;` 是“有返回值的函数”返回整数 0。\n\n#### 最小示例\n\n```cpp\nvoid LinkedList::ascinsert(eleType value) {\n    if (size == 0) {\n        insert(0, value);\n        return;                 // 提前结束整个函数\n    }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i) {\n        if (value <= curr->data) {\n            insert(i, value);\n            return;             // 找到位置后直接结束函数\n        }\n        curr = curr->next;\n    }\n    insert(size, value);\n}\n```\n\n#### 如果把第二个 `return` 换成 `break` 会怎样？\n\n```cpp\nvoid LinkedList::ascinsert(eleType value){\n    if (size == 0) { insert(0, value); return; }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i){\n        if (value <= curr->data){\n            insert(i, value);\n            break;              // 只跳出 for 循环\n        }\n        curr = curr->next;\n    }\n    insert(size, value);        // 仍会执行 → 造成重复插入\n}\n```\n\n- 核心原因：`break` 只离开循环，函数没有结束；而 `return` 结束整个函数。\n\n####  `return;` 和 `return 0;`\n\n- `return 0;`：用于有返回值的函数，返回整数 0。\n- `return;`：用于 `void` 函数，只退出函数，不返回值。\n\n```cpp\nint main() { return 0; }\nint add(int a, int b) { return a + b; }\nvoid ascinsert(eleType v) { /* ... */ return; }\n```\n\n#### 速查表\n\n| 语句        | 适用场景           | 作用                    |\n| ----------- | ------------------ | ----------------------- |\n| `break;`    | 循环或 `switch` 内 | 跳出当前循环/`switch`   |\n| `return;`   | `void` 函数        | 立即结束整个函数        |\n| `return 0;` | 返回 `int` 的函数  | 结束函数并返回 `0`      |\n\n### delete\n\n#### delete\n\n```cpp\nint* p = new int(5);    // 单个对象\ndelete p;               // 正确：不需要[]\n\nint* arr = new int[10]; // 数组\ndelete[] arr;           // 必须加[]\n\n// 错误示范\nint* wrong = new int[10];\ndelete wrong;           // 未使用[] → 内存泄漏/未定义行为\n```\n\n- 不需要加`[]`的情况：\n  1. 释放**单个对象**时用`delete`\n  2. 当指针是`nullptr`时（`delete nullptr`安全但无意义）\n\n- 必须加`[]`的情况：\n  - 释放数组时用`delete[]`\n  - 与`new[]`严格配对使用\n\n- 核心原则：`new`和`delete`形式必须匹配\n\n---\n\n### c中的打印\n```c\nif(x >= 10) \n    printf(\"%c\", 'A' + x - 10);\nelse \n    printf(\"%d\", x);\n```\n\n`printf` 是 C 语言中用于格式化输出的标准函数。格式说明符以 `%` 开头，指定如何显示后续参数。\n\n在上面的代码中：\n- `%c` 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。`'A' + x - 10` 计算出 A-F 对应的字符。\n- `%d` 是十进制整数格式说明符，直接输出数字。\n\n其他常见的格式说明符：\n- `%s`: 字符串\n- `%f`: 浮点数\n- `%x`: 十六进制数（小写 a-f）\n- `%X`: 十六进制数（大写 A-F）\n- `%p`: 指针地址\n\nC++ 中通常使用 `cout` 进行输出：\n```cpp\nif(x >= 10) \n    cout << static_cast<char>('A' + x - 10);\nelse \n    cout << x;\n```\nC 的 `printf` 需要手动指定格式，而 C++ 的 `cout` 会根据变量类型自动选择格式。\n\n\n---\n### 易混括号\n\n#### `Type name[N]` - 数组声明\n```cpp\nQueue<int> q[1001];  // 创建1001个队列对象 ❗易错点\nvector<int> v[5];    // 创建5个vector对象\n```\n**特点：** 创建N个独立的Type对象  \n**坑点：** 这不是1个大小为N的队列，而是N个独立的队列！\n#### `Type name(N)` - 带参构造\n```cpp\nvector<int> v(100);  // 1个vector，含100个元素\nstring s(5, 'a');    // 1个string，5个'a'\n```\n**特点：** 创建1个对象，初始化N个内容\n#### `Type name{N}` - 列表初始化\n```cpp\nvector<int> v{1,2,3}; // 1个vector，元素为1,2,3\nint arr[]{1,2,3};     // 3个int的数组\n```\n**特点：** 使用花括号指定初始值\n##### 快速记忆\n- `[N]` → 多个对象（N个Type）\n- `(N)` → 单个对象，N个内容  \n- `{N}` → 初始化值为N\n\n\n\n","slug":"confusion","published":1,"updated":"2025-09-19T05:57:39.666Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdxze0003k49k1lgp8rel","content":"<h1 id=\"常识性\"><a href=\"#常识性\" class=\"headerlink\" title=\"常识性\"></a>常识性</h1><h3 id=\"index-md无内容但侧边栏显示仓库\"><a href=\"#index-md无内容但侧边栏显示仓库\" class=\"headerlink\" title=\"index.md无内容但侧边栏显示仓库\"></a>index.md无内容但侧边栏显示仓库</h3><ul>\n<li>index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的<code>projects</code>和<code>repository</code>部分，非Markdown文件内容决定。</li>\n</ul>\n<h4 id=\"Hexo中repository-index-md与主题配置的关系\"><a href=\"#Hexo中repository-index-md与主题配置的关系\" class=\"headerlink\" title=\"Hexo中repository&#x2F;index.md与主题配置的关系\"></a>Hexo中repository&#x2F;index.md与主题配置的关系</h4><p>在Hexo博客系统中，<code>source/repository/index.md</code>文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：</p>\n<ol>\n<li><p><strong>index.md文件的作用</strong>：</p>\n<ul>\n<li>这个文件主要是创建一个名为”Repositories”的页面路由（&#x2F;repository&#x2F;）</li>\n<li>它包含前置信息（Front Matter）定义了页面标题、布局等基本属性</li>\n<li>文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的</li>\n</ul>\n</li>\n<li><p><strong>主题配置中的仓库设置</strong>：</p>\n<ul>\n<li>在<code>themes/pure/_config.yml</code>文件中，仓库信息通过两个部分配置：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">repository:</span></span><br><span class=\"line\">  <span class=\"attr\">platform:</span> <span class=\"string\">github</span> <span class=\"comment\"># 托管平台（github | gitee）</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">Jaxon1216</span> <span class=\"comment\"># 用户名</span></span><br></pre></td></tr></table></figure>\n和<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">projects:</span></span><br><span class=\"line\">  <span class=\"attr\">cofess/hexo-theme-pure:</span> <span class=\"string\">https://github.com/cofess/hexo-theme-pure</span></span><br></pre></td></tr></table></figure></li>\n<li><code>repository</code>部分定义了平台和用户名</li>\n<li><code>projects</code>部分直接列出了要显示的特定仓库</li>\n</ul>\n</li>\n<li><p><strong>工作原理</strong>：</p>\n<ul>\n<li>当访问<code>/repository/</code>页面时，Hexo使用<code>layout: repository</code>指定的布局模板</li>\n<li>该模板会读取主题配置文件中的<code>repository</code>和<code>projects</code>部分</li>\n<li>即使<code>index.md</code>文件中没有内容，模板也会根据配置信息渲染出仓库列表</li>\n</ul>\n</li>\n</ol>\n<p>这就是为什么即使<code>source/repository/index.md</code>文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。</p>\n<hr>\n<h1 id=\"知识性\"><a href=\"#知识性\" class=\"headerlink\" title=\"知识性\"></a>知识性</h1><h3 id=\"return、break、return-0\"><a href=\"#return、break、return-0\" class=\"headerlink\" title=\"return、break、return 0\"></a><code>return</code>、<code>break</code>、<code>return 0</code></h3><h3 id=\"一句话结论\"><a href=\"#一句话结论\" class=\"headerlink\" title=\"一句话结论\"></a>一句话结论</h3><ul>\n<li>在 <code>void</code> 函数里用 <code>return;</code> 直接结束函数。</li>\n<li><code>break;</code> 只退出当前循环&#x2F;<code>switch</code>，函数还会继续往下执行。</li>\n<li><code>return 0;</code> 是“有返回值的函数”返回整数 0。</li>\n</ul>\n<h4 id=\"最小示例\"><a href=\"#最小示例\" class=\"headerlink\" title=\"最小示例\"></a>最小示例</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;                 <span class=\"comment\">// 提前结束整个函数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;             <span class=\"comment\">// 找到位置后直接结束函数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"如果把第二个-return-换成-break-会怎样？\"><a href=\"#如果把第二个-return-换成-break-会怎样？\" class=\"headerlink\" title=\"如果把第二个 return 换成 break 会怎样？\"></a>如果把第二个 <code>return</code> 换成 <code>break</code> 会怎样？</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123; <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;              <span class=\"comment\">// 只跳出 for 循环</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);        <span class=\"comment\">// 仍会执行 → 造成重复插入</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>核心原因：<code>break</code> 只离开循环，函数没有结束；而 <code>return</code> 结束整个函数。</li>\n</ul>\n<h4 id=\"return-和-return-0\"><a href=\"#return-和-return-0\" class=\"headerlink\" title=\"return; 和 return 0;\"></a><code>return;</code> 和 <code>return 0;</code></h4><ul>\n<li><code>return 0;</code>：用于有返回值的函数，返回整数 0。</li>\n<li><code>return;</code>：用于 <code>void</code> 函数，只退出函数，不返回值。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ascinsert</span><span class=\"params\">(eleType v)</span> </span>&#123; <span class=\"comment\">/* ... */</span> <span class=\"keyword\">return</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"速查表\"><a href=\"#速查表\" class=\"headerlink\" title=\"速查表\"></a>速查表</h4><table>\n<thead>\n<tr>\n<th>语句</th>\n<th>适用场景</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>break;</code></td>\n<td>循环或 <code>switch</code> 内</td>\n<td>跳出当前循环&#x2F;<code>switch</code></td>\n</tr>\n<tr>\n<td><code>return;</code></td>\n<td><code>void</code> 函数</td>\n<td>立即结束整个函数</td>\n</tr>\n<tr>\n<td><code>return 0;</code></td>\n<td>返回 <code>int</code> 的函数</td>\n<td>结束函数并返回 <code>0</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><h4 id=\"delete-1\"><a href=\"#delete-1\" class=\"headerlink\" title=\"delete\"></a>delete</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* p = <span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">5</span>);    <span class=\"comment\">// 单个对象</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> p;               <span class=\"comment\">// 正确：不需要[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>* arr = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>]; <span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span>[] arr;           <span class=\"comment\">// 必须加[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误示范</span></span><br><span class=\"line\"><span class=\"type\">int</span>* wrong = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">delete</span> wrong;           <span class=\"comment\">// 未使用[] → 内存泄漏/未定义行为</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>不需要加<code>[]</code>的情况：</p>\n<ol>\n<li>释放<strong>单个对象</strong>时用<code>delete</code></li>\n<li>当指针是<code>nullptr</code>时（<code>delete nullptr</code>安全但无意义）</li>\n</ol>\n</li>\n<li><p>必须加<code>[]</code>的情况：</p>\n<ul>\n<li>释放数组时用<code>delete[]</code></li>\n<li>与<code>new[]</code>严格配对使用</li>\n</ul>\n</li>\n<li><p>核心原则：<code>new</code>和<code>delete</code>形式必须匹配</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"c中的打印\"><a href=\"#c中的打印\" class=\"headerlink\" title=\"c中的打印\"></a>c中的打印</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, <span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, x);</span><br></pre></td></tr></table></figure>\n\n<p><code>printf</code> 是 C 语言中用于格式化输出的标准函数。格式说明符以 <code>%</code> 开头，指定如何显示后续参数。</p>\n<p>在上面的代码中：</p>\n<ul>\n<li><code>%c</code> 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。<code>&#39;A&#39; + x - 10</code> 计算出 A-F 对应的字符。</li>\n<li><code>%d</code> 是十进制整数格式说明符，直接输出数字。</li>\n</ul>\n<p>其他常见的格式说明符：</p>\n<ul>\n<li><code>%s</code>: 字符串</li>\n<li><code>%f</code>: 浮点数</li>\n<li><code>%x</code>: 十六进制数（小写 a-f）</li>\n<li><code>%X</code>: 十六进制数（大写 A-F）</li>\n<li><code>%p</code>: 指针地址</li>\n</ul>\n<p>C++ 中通常使用 <code>cout</code> 进行输出：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">char</span>&gt;(<span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    cout &lt;&lt; x;</span><br></pre></td></tr></table></figure>\n<p>C 的 <code>printf</code> 需要手动指定格式，而 C++ 的 <code>cout</code> 会根据变量类型自动选择格式。</p>\n<hr>\n<h3 id=\"易混括号\"><a href=\"#易混括号\" class=\"headerlink\" title=\"易混括号\"></a>易混括号</h3><h4 id=\"Type-name-N-数组声明\"><a href=\"#Type-name-N-数组声明\" class=\"headerlink\" title=\"Type name[N] - 数组声明\"></a><code>Type name[N]</code> - 数组声明</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;<span class=\"type\">int</span>&gt; q[<span class=\"number\">1001</span>];  <span class=\"comment\">// 创建1001个队列对象 ❗易错点</span></span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v[<span class=\"number\">5</span>];    <span class=\"comment\">// 创建5个vector对象</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建N个独立的Type对象<br><strong>坑点：</strong> 这不是1个大小为N的队列，而是N个独立的队列！</p>\n<h4 id=\"Type-name-N-带参构造\"><a href=\"#Type-name-N-带参构造\" class=\"headerlink\" title=\"Type name(N) - 带参构造\"></a><code>Type name(N)</code> - 带参构造</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v</span><span class=\"params\">(<span class=\"number\">100</span>)</span></span>;  <span class=\"comment\">// 1个vector，含100个元素</span></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">s</span><span class=\"params\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;    <span class=\"comment\">// 1个string，5个&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建1个对象，初始化N个内容</p>\n<h4 id=\"Type-name-N-列表初始化\"><a href=\"#Type-name-N-列表初始化\" class=\"headerlink\" title=\"Type name{N} - 列表初始化\"></a><code>Type name&#123;N&#125;</code> - 列表初始化</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;; <span class=\"comment\">// 1个vector，元素为1,2,3</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;     <span class=\"comment\">// 3个int的数组</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 使用花括号指定初始值</p>\n<h5 id=\"快速记忆\"><a href=\"#快速记忆\" class=\"headerlink\" title=\"快速记忆\"></a>快速记忆</h5><ul>\n<li><code>[N]</code> → 多个对象（N个Type）</li>\n<li><code>(N)</code> → 单个对象，N个内容  </li>\n<li><code>&#123;N&#125;</code> → 初始化值为N</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"常识性\"><a href=\"#常识性\" class=\"headerlink\" title=\"常识性\"></a>常识性</h1><h3 id=\"index-md无内容但侧边栏显示仓库\"><a href=\"#index-md无内容但侧边栏显示仓库\" class=\"headerlink\" title=\"index.md无内容但侧边栏显示仓库\"></a>index.md无内容但侧边栏显示仓库</h3><ul>\n<li>index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的<code>projects</code>和<code>repository</code>部分，非Markdown文件内容决定。</li>\n</ul>\n<h4 id=\"Hexo中repository-index-md与主题配置的关系\"><a href=\"#Hexo中repository-index-md与主题配置的关系\" class=\"headerlink\" title=\"Hexo中repository&#x2F;index.md与主题配置的关系\"></a>Hexo中repository&#x2F;index.md与主题配置的关系</h4><p>在Hexo博客系统中，<code>source/repository/index.md</code>文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：</p>\n<ol>\n<li><p><strong>index.md文件的作用</strong>：</p>\n<ul>\n<li>这个文件主要是创建一个名为”Repositories”的页面路由（&#x2F;repository&#x2F;）</li>\n<li>它包含前置信息（Front Matter）定义了页面标题、布局等基本属性</li>\n<li>文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的</li>\n</ul>\n</li>\n<li><p><strong>主题配置中的仓库设置</strong>：</p>\n<ul>\n<li>在<code>themes/pure/_config.yml</code>文件中，仓库信息通过两个部分配置：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">repository:</span></span><br><span class=\"line\">  <span class=\"attr\">platform:</span> <span class=\"string\">github</span> <span class=\"comment\"># 托管平台（github | gitee）</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">Jaxon1216</span> <span class=\"comment\"># 用户名</span></span><br></pre></td></tr></table></figure>\n和<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">projects:</span></span><br><span class=\"line\">  <span class=\"attr\">cofess/hexo-theme-pure:</span> <span class=\"string\">https://github.com/cofess/hexo-theme-pure</span></span><br></pre></td></tr></table></figure></li>\n<li><code>repository</code>部分定义了平台和用户名</li>\n<li><code>projects</code>部分直接列出了要显示的特定仓库</li>\n</ul>\n</li>\n<li><p><strong>工作原理</strong>：</p>\n<ul>\n<li>当访问<code>/repository/</code>页面时，Hexo使用<code>layout: repository</code>指定的布局模板</li>\n<li>该模板会读取主题配置文件中的<code>repository</code>和<code>projects</code>部分</li>\n<li>即使<code>index.md</code>文件中没有内容，模板也会根据配置信息渲染出仓库列表</li>\n</ul>\n</li>\n</ol>\n<p>这就是为什么即使<code>source/repository/index.md</code>文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。</p>\n<hr>\n<h1 id=\"知识性\"><a href=\"#知识性\" class=\"headerlink\" title=\"知识性\"></a>知识性</h1><h3 id=\"return、break、return-0\"><a href=\"#return、break、return-0\" class=\"headerlink\" title=\"return、break、return 0\"></a><code>return</code>、<code>break</code>、<code>return 0</code></h3><h3 id=\"一句话结论\"><a href=\"#一句话结论\" class=\"headerlink\" title=\"一句话结论\"></a>一句话结论</h3><ul>\n<li>在 <code>void</code> 函数里用 <code>return;</code> 直接结束函数。</li>\n<li><code>break;</code> 只退出当前循环&#x2F;<code>switch</code>，函数还会继续往下执行。</li>\n<li><code>return 0;</code> 是“有返回值的函数”返回整数 0。</li>\n</ul>\n<h4 id=\"最小示例\"><a href=\"#最小示例\" class=\"headerlink\" title=\"最小示例\"></a>最小示例</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;                 <span class=\"comment\">// 提前结束整个函数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;             <span class=\"comment\">// 找到位置后直接结束函数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"如果把第二个-return-换成-break-会怎样？\"><a href=\"#如果把第二个-return-换成-break-会怎样？\" class=\"headerlink\" title=\"如果把第二个 return 换成 break 会怎样？\"></a>如果把第二个 <code>return</code> 换成 <code>break</code> 会怎样？</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123; <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;              <span class=\"comment\">// 只跳出 for 循环</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);        <span class=\"comment\">// 仍会执行 → 造成重复插入</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>核心原因：<code>break</code> 只离开循环，函数没有结束；而 <code>return</code> 结束整个函数。</li>\n</ul>\n<h4 id=\"return-和-return-0\"><a href=\"#return-和-return-0\" class=\"headerlink\" title=\"return; 和 return 0;\"></a><code>return;</code> 和 <code>return 0;</code></h4><ul>\n<li><code>return 0;</code>：用于有返回值的函数，返回整数 0。</li>\n<li><code>return;</code>：用于 <code>void</code> 函数，只退出函数，不返回值。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ascinsert</span><span class=\"params\">(eleType v)</span> </span>&#123; <span class=\"comment\">/* ... */</span> <span class=\"keyword\">return</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"速查表\"><a href=\"#速查表\" class=\"headerlink\" title=\"速查表\"></a>速查表</h4><table>\n<thead>\n<tr>\n<th>语句</th>\n<th>适用场景</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>break;</code></td>\n<td>循环或 <code>switch</code> 内</td>\n<td>跳出当前循环&#x2F;<code>switch</code></td>\n</tr>\n<tr>\n<td><code>return;</code></td>\n<td><code>void</code> 函数</td>\n<td>立即结束整个函数</td>\n</tr>\n<tr>\n<td><code>return 0;</code></td>\n<td>返回 <code>int</code> 的函数</td>\n<td>结束函数并返回 <code>0</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><h4 id=\"delete-1\"><a href=\"#delete-1\" class=\"headerlink\" title=\"delete\"></a>delete</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* p = <span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">5</span>);    <span class=\"comment\">// 单个对象</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> p;               <span class=\"comment\">// 正确：不需要[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>* arr = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>]; <span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span>[] arr;           <span class=\"comment\">// 必须加[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误示范</span></span><br><span class=\"line\"><span class=\"type\">int</span>* wrong = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">delete</span> wrong;           <span class=\"comment\">// 未使用[] → 内存泄漏/未定义行为</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>不需要加<code>[]</code>的情况：</p>\n<ol>\n<li>释放<strong>单个对象</strong>时用<code>delete</code></li>\n<li>当指针是<code>nullptr</code>时（<code>delete nullptr</code>安全但无意义）</li>\n</ol>\n</li>\n<li><p>必须加<code>[]</code>的情况：</p>\n<ul>\n<li>释放数组时用<code>delete[]</code></li>\n<li>与<code>new[]</code>严格配对使用</li>\n</ul>\n</li>\n<li><p>核心原则：<code>new</code>和<code>delete</code>形式必须匹配</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"c中的打印\"><a href=\"#c中的打印\" class=\"headerlink\" title=\"c中的打印\"></a>c中的打印</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, <span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, x);</span><br></pre></td></tr></table></figure>\n\n<p><code>printf</code> 是 C 语言中用于格式化输出的标准函数。格式说明符以 <code>%</code> 开头，指定如何显示后续参数。</p>\n<p>在上面的代码中：</p>\n<ul>\n<li><code>%c</code> 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。<code>&#39;A&#39; + x - 10</code> 计算出 A-F 对应的字符。</li>\n<li><code>%d</code> 是十进制整数格式说明符，直接输出数字。</li>\n</ul>\n<p>其他常见的格式说明符：</p>\n<ul>\n<li><code>%s</code>: 字符串</li>\n<li><code>%f</code>: 浮点数</li>\n<li><code>%x</code>: 十六进制数（小写 a-f）</li>\n<li><code>%X</code>: 十六进制数（大写 A-F）</li>\n<li><code>%p</code>: 指针地址</li>\n</ul>\n<p>C++ 中通常使用 <code>cout</code> 进行输出：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">char</span>&gt;(<span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    cout &lt;&lt; x;</span><br></pre></td></tr></table></figure>\n<p>C 的 <code>printf</code> 需要手动指定格式，而 C++ 的 <code>cout</code> 会根据变量类型自动选择格式。</p>\n<hr>\n<h3 id=\"易混括号\"><a href=\"#易混括号\" class=\"headerlink\" title=\"易混括号\"></a>易混括号</h3><h4 id=\"Type-name-N-数组声明\"><a href=\"#Type-name-N-数组声明\" class=\"headerlink\" title=\"Type name[N] - 数组声明\"></a><code>Type name[N]</code> - 数组声明</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;<span class=\"type\">int</span>&gt; q[<span class=\"number\">1001</span>];  <span class=\"comment\">// 创建1001个队列对象 ❗易错点</span></span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v[<span class=\"number\">5</span>];    <span class=\"comment\">// 创建5个vector对象</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建N个独立的Type对象<br><strong>坑点：</strong> 这不是1个大小为N的队列，而是N个独立的队列！</p>\n<h4 id=\"Type-name-N-带参构造\"><a href=\"#Type-name-N-带参构造\" class=\"headerlink\" title=\"Type name(N) - 带参构造\"></a><code>Type name(N)</code> - 带参构造</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v</span><span class=\"params\">(<span class=\"number\">100</span>)</span></span>;  <span class=\"comment\">// 1个vector，含100个元素</span></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">s</span><span class=\"params\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;    <span class=\"comment\">// 1个string，5个&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建1个对象，初始化N个内容</p>\n<h4 id=\"Type-name-N-列表初始化\"><a href=\"#Type-name-N-列表初始化\" class=\"headerlink\" title=\"Type name{N} - 列表初始化\"></a><code>Type name&#123;N&#125;</code> - 列表初始化</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;; <span class=\"comment\">// 1个vector，元素为1,2,3</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;     <span class=\"comment\">// 3个int的数组</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 使用花括号指定初始值</p>\n<h5 id=\"快速记忆\"><a href=\"#快速记忆\" class=\"headerlink\" title=\"快速记忆\"></a>快速记忆</h5><ul>\n<li><code>[N]</code> → 多个对象（N个Type）</li>\n<li><code>(N)</code> → 单个对象，N个内容  </li>\n<li><code>&#123;N&#125;</code> → 初始化值为N</li>\n</ul>\n"},{"title":"tools","date":"2025-09-01T07:20:10.000Z","_content":"# git \n### 修改远程仓库地址\n- 查看远程仓库指向\ngit remote -v\n\n### 正确删除文件\n- git rm -r name //remove, recursive递归, 定位到根目录，name直接从下一级开始。\n### Git 分支配置与远程仓库 URL 不匹配\n- 当看到推送目标与预期不符时，检查 git config branch.<分支名>.remote 配置\n- 确保分支的远程仓库配置与 git remote -v 显示的 URL 一致\n- 使用 git config --list | grep branch 可以快速查看所有分支配置\n\n\n# md\n### 插入链接\n- 作者：``[jx's blog]``+``(https://jiangxu.net/ \"个人博客\")``\n\n### 导出为pdf\n- 在md文件页面 ```cmd+Shift+P```\n# Linux\n- pwd 查看当前路径\n\n# 快捷键\n- 撤销 ```cmd``` + ```z```\n- 左移 ```cmd``` + ```[```","source":"_posts/tools.md","raw":"---\ntitle: tools\ndate: 2025-09-01 15:20:10\ncategories:\n  - study\ntags:\n  - git\n  - md\n---\n# git \n### 修改远程仓库地址\n- 查看远程仓库指向\ngit remote -v\n\n### 正确删除文件\n- git rm -r name //remove, recursive递归, 定位到根目录，name直接从下一级开始。\n### Git 分支配置与远程仓库 URL 不匹配\n- 当看到推送目标与预期不符时，检查 git config branch.<分支名>.remote 配置\n- 确保分支的远程仓库配置与 git remote -v 显示的 URL 一致\n- 使用 git config --list | grep branch 可以快速查看所有分支配置\n\n\n# md\n### 插入链接\n- 作者：``[jx's blog]``+``(https://jiangxu.net/ \"个人博客\")``\n\n### 导出为pdf\n- 在md文件页面 ```cmd+Shift+P```\n# Linux\n- pwd 查看当前路径\n\n# 快捷键\n- 撤销 ```cmd``` + ```z```\n- 左移 ```cmd``` + ```[```","slug":"tools","published":1,"updated":"2025-09-18T07:37:57.160Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdxzm0007k49k97mv0uu2","content":"<h1 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h1><h3 id=\"修改远程仓库地址\"><a href=\"#修改远程仓库地址\" class=\"headerlink\" title=\"修改远程仓库地址\"></a>修改远程仓库地址</h3><ul>\n<li>查看远程仓库指向<br>git remote -v</li>\n</ul>\n<h3 id=\"正确删除文件\"><a href=\"#正确删除文件\" class=\"headerlink\" title=\"正确删除文件\"></a>正确删除文件</h3><ul>\n<li>git rm -r name &#x2F;&#x2F;remove, recursive递归, 定位到根目录，name直接从下一级开始。</li>\n</ul>\n<h3 id=\"Git-分支配置与远程仓库-URL-不匹配\"><a href=\"#Git-分支配置与远程仓库-URL-不匹配\" class=\"headerlink\" title=\"Git 分支配置与远程仓库 URL 不匹配\"></a>Git 分支配置与远程仓库 URL 不匹配</h3><ul>\n<li>当看到推送目标与预期不符时，检查 git config branch.&lt;分支名&gt;.remote 配置</li>\n<li>确保分支的远程仓库配置与 git remote -v 显示的 URL 一致</li>\n<li>使用 git config –list | grep branch 可以快速查看所有分支配置</li>\n</ul>\n<h1 id=\"md\"><a href=\"#md\" class=\"headerlink\" title=\"md\"></a>md</h1><h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><ul>\n<li>作者：<code>[jx&#39;s blog]</code>+<code>(https://jiangxu.net/ &quot;个人博客&quot;)</code></li>\n</ul>\n<h3 id=\"导出为pdf\"><a href=\"#导出为pdf\" class=\"headerlink\" title=\"导出为pdf\"></a>导出为pdf</h3><ul>\n<li>在md文件页面 <code>cmd+Shift+P</code></li>\n</ul>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><ul>\n<li>pwd 查看当前路径</li>\n</ul>\n<h1 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h1><ul>\n<li>撤销 <code>cmd</code> + <code>z</code></li>\n<li>左移 <code>cmd</code> + <code>[</code></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h1><h3 id=\"修改远程仓库地址\"><a href=\"#修改远程仓库地址\" class=\"headerlink\" title=\"修改远程仓库地址\"></a>修改远程仓库地址</h3><ul>\n<li>查看远程仓库指向<br>git remote -v</li>\n</ul>\n<h3 id=\"正确删除文件\"><a href=\"#正确删除文件\" class=\"headerlink\" title=\"正确删除文件\"></a>正确删除文件</h3><ul>\n<li>git rm -r name &#x2F;&#x2F;remove, recursive递归, 定位到根目录，name直接从下一级开始。</li>\n</ul>\n<h3 id=\"Git-分支配置与远程仓库-URL-不匹配\"><a href=\"#Git-分支配置与远程仓库-URL-不匹配\" class=\"headerlink\" title=\"Git 分支配置与远程仓库 URL 不匹配\"></a>Git 分支配置与远程仓库 URL 不匹配</h3><ul>\n<li>当看到推送目标与预期不符时，检查 git config branch.&lt;分支名&gt;.remote 配置</li>\n<li>确保分支的远程仓库配置与 git remote -v 显示的 URL 一致</li>\n<li>使用 git config –list | grep branch 可以快速查看所有分支配置</li>\n</ul>\n<h1 id=\"md\"><a href=\"#md\" class=\"headerlink\" title=\"md\"></a>md</h1><h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><ul>\n<li>作者：<code>[jx&#39;s blog]</code>+<code>(https://jiangxu.net/ &quot;个人博客&quot;)</code></li>\n</ul>\n<h3 id=\"导出为pdf\"><a href=\"#导出为pdf\" class=\"headerlink\" title=\"导出为pdf\"></a>导出为pdf</h3><ul>\n<li>在md文件页面 <code>cmd+Shift+P</code></li>\n</ul>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><ul>\n<li>pwd 查看当前路径</li>\n</ul>\n<h1 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h1><ul>\n<li>撤销 <code>cmd</code> + <code>z</code></li>\n<li>左移 <code>cmd</code> + <code>[</code></li>\n</ul>\n"},{"title":"learning materials","date":"2025-08-14T06:02:13.000Z","_content":"\n- 作者blog：[jx's blog](https://jianxgu.net/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n\n## 目录\n\n- [考研最全汇总](#考研最全汇总)\n  - [公共课(数学英语政治)](#公共课数学英语政治)\n  - [专业课](#专业课)\n- [English](#english)\n- [Code](#code)\n- [Mathematics](#mathmatics)\n- [数学建模这一块](#数学建模这一块)\n- [保研这一块](#保研这一块)\n\n---\n> to do list\n\n\n### 考研最全汇总\n- 公共课(数学英语政治)\n`链接:`https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\n\n- 专业课\n`链接:`https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn \n> 提取码: hvjn \n![](/img/math.png)\n\n### English\n- summarize 极力推荐\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n\n### Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n\n\n# mathmatics\n- 除了群文件的，本人略有一些成果：  \n  【腾讯文档】高等数学上册思维导图及公式汇总  \n  `链接：`https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind  \n  > 禁二传\n\n- **26张宇基础30讲**  \n  复制整段内容，打开最新版「夸克APP」即可获取  \n  `链接：`https://pan.quark.cn/s/4c425e839d51\n\n- **考研真相**  \n  `链接:` https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA  \n  `提取码:` euas\n\n- **660**\n  `链接：`https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\n\n# 数学建模这一块\n- **较全的资源**  \n  `链接:` https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef  \n  `提取码:` u7ef  \n  （复制这段内容后打开百度网盘手机App，操作更方便哦）\n\n- **大师兄数学建模**  \n  `链接：`https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA  \n  `提取码：`3xjx\n\n- **清风数学建模**  \n  `论文课件下载链接：`  \n  https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9  \n  `提取码:` jmz9 \n\n- **建模老哥**  \n  `数学建模算法、编程、写作课件`  \n  `链接:` https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020  \n  `提取码:` 1020 \n\n\n  \n# 保研这一块\n\n- 夏令营和预推免通知网站（通知全量实时更新）：  \n  `Github：`  \n  https://github.com/shenyanpai/awesome-summer-camp-2025  \n  `Gitee：`  \n  https://gitee.com/shenyanpai/awesome-summer-camp-2025\n\n","source":"_posts/study-materials.md","raw":"---\ntitle: learning materials\ndate: 2025-08-14 14:02:13\ncategories:\n  - study\ntags:\n  - 资料\n---\n\n- 作者blog：[jx's blog](https://jianxgu.net/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n\n## 目录\n\n- [考研最全汇总](#考研最全汇总)\n  - [公共课(数学英语政治)](#公共课数学英语政治)\n  - [专业课](#专业课)\n- [English](#english)\n- [Code](#code)\n- [Mathematics](#mathmatics)\n- [数学建模这一块](#数学建模这一块)\n- [保研这一块](#保研这一块)\n\n---\n> to do list\n\n\n### 考研最全汇总\n- 公共课(数学英语政治)\n`链接:`https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\n\n- 专业课\n`链接:`https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn \n> 提取码: hvjn \n![](/img/math.png)\n\n### English\n- summarize 极力推荐\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n\n### Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n\n\n# mathmatics\n- 除了群文件的，本人略有一些成果：  \n  【腾讯文档】高等数学上册思维导图及公式汇总  \n  `链接：`https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind  \n  > 禁二传\n\n- **26张宇基础30讲**  \n  复制整段内容，打开最新版「夸克APP」即可获取  \n  `链接：`https://pan.quark.cn/s/4c425e839d51\n\n- **考研真相**  \n  `链接:` https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA  \n  `提取码:` euas\n\n- **660**\n  `链接：`https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\n\n# 数学建模这一块\n- **较全的资源**  \n  `链接:` https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef  \n  `提取码:` u7ef  \n  （复制这段内容后打开百度网盘手机App，操作更方便哦）\n\n- **大师兄数学建模**  \n  `链接：`https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA  \n  `提取码：`3xjx\n\n- **清风数学建模**  \n  `论文课件下载链接：`  \n  https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9  \n  `提取码:` jmz9 \n\n- **建模老哥**  \n  `数学建模算法、编程、写作课件`  \n  `链接:` https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020  \n  `提取码:` 1020 \n\n\n  \n# 保研这一块\n\n- 夏令营和预推免通知网站（通知全量实时更新）：  \n  `Github：`  \n  https://github.com/shenyanpai/awesome-summer-camp-2025  \n  `Gitee：`  \n  https://gitee.com/shenyanpai/awesome-summer-camp-2025\n\n","slug":"study-materials","published":1,"updated":"2025-09-10T12:11:59.642Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdxzt0009k49k3iwi2vh2","content":"<ul>\n<li>作者blog：<a href=\"https://jianxgu.net/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#%E8%80%83%E7%A0%94%E6%9C%80%E5%85%A8%E6%B1%87%E6%80%BB\">考研最全汇总</a><ul>\n<li><a href=\"#%E5%85%AC%E5%85%B1%E8%AF%BE%E6%95%B0%E5%AD%A6%E8%8B%B1%E8%AF%AD%E6%94%BF%E6%B2%BB\">公共课(数学英语政治)</a></li>\n<li><a href=\"#%E4%B8%93%E4%B8%9A%E8%AF%BE\">专业课</a></li>\n</ul>\n</li>\n<li><a href=\"#english\">English</a></li>\n<li><a href=\"#code\">Code</a></li>\n<li><a href=\"#mathmatics\">Mathematics</a></li>\n<li><a href=\"#%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%BF%99%E4%B8%80%E5%9D%97\">数学建模这一块</a></li>\n<li><a href=\"#%E4%BF%9D%E7%A0%94%E8%BF%99%E4%B8%80%E5%9D%97\">保研这一块</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>to do list</p>\n</blockquote>\n<h3 id=\"考研最全汇总\"><a href=\"#考研最全汇总\" class=\"headerlink\" title=\"考研最全汇总\"></a>考研最全汇总</h3><ul>\n<li><p>公共课(数学英语政治)<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\">https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666</a></p>\n</li>\n<li><p>专业课<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn\">https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn</a> </p>\n<blockquote>\n<p>提取码: hvjn<br><img src=\"/img/math.png\"></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><ul>\n<li>summarize 极力推荐<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"mathmatics\"><a href=\"#mathmatics\" class=\"headerlink\" title=\"mathmatics\"></a>mathmatics</h1><ul>\n<li><p>除了群文件的，本人略有一些成果：<br>【腾讯文档】高等数学上册思维导图及公式汇总<br><code>链接：</code><a href=\"https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind\">https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind</a>  </p>\n<blockquote>\n<p>禁二传</p>\n</blockquote>\n</li>\n<li><p><strong>26张宇基础30讲</strong><br>复制整段内容，打开最新版「夸克APP」即可获取<br><code>链接：</code><a href=\"https://pan.quark.cn/s/4c425e839d51\">https://pan.quark.cn/s/4c425e839d51</a></p>\n</li>\n<li><p><strong>考研真相</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA\">https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA</a><br><code>提取码:</code> euas</p>\n</li>\n<li><p><strong>660</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\">https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr</a></p>\n</li>\n</ul>\n<h1 id=\"数学建模这一块\"><a href=\"#数学建模这一块\" class=\"headerlink\" title=\"数学建模这一块\"></a>数学建模这一块</h1><ul>\n<li><p><strong>较全的资源</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef\">https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef</a><br><code>提取码:</code> u7ef<br>（复制这段内容后打开百度网盘手机App，操作更方便哦）</p>\n</li>\n<li><p><strong>大师兄数学建模</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA\">https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA</a><br><code>提取码：</code>3xjx</p>\n</li>\n<li><p><strong>清风数学建模</strong><br><code>论文课件下载链接：</code><br><a href=\"https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9\">https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9</a><br><code>提取码:</code> jmz9 </p>\n</li>\n<li><p><strong>建模老哥</strong><br><code>数学建模算法、编程、写作课件</code><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020\">https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020</a><br><code>提取码:</code> 1020</p>\n</li>\n</ul>\n<h1 id=\"保研这一块\"><a href=\"#保研这一块\" class=\"headerlink\" title=\"保研这一块\"></a>保研这一块</h1><ul>\n<li>夏令营和预推免通知网站（通知全量实时更新）：<br><code>Github：</code><br><a href=\"https://github.com/shenyanpai/awesome-summer-camp-2025\">https://github.com/shenyanpai/awesome-summer-camp-2025</a><br><code>Gitee：</code><br><a href=\"https://gitee.com/shenyanpai/awesome-summer-camp-2025\">https://gitee.com/shenyanpai/awesome-summer-camp-2025</a></li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>作者blog：<a href=\"https://jianxgu.net/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#%E8%80%83%E7%A0%94%E6%9C%80%E5%85%A8%E6%B1%87%E6%80%BB\">考研最全汇总</a><ul>\n<li><a href=\"#%E5%85%AC%E5%85%B1%E8%AF%BE%E6%95%B0%E5%AD%A6%E8%8B%B1%E8%AF%AD%E6%94%BF%E6%B2%BB\">公共课(数学英语政治)</a></li>\n<li><a href=\"#%E4%B8%93%E4%B8%9A%E8%AF%BE\">专业课</a></li>\n</ul>\n</li>\n<li><a href=\"#english\">English</a></li>\n<li><a href=\"#code\">Code</a></li>\n<li><a href=\"#mathmatics\">Mathematics</a></li>\n<li><a href=\"#%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%BF%99%E4%B8%80%E5%9D%97\">数学建模这一块</a></li>\n<li><a href=\"#%E4%BF%9D%E7%A0%94%E8%BF%99%E4%B8%80%E5%9D%97\">保研这一块</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>to do list</p>\n</blockquote>\n<h3 id=\"考研最全汇总\"><a href=\"#考研最全汇总\" class=\"headerlink\" title=\"考研最全汇总\"></a>考研最全汇总</h3><ul>\n<li><p>公共课(数学英语政治)<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\">https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666</a></p>\n</li>\n<li><p>专业课<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn\">https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn</a> </p>\n<blockquote>\n<p>提取码: hvjn<br><img src=\"/img/math.png\"></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><ul>\n<li>summarize 极力推荐<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"mathmatics\"><a href=\"#mathmatics\" class=\"headerlink\" title=\"mathmatics\"></a>mathmatics</h1><ul>\n<li><p>除了群文件的，本人略有一些成果：<br>【腾讯文档】高等数学上册思维导图及公式汇总<br><code>链接：</code><a href=\"https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind\">https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind</a>  </p>\n<blockquote>\n<p>禁二传</p>\n</blockquote>\n</li>\n<li><p><strong>26张宇基础30讲</strong><br>复制整段内容，打开最新版「夸克APP」即可获取<br><code>链接：</code><a href=\"https://pan.quark.cn/s/4c425e839d51\">https://pan.quark.cn/s/4c425e839d51</a></p>\n</li>\n<li><p><strong>考研真相</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA\">https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA</a><br><code>提取码:</code> euas</p>\n</li>\n<li><p><strong>660</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\">https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr</a></p>\n</li>\n</ul>\n<h1 id=\"数学建模这一块\"><a href=\"#数学建模这一块\" class=\"headerlink\" title=\"数学建模这一块\"></a>数学建模这一块</h1><ul>\n<li><p><strong>较全的资源</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef\">https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef</a><br><code>提取码:</code> u7ef<br>（复制这段内容后打开百度网盘手机App，操作更方便哦）</p>\n</li>\n<li><p><strong>大师兄数学建模</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA\">https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA</a><br><code>提取码：</code>3xjx</p>\n</li>\n<li><p><strong>清风数学建模</strong><br><code>论文课件下载链接：</code><br><a href=\"https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9\">https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9</a><br><code>提取码:</code> jmz9 </p>\n</li>\n<li><p><strong>建模老哥</strong><br><code>数学建模算法、编程、写作课件</code><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020\">https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020</a><br><code>提取码:</code> 1020</p>\n</li>\n</ul>\n<h1 id=\"保研这一块\"><a href=\"#保研这一块\" class=\"headerlink\" title=\"保研这一块\"></a>保研这一块</h1><ul>\n<li>夏令营和预推免通知网站（通知全量实时更新）：<br><code>Github：</code><br><a href=\"https://github.com/shenyanpai/awesome-summer-camp-2025\">https://github.com/shenyanpai/awesome-summer-camp-2025</a><br><code>Gitee：</code><br><a href=\"https://gitee.com/shenyanpai/awesome-summer-camp-2025\">https://gitee.com/shenyanpai/awesome-summer-camp-2025</a></li>\n</ul>\n"},{"title":"用 Vercel + Hexo + GitHub 打造自动更新发布的个人网站（以 jiangxu.net 为例）","date":"2025-09-18T04:00:00.000Z","_content":"\n你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 `git push`，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 `jiangxu.net` 为例，顺带聊聊背后的技术原理。\n\n## 我们要得到什么\n\n- 写文章 → `git push` → 几十秒后网站自动发布\n- 自定义域名 `jiangxu.net`，含 `www` 子域\n- 全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）\n\n## 项目现状（以本仓库为例）\n\n本项目是一个标准 Hexo 项目，核心配置如下：\n\n```yaml\n# _config.yml（节选）\nurl: https://jiangxu.net/\ntheme: pure\npost_asset_folder: true\nrelative_link: true\nsyntax_highlighter: highlight.js\n```\n\n```json\n// package.json（节选）\n{\n  \"hexo\": { \"version\": \"7.3.0\" },\n  \"scripts\": {\n    \"start\": \"hexo server\",\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"clean:deploy\": \"hexo clean && hexo generate && hexo deploy\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.3.0\",\n    \"hexo-renderer-marked\": \"^7.0.0\",\n    \"hexo-server\": \"^3.0.0\"\n  }\n}\n```\n\n注意：项目里虽然安装了 `hexo-deployer-git`，但我们将由 Vercel 来托管与发布静态文件，不必再用 `hexo deploy` 推到 GitHub Pages。Vercel 在构建时会执行 `npm ci && npm run build`（或者你自定义的命令），生成 `public/` 目录并发布。\n\n## 架构一图流（你可以先收藏再细看）\n\n```mermaid\nflowchart LR\n  A[本地写 Markdown] --> B[git push 到 GitHub 仓库]\n  B --> C[GitHub 触发 Webhook 通知 Vercel]\n  C --> D[Vercel 拉取最新提交]\n  D --> E[执行构建: hexo generate]\n  E --> F[生成静态站点 public/]\n  F --> G[Vercel 原子发布到全球 CDN]\n  G --> H[用户访问 jiangxu.net 获取最新内容]\n```\n\n## 一步步搭起来\n\n### 1）把 Hexo 项目放到 GitHub\n\n如果你已经有仓库，跳过本节。否则：\n\n```bash\ngit init\ngit remote add origin https://github.com/<your-username>/<your-repo>.git\ngit add .\ngit commit -m \"init blog\"\ngit branch -M main\ngit push -u origin main\n```\n\n### 2）在 Vercel 里“导入”这个仓库\n\n1. 用 GitHub 账号登录 Vercel。\n2. New Project → 选中你的仓库 → Import。\n3. 配置：\n   - Framework Preset：选择 Hexo（或手动）\n   - Install Command：默认（推荐 `npm ci`）\n   - Build Command：`hexo generate`\n   - Output Directory：`public`\n4. 点击 Deploy。几十秒后会拿到一个 `*.vercel.app` 的临时域名。\n\n此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。\n\n### 3）绑定自定义域名 jiangxu.net\n\n在项目 → Settings → Domains 里添加 `jiangxu.net` 与 `www.jiangxu.net`，按提示去域名注册商配置 DNS：\n\n- 根域（apex）：添加 A 记录 → 指向 `76.76.21.21`（Vercel 的 Anycast IP）\n- `www` 子域：添加 CNAME → 指向 `cname.vercel-dns.com`\n\n等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 `www` 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。\n\n顺带一提，Hexo 的 `_config.yml` 已把 `url` 设为 `https://jiangxu.net/`：\n\n```yaml\nurl: https://jiangxu.net/\npretty_urls:\n  trailing_index: true\n  trailing_html: true\n```\n\n这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。\n\n### 4）写作与发布流程（真正的“自动化”）\n\n日常只做三步：\n\n```bash\nhexo new \"我的新文章\"  # 生成草稿/文章\n# 写！配图放到同名资源文件夹（post_asset_folder: true）\ngit add . && git commit -m \"post: 我的新文章\" && git push\n```\n\n然后泡杯咖啡，等 Vercel 自动完成构建与发布。\n\n## 这些技术原理，知其所以然更香\n\n- Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。\n- CI/CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 `hexo generate` → 上传 `public/`。\n- 静态化：Hexo 预渲染为纯静态文件（HTML/CSS/JS），天然适合 CDN，延迟低、可承载高并发。\n- 原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。\n- 缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。\n- 预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。\n\n## 常用实践与“避坑锦囊”\n\n- 资源管理：`post_asset_folder: true` 已开启。用 `source/_posts/我的新文章/` 管理配图，Markdown 里直接相对路径引用，迁移/重构都不怕。\n- 相对链接：`relative_link: true` 可减少跨域/环境差异带来的链接问题。\n- 主题与样式：当前主题为 `pure`。如果你改了主题静态资源路径，别忘了清缓存再构建：`npm run clean && npm run build`。\n- 不混用两套部署：既然用了 Vercel，就不必再通过 `hexo-deployer-git` 推 GitHub Pages，避免“双主发布”互相覆盖。\n- Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 `NODE_VERSION`（如 18/20）并使用 `npm ci`。\n\n## DNS 解析小抄（再来一张图）\n\n```mermaid\ngraph TD\n  User[访客浏览器] -->|jiangxu.net| DNS[权威 DNS]\n  DNS -->|A 76.76.21.21| Vercel[Vercel Edge Network]\n  User2[访客浏览器] -->|www.jiangxu.net| DNS2[权威 DNS]\n  DNS2 -->|CNAME cname.vercel-dns.com| Vercel\n  Vercel --> CDN[全球 CDN 节点]\n  CDN --> Site[静态站点 public/]\n```\n\n## 收尾：写作体验从“还行”升到“上头”\n\n现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。\n\n如果你想继续进阶：\n\n- 在 PR 的 Preview 环境里做 A/B 尝试（比如新主题、新排版）\n- 接入评论系统（如 Gitalk/Giscus），在 Vercel 环境变量里配置 Token\n- 在构建脚本里加上字数统计、站点地图、SEO 插件\n\n愿你写得开心，站点常新。`jiangxu.net` 我们下次见！\n\n\n","source":"_posts/vercel-hexo-github-auto-deploy.md","raw":"---\ntitle: 用 Vercel + Hexo + GitHub 打造自动更新发布的个人网站（以 jiangxu.net 为例）\ndate: 2025-09-18 12:00:00\ncategories:\n- 技术\ntags:\n- Hexo\n- Vercel\n- GitHub\n- CI/CD\n- 域名\n---\n\n你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 `git push`，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 `jiangxu.net` 为例，顺带聊聊背后的技术原理。\n\n## 我们要得到什么\n\n- 写文章 → `git push` → 几十秒后网站自动发布\n- 自定义域名 `jiangxu.net`，含 `www` 子域\n- 全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）\n\n## 项目现状（以本仓库为例）\n\n本项目是一个标准 Hexo 项目，核心配置如下：\n\n```yaml\n# _config.yml（节选）\nurl: https://jiangxu.net/\ntheme: pure\npost_asset_folder: true\nrelative_link: true\nsyntax_highlighter: highlight.js\n```\n\n```json\n// package.json（节选）\n{\n  \"hexo\": { \"version\": \"7.3.0\" },\n  \"scripts\": {\n    \"start\": \"hexo server\",\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"clean:deploy\": \"hexo clean && hexo generate && hexo deploy\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.3.0\",\n    \"hexo-renderer-marked\": \"^7.0.0\",\n    \"hexo-server\": \"^3.0.0\"\n  }\n}\n```\n\n注意：项目里虽然安装了 `hexo-deployer-git`，但我们将由 Vercel 来托管与发布静态文件，不必再用 `hexo deploy` 推到 GitHub Pages。Vercel 在构建时会执行 `npm ci && npm run build`（或者你自定义的命令），生成 `public/` 目录并发布。\n\n## 架构一图流（你可以先收藏再细看）\n\n```mermaid\nflowchart LR\n  A[本地写 Markdown] --> B[git push 到 GitHub 仓库]\n  B --> C[GitHub 触发 Webhook 通知 Vercel]\n  C --> D[Vercel 拉取最新提交]\n  D --> E[执行构建: hexo generate]\n  E --> F[生成静态站点 public/]\n  F --> G[Vercel 原子发布到全球 CDN]\n  G --> H[用户访问 jiangxu.net 获取最新内容]\n```\n\n## 一步步搭起来\n\n### 1）把 Hexo 项目放到 GitHub\n\n如果你已经有仓库，跳过本节。否则：\n\n```bash\ngit init\ngit remote add origin https://github.com/<your-username>/<your-repo>.git\ngit add .\ngit commit -m \"init blog\"\ngit branch -M main\ngit push -u origin main\n```\n\n### 2）在 Vercel 里“导入”这个仓库\n\n1. 用 GitHub 账号登录 Vercel。\n2. New Project → 选中你的仓库 → Import。\n3. 配置：\n   - Framework Preset：选择 Hexo（或手动）\n   - Install Command：默认（推荐 `npm ci`）\n   - Build Command：`hexo generate`\n   - Output Directory：`public`\n4. 点击 Deploy。几十秒后会拿到一个 `*.vercel.app` 的临时域名。\n\n此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。\n\n### 3）绑定自定义域名 jiangxu.net\n\n在项目 → Settings → Domains 里添加 `jiangxu.net` 与 `www.jiangxu.net`，按提示去域名注册商配置 DNS：\n\n- 根域（apex）：添加 A 记录 → 指向 `76.76.21.21`（Vercel 的 Anycast IP）\n- `www` 子域：添加 CNAME → 指向 `cname.vercel-dns.com`\n\n等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 `www` 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。\n\n顺带一提，Hexo 的 `_config.yml` 已把 `url` 设为 `https://jiangxu.net/`：\n\n```yaml\nurl: https://jiangxu.net/\npretty_urls:\n  trailing_index: true\n  trailing_html: true\n```\n\n这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。\n\n### 4）写作与发布流程（真正的“自动化”）\n\n日常只做三步：\n\n```bash\nhexo new \"我的新文章\"  # 生成草稿/文章\n# 写！配图放到同名资源文件夹（post_asset_folder: true）\ngit add . && git commit -m \"post: 我的新文章\" && git push\n```\n\n然后泡杯咖啡，等 Vercel 自动完成构建与发布。\n\n## 这些技术原理，知其所以然更香\n\n- Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。\n- CI/CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 `hexo generate` → 上传 `public/`。\n- 静态化：Hexo 预渲染为纯静态文件（HTML/CSS/JS），天然适合 CDN，延迟低、可承载高并发。\n- 原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。\n- 缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。\n- 预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。\n\n## 常用实践与“避坑锦囊”\n\n- 资源管理：`post_asset_folder: true` 已开启。用 `source/_posts/我的新文章/` 管理配图，Markdown 里直接相对路径引用，迁移/重构都不怕。\n- 相对链接：`relative_link: true` 可减少跨域/环境差异带来的链接问题。\n- 主题与样式：当前主题为 `pure`。如果你改了主题静态资源路径，别忘了清缓存再构建：`npm run clean && npm run build`。\n- 不混用两套部署：既然用了 Vercel，就不必再通过 `hexo-deployer-git` 推 GitHub Pages，避免“双主发布”互相覆盖。\n- Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 `NODE_VERSION`（如 18/20）并使用 `npm ci`。\n\n## DNS 解析小抄（再来一张图）\n\n```mermaid\ngraph TD\n  User[访客浏览器] -->|jiangxu.net| DNS[权威 DNS]\n  DNS -->|A 76.76.21.21| Vercel[Vercel Edge Network]\n  User2[访客浏览器] -->|www.jiangxu.net| DNS2[权威 DNS]\n  DNS2 -->|CNAME cname.vercel-dns.com| Vercel\n  Vercel --> CDN[全球 CDN 节点]\n  CDN --> Site[静态站点 public/]\n```\n\n## 收尾：写作体验从“还行”升到“上头”\n\n现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。\n\n如果你想继续进阶：\n\n- 在 PR 的 Preview 环境里做 A/B 尝试（比如新主题、新排版）\n- 接入评论系统（如 Gitalk/Giscus），在 Vercel 环境变量里配置 Token\n- 在构建脚本里加上字数统计、站点地图、SEO 插件\n\n愿你写得开心，站点常新。`jiangxu.net` 我们下次见！\n\n\n","slug":"vercel-hexo-github-auto-deploy","published":1,"updated":"2025-09-18T02:51:38.821Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdy01000bk49kdlcj5v2a","content":"<p>你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 <code>git push</code>，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 <code>jiangxu.net</code> 为例，顺带聊聊背后的技术原理。</p>\n<h2 id=\"我们要得到什么\"><a href=\"#我们要得到什么\" class=\"headerlink\" title=\"我们要得到什么\"></a>我们要得到什么</h2><ul>\n<li>写文章 → <code>git push</code> → 几十秒后网站自动发布</li>\n<li>自定义域名 <code>jiangxu.net</code>，含 <code>www</code> 子域</li>\n<li>全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）</li>\n</ul>\n<h2 id=\"项目现状（以本仓库为例）\"><a href=\"#项目现状（以本仓库为例）\" class=\"headerlink\" title=\"项目现状（以本仓库为例）\"></a>项目现状（以本仓库为例）</h2><p>本项目是一个标准 Hexo 项目，核心配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml（节选）</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">pure</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">syntax_highlighter:</span> <span class=\"string\">highlight.js</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json（节选）</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;7.3.0&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo server&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo generate&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo deploy&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean:deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.3.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-marked&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-server&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^3.0.0&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：项目里虽然安装了 <code>hexo-deployer-git</code>，但我们将由 Vercel 来托管与发布静态文件，不必再用 <code>hexo deploy</code> 推到 GitHub Pages。Vercel 在构建时会执行 <code>npm ci &amp;&amp; npm run build</code>（或者你自定义的命令），生成 <code>public/</code> 目录并发布。</p>\n<h2 id=\"架构一图流（你可以先收藏再细看）\"><a href=\"#架构一图流（你可以先收藏再细看）\" class=\"headerlink\" title=\"架构一图流（你可以先收藏再细看）\"></a>架构一图流（你可以先收藏再细看）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flowchart LR</span><br><span class=\"line\">  A[本地写 Markdown] --&gt; B[git push 到 GitHub 仓库]</span><br><span class=\"line\">  B --&gt; C[GitHub 触发 Webhook 通知 Vercel]</span><br><span class=\"line\">  C --&gt; D[Vercel 拉取最新提交]</span><br><span class=\"line\">  D --&gt; E[执行构建: hexo generate]</span><br><span class=\"line\">  E --&gt; F[生成静态站点 public/]</span><br><span class=\"line\">  F --&gt; G[Vercel 原子发布到全球 CDN]</span><br><span class=\"line\">  G --&gt; H[用户访问 jiangxu.net 获取最新内容]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一步步搭起来\"><a href=\"#一步步搭起来\" class=\"headerlink\" title=\"一步步搭起来\"></a>一步步搭起来</h2><h3 id=\"1）把-Hexo-项目放到-GitHub\"><a href=\"#1）把-Hexo-项目放到-GitHub\" class=\"headerlink\" title=\"1）把 Hexo 项目放到 GitHub\"></a>1）把 Hexo 项目放到 GitHub</h3><p>如果你已经有仓库，跳过本节。否则：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin https://github.com/&lt;your-username&gt;/&lt;your-repo&gt;.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init blog&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2）在-Vercel-里“导入”这个仓库\"><a href=\"#2）在-Vercel-里“导入”这个仓库\" class=\"headerlink\" title=\"2）在 Vercel 里“导入”这个仓库\"></a>2）在 Vercel 里“导入”这个仓库</h3><ol>\n<li>用 GitHub 账号登录 Vercel。</li>\n<li>New Project → 选中你的仓库 → Import。</li>\n<li>配置：<ul>\n<li>Framework Preset：选择 Hexo（或手动）</li>\n<li>Install Command：默认（推荐 <code>npm ci</code>）</li>\n<li>Build Command：<code>hexo generate</code></li>\n<li>Output Directory：<code>public</code></li>\n</ul>\n</li>\n<li>点击 Deploy。几十秒后会拿到一个 <code>*.vercel.app</code> 的临时域名。</li>\n</ol>\n<p>此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。</p>\n<h3 id=\"3）绑定自定义域名-jiangxu-net\"><a href=\"#3）绑定自定义域名-jiangxu-net\" class=\"headerlink\" title=\"3）绑定自定义域名 jiangxu.net\"></a>3）绑定自定义域名 jiangxu.net</h3><p>在项目 → Settings → Domains 里添加 <code>jiangxu.net</code> 与 <code>www.jiangxu.net</code>，按提示去域名注册商配置 DNS：</p>\n<ul>\n<li>根域（apex）：添加 A 记录 → 指向 <code>76.76.21.21</code>（Vercel 的 Anycast IP）</li>\n<li><code>www</code> 子域：添加 CNAME → 指向 <code>cname.vercel-dns.com</code></li>\n</ul>\n<p>等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 <code>www</code> 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。</p>\n<p>顺带一提，Hexo 的 <code>_config.yml</code> 已把 <code>url</code> 设为 <code>https://jiangxu.net/</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。</p>\n<h3 id=\"4）写作与发布流程（真正的“自动化”）\"><a href=\"#4）写作与发布流程（真正的“自动化”）\" class=\"headerlink\" title=\"4）写作与发布流程（真正的“自动化”）\"></a>4）写作与发布流程（真正的“自动化”）</h3><p>日常只做三步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;我的新文章&quot;</span>  <span class=\"comment\"># 生成草稿/文章</span></span><br><span class=\"line\"><span class=\"comment\"># 写！配图放到同名资源文件夹（post_asset_folder: true）</span></span><br><span class=\"line\">git add . &amp;&amp; git commit -m <span class=\"string\">&quot;post: 我的新文章&quot;</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure>\n\n<p>然后泡杯咖啡，等 Vercel 自动完成构建与发布。</p>\n<h2 id=\"这些技术原理，知其所以然更香\"><a href=\"#这些技术原理，知其所以然更香\" class=\"headerlink\" title=\"这些技术原理，知其所以然更香\"></a>这些技术原理，知其所以然更香</h2><ul>\n<li>Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。</li>\n<li>CI&#x2F;CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 <code>hexo generate</code> → 上传 <code>public/</code>。</li>\n<li>静态化：Hexo 预渲染为纯静态文件（HTML&#x2F;CSS&#x2F;JS），天然适合 CDN，延迟低、可承载高并发。</li>\n<li>原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。</li>\n<li>缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。</li>\n<li>预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。</li>\n</ul>\n<h2 id=\"常用实践与“避坑锦囊”\"><a href=\"#常用实践与“避坑锦囊”\" class=\"headerlink\" title=\"常用实践与“避坑锦囊”\"></a>常用实践与“避坑锦囊”</h2><ul>\n<li>资源管理：<code>post_asset_folder: true</code> 已开启。用 <code>source/_posts/我的新文章/</code> 管理配图，Markdown 里直接相对路径引用，迁移&#x2F;重构都不怕。</li>\n<li>相对链接：<code>relative_link: true</code> 可减少跨域&#x2F;环境差异带来的链接问题。</li>\n<li>主题与样式：当前主题为 <code>pure</code>。如果你改了主题静态资源路径，别忘了清缓存再构建：<code>npm run clean &amp;&amp; npm run build</code>。</li>\n<li>不混用两套部署：既然用了 Vercel，就不必再通过 <code>hexo-deployer-git</code> 推 GitHub Pages，避免“双主发布”互相覆盖。</li>\n<li>Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 <code>NODE_VERSION</code>（如 18&#x2F;20）并使用 <code>npm ci</code>。</li>\n</ul>\n<h2 id=\"DNS-解析小抄（再来一张图）\"><a href=\"#DNS-解析小抄（再来一张图）\" class=\"headerlink\" title=\"DNS 解析小抄（再来一张图）\"></a>DNS 解析小抄（再来一张图）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">  User[访客浏览器] --&gt;|jiangxu.net| DNS[权威 DNS]</span><br><span class=\"line\">  DNS --&gt;|A 76.76.21.21| Vercel[Vercel Edge Network]</span><br><span class=\"line\">  User2[访客浏览器] --&gt;|www.jiangxu.net| DNS2[权威 DNS]</span><br><span class=\"line\">  DNS2 --&gt;|CNAME cname.vercel-dns.com| Vercel</span><br><span class=\"line\">  Vercel --&gt; CDN[全球 CDN 节点]</span><br><span class=\"line\">  CDN --&gt; Site[静态站点 public/]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"收尾：写作体验从“还行”升到“上头”\"><a href=\"#收尾：写作体验从“还行”升到“上头”\" class=\"headerlink\" title=\"收尾：写作体验从“还行”升到“上头”\"></a>收尾：写作体验从“还行”升到“上头”</h2><p>现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。</p>\n<p>如果你想继续进阶：</p>\n<ul>\n<li>在 PR 的 Preview 环境里做 A&#x2F;B 尝试（比如新主题、新排版）</li>\n<li>接入评论系统（如 Gitalk&#x2F;Giscus），在 Vercel 环境变量里配置 Token</li>\n<li>在构建脚本里加上字数统计、站点地图、SEO 插件</li>\n</ul>\n<p>愿你写得开心，站点常新。<code>jiangxu.net</code> 我们下次见！</p>\n","excerpt":"","more":"<p>你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 <code>git push</code>，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 <code>jiangxu.net</code> 为例，顺带聊聊背后的技术原理。</p>\n<h2 id=\"我们要得到什么\"><a href=\"#我们要得到什么\" class=\"headerlink\" title=\"我们要得到什么\"></a>我们要得到什么</h2><ul>\n<li>写文章 → <code>git push</code> → 几十秒后网站自动发布</li>\n<li>自定义域名 <code>jiangxu.net</code>，含 <code>www</code> 子域</li>\n<li>全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）</li>\n</ul>\n<h2 id=\"项目现状（以本仓库为例）\"><a href=\"#项目现状（以本仓库为例）\" class=\"headerlink\" title=\"项目现状（以本仓库为例）\"></a>项目现状（以本仓库为例）</h2><p>本项目是一个标准 Hexo 项目，核心配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml（节选）</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">pure</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">syntax_highlighter:</span> <span class=\"string\">highlight.js</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json（节选）</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;7.3.0&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo server&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo generate&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo deploy&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean:deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.3.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-marked&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-server&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^3.0.0&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：项目里虽然安装了 <code>hexo-deployer-git</code>，但我们将由 Vercel 来托管与发布静态文件，不必再用 <code>hexo deploy</code> 推到 GitHub Pages。Vercel 在构建时会执行 <code>npm ci &amp;&amp; npm run build</code>（或者你自定义的命令），生成 <code>public/</code> 目录并发布。</p>\n<h2 id=\"架构一图流（你可以先收藏再细看）\"><a href=\"#架构一图流（你可以先收藏再细看）\" class=\"headerlink\" title=\"架构一图流（你可以先收藏再细看）\"></a>架构一图流（你可以先收藏再细看）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flowchart LR</span><br><span class=\"line\">  A[本地写 Markdown] --&gt; B[git push 到 GitHub 仓库]</span><br><span class=\"line\">  B --&gt; C[GitHub 触发 Webhook 通知 Vercel]</span><br><span class=\"line\">  C --&gt; D[Vercel 拉取最新提交]</span><br><span class=\"line\">  D --&gt; E[执行构建: hexo generate]</span><br><span class=\"line\">  E --&gt; F[生成静态站点 public/]</span><br><span class=\"line\">  F --&gt; G[Vercel 原子发布到全球 CDN]</span><br><span class=\"line\">  G --&gt; H[用户访问 jiangxu.net 获取最新内容]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一步步搭起来\"><a href=\"#一步步搭起来\" class=\"headerlink\" title=\"一步步搭起来\"></a>一步步搭起来</h2><h3 id=\"1）把-Hexo-项目放到-GitHub\"><a href=\"#1）把-Hexo-项目放到-GitHub\" class=\"headerlink\" title=\"1）把 Hexo 项目放到 GitHub\"></a>1）把 Hexo 项目放到 GitHub</h3><p>如果你已经有仓库，跳过本节。否则：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin https://github.com/&lt;your-username&gt;/&lt;your-repo&gt;.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init blog&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2）在-Vercel-里“导入”这个仓库\"><a href=\"#2）在-Vercel-里“导入”这个仓库\" class=\"headerlink\" title=\"2）在 Vercel 里“导入”这个仓库\"></a>2）在 Vercel 里“导入”这个仓库</h3><ol>\n<li>用 GitHub 账号登录 Vercel。</li>\n<li>New Project → 选中你的仓库 → Import。</li>\n<li>配置：<ul>\n<li>Framework Preset：选择 Hexo（或手动）</li>\n<li>Install Command：默认（推荐 <code>npm ci</code>）</li>\n<li>Build Command：<code>hexo generate</code></li>\n<li>Output Directory：<code>public</code></li>\n</ul>\n</li>\n<li>点击 Deploy。几十秒后会拿到一个 <code>*.vercel.app</code> 的临时域名。</li>\n</ol>\n<p>此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。</p>\n<h3 id=\"3）绑定自定义域名-jiangxu-net\"><a href=\"#3）绑定自定义域名-jiangxu-net\" class=\"headerlink\" title=\"3）绑定自定义域名 jiangxu.net\"></a>3）绑定自定义域名 jiangxu.net</h3><p>在项目 → Settings → Domains 里添加 <code>jiangxu.net</code> 与 <code>www.jiangxu.net</code>，按提示去域名注册商配置 DNS：</p>\n<ul>\n<li>根域（apex）：添加 A 记录 → 指向 <code>76.76.21.21</code>（Vercel 的 Anycast IP）</li>\n<li><code>www</code> 子域：添加 CNAME → 指向 <code>cname.vercel-dns.com</code></li>\n</ul>\n<p>等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 <code>www</code> 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。</p>\n<p>顺带一提，Hexo 的 <code>_config.yml</code> 已把 <code>url</code> 设为 <code>https://jiangxu.net/</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。</p>\n<h3 id=\"4）写作与发布流程（真正的“自动化”）\"><a href=\"#4）写作与发布流程（真正的“自动化”）\" class=\"headerlink\" title=\"4）写作与发布流程（真正的“自动化”）\"></a>4）写作与发布流程（真正的“自动化”）</h3><p>日常只做三步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;我的新文章&quot;</span>  <span class=\"comment\"># 生成草稿/文章</span></span><br><span class=\"line\"><span class=\"comment\"># 写！配图放到同名资源文件夹（post_asset_folder: true）</span></span><br><span class=\"line\">git add . &amp;&amp; git commit -m <span class=\"string\">&quot;post: 我的新文章&quot;</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure>\n\n<p>然后泡杯咖啡，等 Vercel 自动完成构建与发布。</p>\n<h2 id=\"这些技术原理，知其所以然更香\"><a href=\"#这些技术原理，知其所以然更香\" class=\"headerlink\" title=\"这些技术原理，知其所以然更香\"></a>这些技术原理，知其所以然更香</h2><ul>\n<li>Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。</li>\n<li>CI&#x2F;CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 <code>hexo generate</code> → 上传 <code>public/</code>。</li>\n<li>静态化：Hexo 预渲染为纯静态文件（HTML&#x2F;CSS&#x2F;JS），天然适合 CDN，延迟低、可承载高并发。</li>\n<li>原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。</li>\n<li>缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。</li>\n<li>预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。</li>\n</ul>\n<h2 id=\"常用实践与“避坑锦囊”\"><a href=\"#常用实践与“避坑锦囊”\" class=\"headerlink\" title=\"常用实践与“避坑锦囊”\"></a>常用实践与“避坑锦囊”</h2><ul>\n<li>资源管理：<code>post_asset_folder: true</code> 已开启。用 <code>source/_posts/我的新文章/</code> 管理配图，Markdown 里直接相对路径引用，迁移&#x2F;重构都不怕。</li>\n<li>相对链接：<code>relative_link: true</code> 可减少跨域&#x2F;环境差异带来的链接问题。</li>\n<li>主题与样式：当前主题为 <code>pure</code>。如果你改了主题静态资源路径，别忘了清缓存再构建：<code>npm run clean &amp;&amp; npm run build</code>。</li>\n<li>不混用两套部署：既然用了 Vercel，就不必再通过 <code>hexo-deployer-git</code> 推 GitHub Pages，避免“双主发布”互相覆盖。</li>\n<li>Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 <code>NODE_VERSION</code>（如 18&#x2F;20）并使用 <code>npm ci</code>。</li>\n</ul>\n<h2 id=\"DNS-解析小抄（再来一张图）\"><a href=\"#DNS-解析小抄（再来一张图）\" class=\"headerlink\" title=\"DNS 解析小抄（再来一张图）\"></a>DNS 解析小抄（再来一张图）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">  User[访客浏览器] --&gt;|jiangxu.net| DNS[权威 DNS]</span><br><span class=\"line\">  DNS --&gt;|A 76.76.21.21| Vercel[Vercel Edge Network]</span><br><span class=\"line\">  User2[访客浏览器] --&gt;|www.jiangxu.net| DNS2[权威 DNS]</span><br><span class=\"line\">  DNS2 --&gt;|CNAME cname.vercel-dns.com| Vercel</span><br><span class=\"line\">  Vercel --&gt; CDN[全球 CDN 节点]</span><br><span class=\"line\">  CDN --&gt; Site[静态站点 public/]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"收尾：写作体验从“还行”升到“上头”\"><a href=\"#收尾：写作体验从“还行”升到“上头”\" class=\"headerlink\" title=\"收尾：写作体验从“还行”升到“上头”\"></a>收尾：写作体验从“还行”升到“上头”</h2><p>现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。</p>\n<p>如果你想继续进阶：</p>\n<ul>\n<li>在 PR 的 Preview 环境里做 A&#x2F;B 尝试（比如新主题、新排版）</li>\n<li>接入评论系统（如 Gitalk&#x2F;Giscus），在 Vercel 环境变量里配置 Token</li>\n<li>在构建脚本里加上字数统计、站点地图、SEO 插件</li>\n</ul>\n<p>愿你写得开心，站点常新。<code>jiangxu.net</code> 我们下次见！</p>\n"},{"title":"August","date":"2025-08-31T09:32:32.000Z","_content":"- 线代：姜晓千+研掌\n- 数据结构：英雄cpp + 严蔚敏\n- 英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊\n- 减脂：控制饮食，五分化训练\n\n## 2025-08-14 星期四\n- **Mood:** \n- **Note:** 做了今天到开学学习和健身规划，蓄势待发\n- **Math:** \n- **Code:** \n- **Exercise:** \n- **English:** \n\n## 2025-08-15 星期五\n- **Mood:** 8\n- **Note:** \n- **Math:** 1.5h行列式定义，5个性质，5个重要行列式\n- **Code:** 1.5h线性表模版\n- **Exercise:** 38min慢跑5公里\n- **English:** \n  - 30min学歌\n  - 20min观看油管发音视频\"VvsW\"\n  - 20min记单词\n  - 20min豆包口语练习\n  > 修正文本：Hello Doubao, I'm Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers' home for vacation. Now I've come back to school and I'll restart the challenge for about a month. I know you're an AI and can't recognize my pronunciation, but that's okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I've also learned a song named \"Love the Way You Lie\" by Eminem and Rihanna. And I studied the pronunciation difference between \"we\" and \"we've\" on YouTube. Okay, that's all. See you tomorrow.\n\n## 2025-08-16 星期六\n- **Mood:** 6\n- **Note:** 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。\n- **Math:** 2h行列式展开定理，7个行列式重要公式\n- **Code:** 1.5h杭电3题力扣1题\n- **Exercise:**  86 push - ups\n- **English:** \n    - 12min pronunciation-words ending with \"x,t,ck\"\n    - 30min learning \n    - 20min public speaking practice \n    > 修正文本：Hi, my friend. Today is August 16th. Today isn't an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don't know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with 'x', 't' and 'ck'. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.\n\t  > - 冠词使用错误，\"a ordinary day\"应为\"an ordinary day\"。\n\t  > - 时态错误，\"estimated i will score\"应是\"estimated I would score\"，因为\"estimated\"是过去式，从句要用相应过去时态。\n\t  > - 动词搭配，\"spend... in 夯练\"应是\"spend... practicing\"；\"spend... practice\"应是\"spend... practicing\"。\n    > - 名词单复数，\"advicees\"应为\"advice\"，advice 是不可数名词，没有复数形式。\n    > - 中式英语，\"我可能有点木强\"这种表述应转化为符合英语习惯的表达，如\"have a desire to be better\"。\n    \n## 2025-08-18 星期一\n- **Mood:** 6\n- **Note:** 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。\n- **Math:** 1h 矩阵基本运算，矩阵的逆\n- **Code:** 3h 深入学习指针，默写线性表模版，leetcode10题\n- **Exercise:** 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60\n- **English:** 20min youtube发音课\n\n## 2025-08-19 星期二\n- **Mood:** 8\n- **Note:** \n- **Math:** 1h 线性代数前两章笔记整理，\n- **Code:** 3h 十道力扣题目\n- **Exercise:** 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹\n- **English:** \n  - 15min 单词\n\n\n## 2025-08-21 星期四\n- **Mood:** 6\n- **Note:** \n- **Math:** \n- **Code:** 2h 单向链表模版代码\n- **Exercise:** \n- **English:** \n\n\n\n## 2025-08-28 星期四\n- **Mood:** \n- **Note:** \n- **Math:** 2h线性代数\n- **Code:** 1.5h 单向链表力扣题\n- **Exercise:** \n- **English:** \n\n## 2025-08-29 星期五\n- **Mood:** 6\n- **Note:** \n- **Math:** 3h 线性代数，矩阵的逆，矩阵的秩\n- **Code:** \n- **Exercise:** 游泳，憋气蛙\n- **English:** \n\n## 2025-08-31 星期日\n- **Mood:** 4\n- **Note:** 久坐很累\n- **Math:** 3h 伴随矩阵，分块矩阵，向量基本运算\n- **Code:** \n- **Exercise:** \n- **English:** 外刊20min\n","source":"_posts/August.md","raw":"---\ntitle: August\ndate: 2025-08-31 17:32:32\ncategories: \n- diary\ntags:\n- 学习记录\n---\n- 线代：姜晓千+研掌\n- 数据结构：英雄cpp + 严蔚敏\n- 英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊\n- 减脂：控制饮食，五分化训练\n\n## 2025-08-14 星期四\n- **Mood:** \n- **Note:** 做了今天到开学学习和健身规划，蓄势待发\n- **Math:** \n- **Code:** \n- **Exercise:** \n- **English:** \n\n## 2025-08-15 星期五\n- **Mood:** 8\n- **Note:** \n- **Math:** 1.5h行列式定义，5个性质，5个重要行列式\n- **Code:** 1.5h线性表模版\n- **Exercise:** 38min慢跑5公里\n- **English:** \n  - 30min学歌\n  - 20min观看油管发音视频\"VvsW\"\n  - 20min记单词\n  - 20min豆包口语练习\n  > 修正文本：Hello Doubao, I'm Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers' home for vacation. Now I've come back to school and I'll restart the challenge for about a month. I know you're an AI and can't recognize my pronunciation, but that's okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I've also learned a song named \"Love the Way You Lie\" by Eminem and Rihanna. And I studied the pronunciation difference between \"we\" and \"we've\" on YouTube. Okay, that's all. See you tomorrow.\n\n## 2025-08-16 星期六\n- **Mood:** 6\n- **Note:** 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。\n- **Math:** 2h行列式展开定理，7个行列式重要公式\n- **Code:** 1.5h杭电3题力扣1题\n- **Exercise:**  86 push - ups\n- **English:** \n    - 12min pronunciation-words ending with \"x,t,ck\"\n    - 30min learning \n    - 20min public speaking practice \n    > 修正文本：Hi, my friend. Today is August 16th. Today isn't an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don't know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with 'x', 't' and 'ck'. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.\n\t  > - 冠词使用错误，\"a ordinary day\"应为\"an ordinary day\"。\n\t  > - 时态错误，\"estimated i will score\"应是\"estimated I would score\"，因为\"estimated\"是过去式，从句要用相应过去时态。\n\t  > - 动词搭配，\"spend... in 夯练\"应是\"spend... practicing\"；\"spend... practice\"应是\"spend... practicing\"。\n    > - 名词单复数，\"advicees\"应为\"advice\"，advice 是不可数名词，没有复数形式。\n    > - 中式英语，\"我可能有点木强\"这种表述应转化为符合英语习惯的表达，如\"have a desire to be better\"。\n    \n## 2025-08-18 星期一\n- **Mood:** 6\n- **Note:** 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。\n- **Math:** 1h 矩阵基本运算，矩阵的逆\n- **Code:** 3h 深入学习指针，默写线性表模版，leetcode10题\n- **Exercise:** 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60\n- **English:** 20min youtube发音课\n\n## 2025-08-19 星期二\n- **Mood:** 8\n- **Note:** \n- **Math:** 1h 线性代数前两章笔记整理，\n- **Code:** 3h 十道力扣题目\n- **Exercise:** 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹\n- **English:** \n  - 15min 单词\n\n\n## 2025-08-21 星期四\n- **Mood:** 6\n- **Note:** \n- **Math:** \n- **Code:** 2h 单向链表模版代码\n- **Exercise:** \n- **English:** \n\n\n\n## 2025-08-28 星期四\n- **Mood:** \n- **Note:** \n- **Math:** 2h线性代数\n- **Code:** 1.5h 单向链表力扣题\n- **Exercise:** \n- **English:** \n\n## 2025-08-29 星期五\n- **Mood:** 6\n- **Note:** \n- **Math:** 3h 线性代数，矩阵的逆，矩阵的秩\n- **Code:** \n- **Exercise:** 游泳，憋气蛙\n- **English:** \n\n## 2025-08-31 星期日\n- **Mood:** 4\n- **Note:** 久坐很累\n- **Math:** 3h 伴随矩阵，分块矩阵，向量基本运算\n- **Code:** \n- **Exercise:** \n- **English:** 外刊20min\n","slug":"August","published":1,"updated":"2025-09-10T05:34:05.735Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdy0y0016k49khecq6y47","content":"<ul>\n<li>线代：姜晓千+研掌</li>\n<li>数据结构：英雄cpp + 严蔚敏</li>\n<li>英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊</li>\n<li>减脂：控制饮食，五分化训练</li>\n</ul>\n<h2 id=\"2025-08-14-星期四\"><a href=\"#2025-08-14-星期四\" class=\"headerlink\" title=\"2025-08-14 星期四\"></a>2025-08-14 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> 做了今天到开学学习和健身规划，蓄势待发</li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-15-星期五\"><a href=\"#2025-08-15-星期五\" class=\"headerlink\" title=\"2025-08-15 星期五\"></a>2025-08-15 星期五</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1.5h行列式定义，5个性质，5个重要行列式</li>\n<li><strong>Code:</strong> 1.5h线性表模版</li>\n<li><strong>Exercise:</strong> 38min慢跑5公里</li>\n<li><strong>English:</strong> <ul>\n<li>30min学歌</li>\n<li>20min观看油管发音视频”VvsW”</li>\n<li>20min记单词</li>\n<li>20min豆包口语练习<blockquote>\n<p>修正文本：Hello Doubao, I’m Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers’ home for vacation. Now I’ve come back to school and I’ll restart the challenge for about a month. I know you’re an AI and can’t recognize my pronunciation, but that’s okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I’ve also learned a song named “Love the Way You Lie” by Eminem and Rihanna. And I studied the pronunciation difference between “we” and “we’ve” on YouTube. Okay, that’s all. See you tomorrow.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-16-星期六\"><a href=\"#2025-08-16-星期六\" class=\"headerlink\" title=\"2025-08-16 星期六\"></a>2025-08-16 星期六</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。</li>\n<li><strong>Math:</strong> 2h行列式展开定理，7个行列式重要公式</li>\n<li><strong>Code:</strong> 1.5h杭电3题力扣1题</li>\n<li><strong>Exercise:</strong>  86 push - ups</li>\n<li><strong>English:</strong> <ul>\n<li>12min pronunciation-words ending with “x,t,ck”</li>\n<li>30min learning </li>\n<li>20min public speaking practice <blockquote>\n<p>修正文本：Hi, my friend. Today is August 16th. Today isn’t an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don’t know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with ‘x’, ‘t’ and ‘ck’. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.</p>\n<ul>\n<li>冠词使用错误，”a ordinary day”应为”an ordinary day”。</li>\n<li>时态错误，”estimated i will score”应是”estimated I would score”，因为”estimated”是过去式，从句要用相应过去时态。</li>\n<li>动词搭配，”spend… in 夯练”应是”spend… practicing”；”spend… practice”应是”spend… practicing”。</li>\n<li>名词单复数，”advicees”应为”advice”，advice 是不可数名词，没有复数形式。</li>\n<li>中式英语，”我可能有点木强”这种表述应转化为符合英语习惯的表达，如”have a desire to be better”。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-18-星期一\"><a href=\"#2025-08-18-星期一\" class=\"headerlink\" title=\"2025-08-18 星期一\"></a>2025-08-18 星期一</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。</li>\n<li><strong>Math:</strong> 1h 矩阵基本运算，矩阵的逆</li>\n<li><strong>Code:</strong> 3h 深入学习指针，默写线性表模版，leetcode10题</li>\n<li><strong>Exercise:</strong> 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60</li>\n<li><strong>English:</strong> 20min youtube发音课</li>\n</ul>\n<h2 id=\"2025-08-19-星期二\"><a href=\"#2025-08-19-星期二\" class=\"headerlink\" title=\"2025-08-19 星期二\"></a>2025-08-19 星期二</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1h 线性代数前两章笔记整理，</li>\n<li><strong>Code:</strong> 3h 十道力扣题目</li>\n<li><strong>Exercise:</strong> 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹</li>\n<li><strong>English:</strong> <ul>\n<li>15min 单词</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-21-星期四\"><a href=\"#2025-08-21-星期四\" class=\"headerlink\" title=\"2025-08-21 星期四\"></a>2025-08-21 星期四</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> 2h 单向链表模版代码</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-28-星期四\"><a href=\"#2025-08-28-星期四\" class=\"headerlink\" title=\"2025-08-28 星期四\"></a>2025-08-28 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 2h线性代数</li>\n<li><strong>Code:</strong> 1.5h 单向链表力扣题</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-29-星期五\"><a href=\"#2025-08-29-星期五\" class=\"headerlink\" title=\"2025-08-29 星期五\"></a>2025-08-29 星期五</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 3h 线性代数，矩阵的逆，矩阵的秩</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> 游泳，憋气蛙</li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-31-星期日\"><a href=\"#2025-08-31-星期日\" class=\"headerlink\" title=\"2025-08-31 星期日\"></a>2025-08-31 星期日</h2><ul>\n<li><strong>Mood:</strong> 4</li>\n<li><strong>Note:</strong> 久坐很累</li>\n<li><strong>Math:</strong> 3h 伴随矩阵，分块矩阵，向量基本运算</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong> 外刊20min</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>线代：姜晓千+研掌</li>\n<li>数据结构：英雄cpp + 严蔚敏</li>\n<li>英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊</li>\n<li>减脂：控制饮食，五分化训练</li>\n</ul>\n<h2 id=\"2025-08-14-星期四\"><a href=\"#2025-08-14-星期四\" class=\"headerlink\" title=\"2025-08-14 星期四\"></a>2025-08-14 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> 做了今天到开学学习和健身规划，蓄势待发</li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-15-星期五\"><a href=\"#2025-08-15-星期五\" class=\"headerlink\" title=\"2025-08-15 星期五\"></a>2025-08-15 星期五</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1.5h行列式定义，5个性质，5个重要行列式</li>\n<li><strong>Code:</strong> 1.5h线性表模版</li>\n<li><strong>Exercise:</strong> 38min慢跑5公里</li>\n<li><strong>English:</strong> <ul>\n<li>30min学歌</li>\n<li>20min观看油管发音视频”VvsW”</li>\n<li>20min记单词</li>\n<li>20min豆包口语练习<blockquote>\n<p>修正文本：Hello Doubao, I’m Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers’ home for vacation. Now I’ve come back to school and I’ll restart the challenge for about a month. I know you’re an AI and can’t recognize my pronunciation, but that’s okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I’ve also learned a song named “Love the Way You Lie” by Eminem and Rihanna. And I studied the pronunciation difference between “we” and “we’ve” on YouTube. Okay, that’s all. See you tomorrow.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-16-星期六\"><a href=\"#2025-08-16-星期六\" class=\"headerlink\" title=\"2025-08-16 星期六\"></a>2025-08-16 星期六</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。</li>\n<li><strong>Math:</strong> 2h行列式展开定理，7个行列式重要公式</li>\n<li><strong>Code:</strong> 1.5h杭电3题力扣1题</li>\n<li><strong>Exercise:</strong>  86 push - ups</li>\n<li><strong>English:</strong> <ul>\n<li>12min pronunciation-words ending with “x,t,ck”</li>\n<li>30min learning </li>\n<li>20min public speaking practice <blockquote>\n<p>修正文本：Hi, my friend. Today is August 16th. Today isn’t an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don’t know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with ‘x’, ‘t’ and ‘ck’. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.</p>\n<ul>\n<li>冠词使用错误，”a ordinary day”应为”an ordinary day”。</li>\n<li>时态错误，”estimated i will score”应是”estimated I would score”，因为”estimated”是过去式，从句要用相应过去时态。</li>\n<li>动词搭配，”spend… in 夯练”应是”spend… practicing”；”spend… practice”应是”spend… practicing”。</li>\n<li>名词单复数，”advicees”应为”advice”，advice 是不可数名词，没有复数形式。</li>\n<li>中式英语，”我可能有点木强”这种表述应转化为符合英语习惯的表达，如”have a desire to be better”。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-18-星期一\"><a href=\"#2025-08-18-星期一\" class=\"headerlink\" title=\"2025-08-18 星期一\"></a>2025-08-18 星期一</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。</li>\n<li><strong>Math:</strong> 1h 矩阵基本运算，矩阵的逆</li>\n<li><strong>Code:</strong> 3h 深入学习指针，默写线性表模版，leetcode10题</li>\n<li><strong>Exercise:</strong> 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60</li>\n<li><strong>English:</strong> 20min youtube发音课</li>\n</ul>\n<h2 id=\"2025-08-19-星期二\"><a href=\"#2025-08-19-星期二\" class=\"headerlink\" title=\"2025-08-19 星期二\"></a>2025-08-19 星期二</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1h 线性代数前两章笔记整理，</li>\n<li><strong>Code:</strong> 3h 十道力扣题目</li>\n<li><strong>Exercise:</strong> 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹</li>\n<li><strong>English:</strong> <ul>\n<li>15min 单词</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-21-星期四\"><a href=\"#2025-08-21-星期四\" class=\"headerlink\" title=\"2025-08-21 星期四\"></a>2025-08-21 星期四</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> 2h 单向链表模版代码</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-28-星期四\"><a href=\"#2025-08-28-星期四\" class=\"headerlink\" title=\"2025-08-28 星期四\"></a>2025-08-28 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 2h线性代数</li>\n<li><strong>Code:</strong> 1.5h 单向链表力扣题</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-29-星期五\"><a href=\"#2025-08-29-星期五\" class=\"headerlink\" title=\"2025-08-29 星期五\"></a>2025-08-29 星期五</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 3h 线性代数，矩阵的逆，矩阵的秩</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> 游泳，憋气蛙</li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-31-星期日\"><a href=\"#2025-08-31-星期日\" class=\"headerlink\" title=\"2025-08-31 星期日\"></a>2025-08-31 星期日</h2><ul>\n<li><strong>Mood:</strong> 4</li>\n<li><strong>Note:</strong> 久坐很累</li>\n<li><strong>Math:</strong> 3h 伴随矩阵，分块矩阵，向量基本运算</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong> 外刊20min</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/vercel-hexo-github-auto-deploy.pdf","slug":"-auto-deploy.pdf","post":"cmg0gdxyy0001k49k2rdn2gbp","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cmg0gdxyy0001k49k2rdn2gbp","category_id":"cmg0gdxzj0004k49k0cef7nyv","_id":"cmg0gdy0e000hk49kahikd398"},{"post_id":"cmg0gdxze0003k49k1lgp8rel","category_id":"cmg0gdy02000ck49k54lzegbr","_id":"cmg0gdy0h000mk49k0wypavl4"},{"post_id":"cmg0gdxzm0007k49k97mv0uu2","category_id":"cmg0gdy02000ck49k54lzegbr","_id":"cmg0gdy0i000pk49kds3s7uit"},{"post_id":"cmg0gdxzt0009k49k3iwi2vh2","category_id":"cmg0gdy02000ck49k54lzegbr","_id":"cmg0gdy0j000sk49kg2axhk4b"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","category_id":"cmg0gdy0i000ok49kf44f57u0","_id":"cmg0gdy0q000wk49k8s8badmr"},{"post_id":"cmg0gdy0y0016k49khecq6y47","category_id":"cmg0gdxzj0004k49k0cef7nyv","_id":"cmg0gdy0z0018k49k6zthdjlm"}],"PostTag":[{"post_id":"cmg0gdxyy0001k49k2rdn2gbp","tag_id":"cmg0gdxzl0005k49k2s529ldg","_id":"cmg0gdy0a000ek49kdiuk6m8j"},{"post_id":"cmg0gdxze0003k49k1lgp8rel","tag_id":"cmg0gdy03000dk49kg01w3zbt","_id":"cmg0gdy0h000kk49kaupu5j3p"},{"post_id":"cmg0gdxzm0007k49k97mv0uu2","tag_id":"cmg0gdy0f000jk49kdhqucj70","_id":"cmg0gdy0j000rk49kd4k2cjel"},{"post_id":"cmg0gdxzm0007k49k97mv0uu2","tag_id":"cmg0gdy0i000nk49ka2z05qmt","_id":"cmg0gdy0j000tk49k5v8e8rax"},{"post_id":"cmg0gdxzt0009k49k3iwi2vh2","tag_id":"cmg0gdy0i000qk49kh9z991ye","_id":"cmg0gdy0j000vk49k3tub4hr7"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0j000uk49kauln5bex","_id":"cmg0gdy0s0011k49khlal3496"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0q000xk49k5onn7lr7","_id":"cmg0gdy0s0012k49k9mqo3tua"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0r000yk49k7ogf82wq","_id":"cmg0gdy0s0013k49kh4bddb86"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0r000zk49k77agcns3","_id":"cmg0gdy0s0014k49kcb9347ju"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0r0010k49kflol7yqc","_id":"cmg0gdy0s0015k49khssfbgg2"},{"post_id":"cmg0gdy0y0016k49khecq6y47","tag_id":"cmg0gdxzl0005k49k2s529ldg","_id":"cmg0gdy0z0017k49k0llqbs3x"}],"Tag":[{"name":"学习记录","_id":"cmg0gdxzl0005k49k2s529ldg"},{"name":"C++","_id":"cmg0gdy03000dk49kg01w3zbt"},{"name":"git","_id":"cmg0gdy0f000jk49kdhqucj70"},{"name":"md","_id":"cmg0gdy0i000nk49ka2z05qmt"},{"name":"资料","_id":"cmg0gdy0i000qk49kh9z991ye"},{"name":"Hexo","_id":"cmg0gdy0j000uk49kauln5bex"},{"name":"Vercel","_id":"cmg0gdy0q000xk49k5onn7lr7"},{"name":"GitHub","_id":"cmg0gdy0r000yk49k7ogf82wq"},{"name":"CI/CD","_id":"cmg0gdy0r000zk49k77agcns3"},{"name":"域名","_id":"cmg0gdy0r0010k49kflol7yqc"}]}}