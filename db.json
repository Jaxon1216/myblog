{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/pure/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":1,"renderable":1},{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":0},{"_id":"source/img/math.png","path":"img/math.png","modified":1,"renderable":0},{"_id":"source/img/test.png","path":"img/test.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"eeb17af4524cfdbd6181d1335c710e52e8ea22e5","modified":1754320847000},{"_id":"source/_posts/.DS_Store","hash":"5644d47759918173ee4f8d36a1ab8cade9060c8e","modified":1755230572000},{"_id":"source/_posts/August.md","hash":"c6a59888d7ef5dadc71d16a38471dcd299700ee6","modified":1757482445735},{"_id":"source/_posts/Sophomore 1st Sem.md","hash":"d042f933ce3ed2d71cc18c3a82c3a578ddf1afa6","modified":1757482445736},{"_id":"source/_posts/基础知识.md","hash":"a5192de1131c5e669402787a628f92dc91e4b09a","modified":1757482445737},{"_id":"source/_posts/my-study-materials.md","hash":"03ddaf2b6ada4e094cd54df6225a1670ee3ba4b8","modified":1757482445736},{"_id":"source/_posts/普通题目.md","hash":"9a92abe209092286d405e425e3ae785b965ed272","modified":1757482445738},{"_id":"source/_posts/遇到的问题.md","hash":"474d91316aa40537352c28e53dc3fa3c4d244601","modified":1757482445740},{"_id":"source/_posts/资料汇总.md","hash":"57dbb62799b82ede02efc4d3ef9010ac13e78402","modified":1757482445739},{"_id":"source/about/index.md","hash":"2728e82ec6f1d8528e37c86c1e9aaf3c701ae057","modified":1757482445740},{"_id":"source/archives/index.md","hash":"63644c52b6b6282cc9c881674403b69cab4832eb","modified":1757482445741},{"_id":"source/categories/index.md","hash":"8a3af0700db0610249988f28c1fc15a9e71559dd","modified":1757482445743},{"_id":"source/_posts/洛谷题集.md","hash":"8bacfdfdf2794ebe176f374162267134d44056e4","modified":1757482445739},{"_id":"source/links/index.md","hash":"d8ffbb159db78f088da96f2a689052e84d57c78a","modified":1757482445807},{"_id":"source/img/.DS_Store","hash":"503db124acd3a5aa5dd17ae3cb0b47a5bc66315f","modified":1754320842000},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1757482445807},{"_id":"source/books/index.md","hash":"ea659e47c3bdf4deafa957e17472848cbe009759","modified":1757482445742},{"_id":"source/tags/index.md","hash":"539ac4465f170bee4418eb813beeff978ffc69c1","modified":1757482445810},{"_id":"source/img/test.png","hash":"4a24fa814071da9a6799a423dee8891acbd2cf49","modified":1757482445805},{"_id":"source/img/math.png","hash":"49654576ea90732f89ba1e09f6609033722bca57","modified":1757482445801},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1757482446364},{"_id":"themes/pure/README.cn.md","hash":"ddf15a1feb7a2630210aae0528df3504fca23b5e","modified":1757482446365},{"_id":"themes/pure/.DS_Store","hash":"04596f13ecbf99874a6192a8ddf666618350bb0c","modified":1755156077000},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1757482446417},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1757482446366},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1757482446372},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1757482446364},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1757482446373},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1757482446372},{"_id":"themes/pure/_config.yml","hash":"009fcff98c14a603e21b0f6272c8c22841a3816c","modified":1757482446366},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1757482446367},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1757482446373},{"_id":"themes/pure/layout/archive.ejs","hash":"0e9e67a82202ca3971be59579744d43ec6696bbf","modified":1757482446411},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1757482446411},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1757482446412},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1757482446413},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1757482446413},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1757482446414},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1757482446416},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1757482446415},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1757482446415},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1757482446412},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1757482446414},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1757482446416},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1757482446414},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1757482446447},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1757482446452},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1757482446363},{"_id":"themes/pure/source/.DS_Store","hash":"13460358a7e7a6470eddb5afa1d0d039d1edace0","modified":1755156080000},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1757482446362},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1757482446367},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1757482446368},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1757482446368},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1757482446363},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1757482446370},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1757482446369},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1757482446371},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1757482446371},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1757482446371},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1757482446369},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"4e4c7e93ac39545a34134228b463658516f28eb7","modified":1757482446374},{"_id":"themes/pure/layout/_common/header.ejs","hash":"5c1c3461f6781018e87abfde264c1164413625f2","modified":1757482446376},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a9ef77165f459ecdf2dcd3397ca04abbeb560d1f","modified":1757482446377},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1757482446376},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1757482446375},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1757482446378},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1757482446379},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1757482446378},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"1081974f182e8e1ce452d701b8f6575b6dc45b0c","modified":1757482446379},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"3464682ae0359ba23034ac40e8153699c37fb7be","modified":1757482446380},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1757482446381},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1757482446380},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1757482446382},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1757482446382},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1757482446381},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"c792537723b59f437967262c9575a20fac02e911","modified":1757482446383},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"46da1ee327b8af107335146bd8fc131eee6c9c4f","modified":1757482446391},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"fa9e2041c4a6e03f566545db1385c5ae1a80f879","modified":1757482446391},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1757482446400},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"2f3790257d6ad07fdad2043b27950842c9011daa","modified":1757482446383},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1757482446401},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1757482446392},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"ee21c4e7ccac26ff2ab6d1d178447fd11fea4d7e","modified":1757482446401},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1757482446402},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"32f0ac36fa68d8786506957338e552661f2f809c","modified":1757482446403},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1757482446403},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1757482446402},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1757482446405},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1757482446404},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1757482446404},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1757482446406},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1757482446406},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1757482446407},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1757482446405},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1757482446407},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1757482446408},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1757482446410},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1757482446409},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1757482446409},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1757482446452},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1757482446457},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1757482446453},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1757482446458},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1757482446468},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1757482446469},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1757482446469},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1757482446385},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1757482446384},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"15f86fb01e64e784f27dfa2671a9db7c107f1633","modified":1757482446385},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1757482446386},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1757482446387},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1757482446388},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"fcbe3695ae9b164a4a2d27a66a6827dcf3ee76f1","modified":1757482446387},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1757482446388},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1757482446389},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1757482446389},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1757482446390},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1757482446393},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1757482446392},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1757482446393},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1757482446395},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1757482446394},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"de4c43d3056825c14283fe426b8cc677dea59617","modified":1757482446395},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1757482446396},{"_id":"themes/pure/layout/_script/_repository/gitee.ejs","hash":"0e1ecabe809f149ebe3ce3ac393f6e6155dd6780","modified":1757482446398},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1757482446396},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1757482446397},{"_id":"themes/pure/layout/_script/_repository/github.ejs","hash":"a4762135de6816c85156e85886f50fb32b0adc89","modified":1757482446398},{"_id":"themes/pure/layout/_script/_repository/legacy.ejs","hash":"b5e5c666e89550abb5004e35c7ef165c6edab62d","modified":1757482446399},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1757482446399},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1757482446400},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1757482446466},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1757482446466},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1757482446467},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1757482446464},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1757482446386},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1757482446465},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1757482446419},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1757482446422},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1757482446424},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1757482446420},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1757482446426},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1757482446477},{"_id":"themes/pure/source/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1757482446449},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1757482446451},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1757482446456},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1757482446475},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1757482446471},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1757482446473},{"_id":"themes/pure/source/images/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757482446462},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1757482446446},{"_id":"source/img/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757482445795},{"_id":"public/content.json","hash":"c762bbd49b8d5c53b7e07b083e90b01e17c5faa3","modified":1757483246414},{"_id":"public/about/index.html","hash":"3fd92d23a9f6b507c75733e7dde0aa6d214d57ed","modified":1757483246414},{"_id":"public/archives/index.html","hash":"32a791fb7280b2380af27ff71fedc91775259d06","modified":1757483246414},{"_id":"public/books/index.html","hash":"75a97d57eb77fd73b2dcd1b2b6d327f7de2a23e1","modified":1757483246414},{"_id":"public/categories/index.html","hash":"40cf0af24e75b91794311be89ceaea97e1f0137f","modified":1757483246414},{"_id":"public/links/index.html","hash":"05d8eaa722623e7678b6c3f0f5e1cc4ed3724534","modified":1757483246414},{"_id":"public/repository/index.html","hash":"52ca7ad1628b1e4d143dceea9abe48cbdd2e260f","modified":1757483246414},{"_id":"public/tags/index.html","hash":"3121136dad9e3b8e03b5fc49343f3c4ec2a558ed","modified":1757483246414},{"_id":"public/2025/09/09/Sophomore 1st Sem/index.html","hash":"dc8b82d30580ce072c22f45ec28b21281d8b4bee","modified":1757483246414},{"_id":"public/2025/08/31/August/index.html","hash":"e994fb07f31aad780539c4bb92db09f78bbe8ba2","modified":1757483246414},{"_id":"public/2025/08/28/遇到的问题/index.html","hash":"1c7f1a70199621e7350611f9b1a6f85043c73b58","modified":1757483246414},{"_id":"public/2025/08/14/my-study-materials/index.html","hash":"bdf98efdf35e52a9ea0a57656315e743a9eaae71","modified":1757483246414},{"_id":"public/2025/08/04/资料汇总/index.html","hash":"d37b969f55b508e169bf05312120cbded6271212","modified":1757483246414},{"_id":"public/2025/08/04/基础知识/index.html","hash":"152406ab1bc0f21d7e1116bd6d68f3a8449cf05d","modified":1757483246414},{"_id":"public/2025/08/04/洛谷题集/index.html","hash":"9cb1f1c2e053e1122baec817dba3848928b23e0a","modified":1757483246414},{"_id":"public/2025/08/04/普通题目/index.html","hash":"c0eef98c8759a2f8799afebd3870ad0a2f6323a9","modified":1757483246414},{"_id":"public/archives/2025/index.html","hash":"fb8d117bf412aac889a157cd25a3df8c354ef457","modified":1757483246414},{"_id":"public/archives/2025/08/index.html","hash":"fc69814186fbb2a5be9f27a797e91b7ba0e87b25","modified":1757483246414},{"_id":"public/archives/2025/09/index.html","hash":"79210ffd131caf05a8b82118201b20d747b7b4c6","modified":1757483246414},{"_id":"public/index.html","hash":"059bf4a7ede4d39faaab42c9f4a150f1ddb3fe69","modified":1757483246414},{"_id":"public/categories/diary/index.html","hash":"13e92c83b2acfa7bd7f192e6639198501f6ff8b0","modified":1757483246414},{"_id":"public/categories/study/index.html","hash":"26a8f5bc32ed76eac4e2530722986e63ea39d2e5","modified":1757483246414},{"_id":"public/tags/学习记录/index.html","hash":"ca2765881ad2f93474031c5932cd9aa876ea96f5","modified":1757483246414},{"_id":"public/tags/C/index.html","hash":"7caee57524dbea478f7a811c3798b070b7c5abb6","modified":1757483246414},{"_id":"public/tags/资料/index.html","hash":"6c4b5f40743a956d7165b651c33a61ef8800a116","modified":1757483246414},{"_id":"public/tags/题目集/index.html","hash":"a4b31c0c95ce2e2469edf2234406eef605a276be","modified":1757483246414},{"_id":"public/tags/洛谷/index.html","hash":"e12de704d29177c1dffa18f066c049f72d4799db","modified":1757483246414},{"_id":"public/tags/资料汇总/index.html","hash":"6dde7285fcce430be7a19f7b49488411ffc92367","modified":1757483246414},{"_id":"public/tags/学习资源/index.html","hash":"d72a1e55a6bb222cc297d253db1cff53fb98a03f","modified":1757483246414},{"_id":"public/tags/编程/index.html","hash":"986a74d2be152a48fe4f8b770a7707c0a0529b6b","modified":1757483246414},{"_id":"public/tags/数学建模/index.html","hash":"8e78b2946e4792d461b3f5822bf4e2abef7aee5c","modified":1757483246414},{"_id":"public/tags/英语/index.html","hash":"218eebecb652374283ffdaece4bf10fa1dd406e3","modified":1757483246414},{"_id":"public/tags/保研/index.html","hash":"adbe599638045d528c6619f96f7b55c7171fe377","modified":1757483246414},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1757483246414},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1757483246414},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1757483246414},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1757483246414},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1757483246414},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1757483246414},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1757483246414},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1757483246414},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1757483246414},{"_id":"public/fonts/README.html","hash":"3b9daaf126709e3bbce5926e15d599f1fe877921","modified":1757483246414},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1757483246414},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1757483246414},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1757483246414},{"_id":"public/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1757483246414},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1757483246414},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1757483246414},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1757483246414},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1757483246414},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1757483246414},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1757483246414},{"_id":"public/img/test.png","hash":"4a24fa814071da9a6799a423dee8891acbd2cf49","modified":1757483246414},{"_id":"public/img/math.png","hash":"49654576ea90732f89ba1e09f6609033722bca57","modified":1757483246414},{"_id":"public/images/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757483246414},{"_id":"public/img/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757483246414}],"Category":[{"name":"diary","_id":"cmfdk5coq00049c9k9irg69ef"},{"name":"study","_id":"cmfdk5cp2000j9c9k4y0o9za3"}],"Data":[],"Page":[{"title":"about","date":"2025-08-03T12:40:48.000Z","_content":"欢迎来到我的博客！这里是我的个人简介和一些关于我的信息。","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-08-03 20:40:48\n---\n欢迎来到我的博客！这里是我的个人简介和一些关于我的信息。","updated":"2025-09-10T05:34:05.740Z","path":"about/index.html","comments":1,"layout":"page","_id":"cmfdk5cod00009c9kgt6lg6er","content":"<p>欢迎来到我的博客！这里是我的个人简介和一些关于我的信息。</p>\n","excerpt":"","more":"<p>欢迎来到我的博客！这里是我的个人简介和一些关于我的信息。</p>\n"},{"title":"Archives","date":"2024-12-31T16:00:00.000Z","type":"archives","_content":"\n\n","source":"archives/index.md","raw":"---\ntitle: Archives\ndate: 2025-01-01 00:00:00\ntype: archives\n---\n\n\n","updated":"2025-09-10T05:34:05.741Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cmfdk5com00029c9k78k06yf3","content":"","excerpt":"","more":""},{"title":"Books","date":"2024-12-31T16:00:00.000Z","type":"books","_content":" \n\n## 📚 我的书单推荐\n\n### 个人成长\n- **[High Agency](https://www.highagency.com/)** - 21世纪最重要的思维模式：高主动性思维，教你如何成为\"发生在生活中\"而非\"被生活发生\"的人\n\n\n### 数学类\n- **考研数学你真的掌握了吗全套** - 张杨文博士匠心之作\n\n\n### 技术类书籍\n- 暂无\n\n\n\n---\n*最后更新：2025年8月*\n","source":"books/index.md","raw":"---\ntitle: Books\ndate: 2025-01-01 00:00:00\ntype: books\n--- \n\n## 📚 我的书单推荐\n\n### 个人成长\n- **[High Agency](https://www.highagency.com/)** - 21世纪最重要的思维模式：高主动性思维，教你如何成为\"发生在生活中\"而非\"被生活发生\"的人\n\n\n### 数学类\n- **考研数学你真的掌握了吗全套** - 张杨文博士匠心之作\n\n\n### 技术类书籍\n- 暂无\n\n\n\n---\n*最后更新：2025年8月*\n","updated":"2025-09-10T05:34:05.742Z","path":"books/index.html","comments":1,"layout":"page","_id":"cmfdk5cot00069c9kd0whcjwf","content":"<h2 id=\"📚-我的书单推荐\"><a href=\"#📚-我的书单推荐\" class=\"headerlink\" title=\"📚 我的书单推荐\"></a>📚 我的书单推荐</h2><h3 id=\"个人成长\"><a href=\"#个人成长\" class=\"headerlink\" title=\"个人成长\"></a>个人成长</h3><ul>\n<li><strong><a href=\"https://www.highagency.com/\">High Agency</a></strong> - 21世纪最重要的思维模式：高主动性思维，教你如何成为”发生在生活中”而非”被生活发生”的人</li>\n</ul>\n<h3 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h3><ul>\n<li><strong>考研数学你真的掌握了吗全套</strong> - 张杨文博士匠心之作</li>\n</ul>\n<h3 id=\"技术类书籍\"><a href=\"#技术类书籍\" class=\"headerlink\" title=\"技术类书籍\"></a>技术类书籍</h3><ul>\n<li>暂无</li>\n</ul>\n<hr>\n<p><em>最后更新：2025年8月</em></p>\n","excerpt":"","more":"<h2 id=\"📚-我的书单推荐\"><a href=\"#📚-我的书单推荐\" class=\"headerlink\" title=\"📚 我的书单推荐\"></a>📚 我的书单推荐</h2><h3 id=\"个人成长\"><a href=\"#个人成长\" class=\"headerlink\" title=\"个人成长\"></a>个人成长</h3><ul>\n<li><strong><a href=\"https://www.highagency.com/\">High Agency</a></strong> - 21世纪最重要的思维模式：高主动性思维，教你如何成为”发生在生活中”而非”被生活发生”的人</li>\n</ul>\n<h3 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h3><ul>\n<li><strong>考研数学你真的掌握了吗全套</strong> - 张杨文博士匠心之作</li>\n</ul>\n<h3 id=\"技术类书籍\"><a href=\"#技术类书籍\" class=\"headerlink\" title=\"技术类书籍\"></a>技术类书籍</h3><ul>\n<li>暂无</li>\n</ul>\n<hr>\n<p><em>最后更新：2025年8月</em></p>\n"},{"title":"Categories","date":"2024-12-31T16:00:00.000Z","type":"categories","_content":" \n \n","source":"categories/index.md","raw":"---\ntitle: Categories\ndate: 2025-01-01 00:00:00\ntype: categories\n--- \n \n","updated":"2025-09-10T05:34:05.743Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cmfdk5cov00089c9k70g936kd","content":"","excerpt":"","more":""},{"title":"Links","date":"2024-12-31T16:00:00.000Z","type":"links","_content":" ","source":"links/index.md","raw":"---\ntitle: Links\ndate: 2025-01-01 00:00:00\ntype: links\n--- ","updated":"2025-09-10T05:34:05.807Z","path":"links/index.html","comments":1,"layout":"page","_id":"cmfdk5cow000a9c9kdde32e1x","content":"","excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2025-09-10T05:34:05.807Z","updated":"2025-09-10T05:34:05.807Z","path":"repository/index.html","_id":"cmfdk5coz000f9c9kde7x6dnb","content":"","excerpt":"","more":""},{"title":"Tags","date":"2024-12-31T16:00:00.000Z","type":"tags","_content":" ","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2025-01-01 00:00:00\ntype: tags\n--- ","updated":"2025-09-10T05:34:05.810Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cmfdk5cp1000h9c9kdd1l6zdo","content":"","excerpt":"","more":""}],"Post":[{"title":"Sophomore 1st Sem","date":"2025-09-09T09:32:32.000Z","_content":"Goals:\n- 线代基础，高数基础，线代强化，660，张宇30。\n- 数据结构英雄课程过一遍，考研王道课程再来一遍。\n- 按照考研强度准备六级，包括口语。\n- 大英赛，数学竞赛。\nEvents:\n- 9到10月报名蓝桥杯\n- 11月六级 http://cet-bm.neea.edu.cn\n- 11月转专业https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\n- \nIDEA:\n- \n# September\n\n| Date | Day | Math | Code | English | Exercise | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-09-01 | Monday | 3h 线性表示，线性相关无关及其秩| | | 1.5h 游泳，还是没学会换气| |\n| 2025-09-02 | Tuesday | 3h 做题，线性方程组解的性质和判定| | 20min英语趣配音| 2h 俯卧撑100个，跑步4km| 明天一定早早起|\n| 2025-09-07 | Sunday | 3h 同解，特征值特征向量| | |游泳1.5h | |\n| 2025-09-08 | Monday | | |30min 英语单词 | | 做规划，学习如何利用Apple日历|\n| 2025-09-09 | Tuesday | | 3h 线性代数特征值特征向量相似矩阵相似对角化实对称矩阵| | | |\n| 2025-09-10 | Wednesday | | | | | |\n| 2025-09-11 | Thursday | | | | | |\n| 2025-09-12 | Friday | | | | | |\n| 2025-09-13 | Saturday | | | | | |\n| 2025-09-14 | Sunday | | | | | |\n| 2025-09-15 | Monday | | | | | |\n| 2025-09-16 | Tuesday | | | | | |\n| 2025-09-17 | Wednesday | | | | | |\n| 2025-09-18 | Thursday | | | | | |\n| 2025-09-19 | Friday | | | | | |\n| 2025-09-20 | Saturday | | | | | |\n| 2025-09-21 | Sunday | | | | | |\n| 2025-09-22 | Monday | | | | | |\n| 2025-09-23 | Tuesday | | | | | |\n| 2025-09-24 | Wednesday | | | | | |\n| 2025-09-25 | Thursday | | | | | |\n| 2025-09-26 | Friday | | | | | |\n| 2025-09-27 | Saturday | | | | | |\n| 2025-09-28 | Sunday | | | | | |\n| 2025-09-29 | Monday | | | | | |\n| 2025-09-30 | Tuesday | | | | | |\n","source":"_posts/Sophomore 1st Sem.md","raw":"---\ntitle: Sophomore 1st Sem\ndate: 2025-09-9 17:32:32\ncategories: \n- diary\ntags:\n- 学习记录\n---\nGoals:\n- 线代基础，高数基础，线代强化，660，张宇30。\n- 数据结构英雄课程过一遍，考研王道课程再来一遍。\n- 按照考研强度准备六级，包括口语。\n- 大英赛，数学竞赛。\nEvents:\n- 9到10月报名蓝桥杯\n- 11月六级 http://cet-bm.neea.edu.cn\n- 11月转专业https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\n- \nIDEA:\n- \n# September\n\n| Date | Day | Math | Code | English | Exercise | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-09-01 | Monday | 3h 线性表示，线性相关无关及其秩| | | 1.5h 游泳，还是没学会换气| |\n| 2025-09-02 | Tuesday | 3h 做题，线性方程组解的性质和判定| | 20min英语趣配音| 2h 俯卧撑100个，跑步4km| 明天一定早早起|\n| 2025-09-07 | Sunday | 3h 同解，特征值特征向量| | |游泳1.5h | |\n| 2025-09-08 | Monday | | |30min 英语单词 | | 做规划，学习如何利用Apple日历|\n| 2025-09-09 | Tuesday | | 3h 线性代数特征值特征向量相似矩阵相似对角化实对称矩阵| | | |\n| 2025-09-10 | Wednesday | | | | | |\n| 2025-09-11 | Thursday | | | | | |\n| 2025-09-12 | Friday | | | | | |\n| 2025-09-13 | Saturday | | | | | |\n| 2025-09-14 | Sunday | | | | | |\n| 2025-09-15 | Monday | | | | | |\n| 2025-09-16 | Tuesday | | | | | |\n| 2025-09-17 | Wednesday | | | | | |\n| 2025-09-18 | Thursday | | | | | |\n| 2025-09-19 | Friday | | | | | |\n| 2025-09-20 | Saturday | | | | | |\n| 2025-09-21 | Sunday | | | | | |\n| 2025-09-22 | Monday | | | | | |\n| 2025-09-23 | Tuesday | | | | | |\n| 2025-09-24 | Wednesday | | | | | |\n| 2025-09-25 | Thursday | | | | | |\n| 2025-09-26 | Friday | | | | | |\n| 2025-09-27 | Saturday | | | | | |\n| 2025-09-28 | Sunday | | | | | |\n| 2025-09-29 | Monday | | | | | |\n| 2025-09-30 | Tuesday | | | | | |\n","slug":"Sophomore 1st Sem","published":1,"updated":"2025-09-10T05:34:05.736Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5coi00019c9k1kg2eo2t","content":"<p>Goals:</p>\n<ul>\n<li>线代基础，高数基础，线代强化，660，张宇30。</li>\n<li>数据结构英雄课程过一遍，考研王道课程再来一遍。</li>\n<li>按照考研强度准备六级，包括口语。</li>\n<li>大英赛，数学竞赛。<br>Events:</li>\n<li>9到10月报名蓝桥杯</li>\n<li>11月六级 <a href=\"http://cet-bm.neea.edu.cn/\">http://cet-bm.neea.edu.cn</a></li>\n<li>11月转专业<a href=\"https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\">https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml</a></li>\n<li></li>\n</ul>\n<h2 id=\"IDEA\"><a href=\"#IDEA\" class=\"headerlink\" title=\"IDEA:\"></a>IDEA:</h2><h1 id=\"September\"><a href=\"#September\" class=\"headerlink\" title=\"September\"></a>September</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Exercise</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-09-01</td>\n<td>Monday</td>\n<td>3h 线性表示，线性相关无关及其秩</td>\n<td></td>\n<td></td>\n<td>1.5h 游泳，还是没学会换气</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-02</td>\n<td>Tuesday</td>\n<td>3h 做题，线性方程组解的性质和判定</td>\n<td></td>\n<td>20min英语趣配音</td>\n<td>2h 俯卧撑100个，跑步4km</td>\n<td>明天一定早早起</td>\n</tr>\n<tr>\n<td>2025-09-07</td>\n<td>Sunday</td>\n<td>3h 同解，特征值特征向量</td>\n<td></td>\n<td></td>\n<td>游泳1.5h</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-08</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>30min 英语单词</td>\n<td></td>\n<td>做规划，学习如何利用Apple日历</td>\n</tr>\n<tr>\n<td>2025-09-09</td>\n<td>Tuesday</td>\n<td></td>\n<td>3h 线性代数特征值特征向量相似矩阵相似对角化实对称矩阵</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-10</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-11</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-12</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-13</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-14</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-15</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-16</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-17</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-18</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-19</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-20</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-21</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-22</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-23</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-24</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-25</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-26</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-27</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-28</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-29</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-30</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n","excerpt":"","more":"<p>Goals:</p>\n<ul>\n<li>线代基础，高数基础，线代强化，660，张宇30。</li>\n<li>数据结构英雄课程过一遍，考研王道课程再来一遍。</li>\n<li>按照考研强度准备六级，包括口语。</li>\n<li>大英赛，数学竞赛。<br>Events:</li>\n<li>9到10月报名蓝桥杯</li>\n<li>11月六级 <a href=\"http://cet-bm.neea.edu.cn/\">http://cet-bm.neea.edu.cn</a></li>\n<li>11月转专业<a href=\"https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\">https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml</a></li>\n<li></li>\n</ul>\n<h2 id=\"IDEA\"><a href=\"#IDEA\" class=\"headerlink\" title=\"IDEA:\"></a>IDEA:</h2><h1 id=\"September\"><a href=\"#September\" class=\"headerlink\" title=\"September\"></a>September</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Exercise</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-09-01</td>\n<td>Monday</td>\n<td>3h 线性表示，线性相关无关及其秩</td>\n<td></td>\n<td></td>\n<td>1.5h 游泳，还是没学会换气</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-02</td>\n<td>Tuesday</td>\n<td>3h 做题，线性方程组解的性质和判定</td>\n<td></td>\n<td>20min英语趣配音</td>\n<td>2h 俯卧撑100个，跑步4km</td>\n<td>明天一定早早起</td>\n</tr>\n<tr>\n<td>2025-09-07</td>\n<td>Sunday</td>\n<td>3h 同解，特征值特征向量</td>\n<td></td>\n<td></td>\n<td>游泳1.5h</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-08</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>30min 英语单词</td>\n<td></td>\n<td>做规划，学习如何利用Apple日历</td>\n</tr>\n<tr>\n<td>2025-09-09</td>\n<td>Tuesday</td>\n<td></td>\n<td>3h 线性代数特征值特征向量相似矩阵相似对角化实对称矩阵</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-10</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-11</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-12</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-13</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-14</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-15</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-16</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-17</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-18</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-19</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-20</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-21</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-22</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-23</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-24</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-25</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-26</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-27</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-28</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-29</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-30</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n"},{"title":"August","date":"2025-08-31T09:32:32.000Z","_content":"- 线代：姜晓千+研掌\n- 数据结构：英雄cpp + 严蔚敏\n- 英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊\n- 减脂：控制饮食，五分化训练\n\n## 2025-08-14 星期四\n- **Mood:** \n- **Note:** 做了今天到开学学习和健身规划，蓄势待发\n- **Math:** \n- **Code:** \n- **Exercise:** \n- **English:** \n\n## 2025-08-15 星期五\n- **Mood:** 8\n- **Note:** \n- **Math:** 1.5h行列式定义，5个性质，5个重要行列式\n- **Code:** 1.5h线性表模版\n- **Exercise:** 38min慢跑5公里\n- **English:** \n  - 30min学歌\n  - 20min观看油管发音视频\"VvsW\"\n  - 20min记单词\n  - 20min豆包口语练习\n  > 修正文本：Hello Doubao, I'm Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers' home for vacation. Now I've come back to school and I'll restart the challenge for about a month. I know you're an AI and can't recognize my pronunciation, but that's okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I've also learned a song named \"Love the Way You Lie\" by Eminem and Rihanna. And I studied the pronunciation difference between \"we\" and \"we've\" on YouTube. Okay, that's all. See you tomorrow.\n\n## 2025-08-16 星期六\n- **Mood:** 6\n- **Note:** 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。\n- **Math:** 2h行列式展开定理，7个行列式重要公式\n- **Code:** 1.5h杭电3题力扣1题\n- **Exercise:**  86 push - ups\n- **English:** \n    - 12min pronunciation-words ending with \"x,t,ck\"\n    - 30min learning \n    - 20min public speaking practice \n    > 修正文本：Hi, my friend. Today is August 16th. Today isn't an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don't know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with 'x', 't' and 'ck'. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.\n\t  > - 冠词使用错误，\"a ordinary day\"应为\"an ordinary day\"。\n\t  > - 时态错误，\"estimated i will score\"应是\"estimated I would score\"，因为\"estimated\"是过去式，从句要用相应过去时态。\n\t  > - 动词搭配，\"spend... in 夯练\"应是\"spend... practicing\"；\"spend... practice\"应是\"spend... practicing\"。\n    > - 名词单复数，\"advicees\"应为\"advice\"，advice 是不可数名词，没有复数形式。\n    > - 中式英语，\"我可能有点木强\"这种表述应转化为符合英语习惯的表达，如\"have a desire to be better\"。\n    \n## 2025-08-18 星期一\n- **Mood:** 6\n- **Note:** 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。\n- **Math:** 1h 矩阵基本运算，矩阵的逆\n- **Code:** 3h 深入学习指针，默写线性表模版，leetcode10题\n- **Exercise:** 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60\n- **English:** 20min youtube发音课\n\n## 2025-08-19 星期二\n- **Mood:** 8\n- **Note:** \n- **Math:** 1h 线性代数前两章笔记整理，\n- **Code:** 3h 十道力扣题目\n- **Exercise:** 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹\n- **English:** \n  - 15min 单词\n\n\n## 2025-08-21 星期四\n- **Mood:** 6\n- **Note:** \n- **Math:** \n- **Code:** 2h 单向链表模版代码\n- **Exercise:** \n- **English:** \n\n\n\n## 2025-08-28 星期四\n- **Mood:** \n- **Note:** \n- **Math:** 2h线性代数\n- **Code:** 1.5h 单向链表力扣题\n- **Exercise:** \n- **English:** \n\n## 2025-08-29 星期五\n- **Mood:** 6\n- **Note:** \n- **Math:** 3h 线性代数，矩阵的逆，矩阵的秩\n- **Code:** \n- **Exercise:** 游泳，憋气蛙\n- **English:** \n\n## 2025-08-31 星期日\n- **Mood:** 4\n- **Note:** 久坐很累\n- **Math:** 3h 伴随矩阵，分块矩阵，向量基本运算\n- **Code:** \n- **Exercise:** \n- **English:** 外刊20min\n","source":"_posts/August.md","raw":"---\ntitle: August\ndate: 2025-08-31 17:32:32\ncategories: \n- diary\ntags:\n- 学习记录\n---\n- 线代：姜晓千+研掌\n- 数据结构：英雄cpp + 严蔚敏\n- 英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊\n- 减脂：控制饮食，五分化训练\n\n## 2025-08-14 星期四\n- **Mood:** \n- **Note:** 做了今天到开学学习和健身规划，蓄势待发\n- **Math:** \n- **Code:** \n- **Exercise:** \n- **English:** \n\n## 2025-08-15 星期五\n- **Mood:** 8\n- **Note:** \n- **Math:** 1.5h行列式定义，5个性质，5个重要行列式\n- **Code:** 1.5h线性表模版\n- **Exercise:** 38min慢跑5公里\n- **English:** \n  - 30min学歌\n  - 20min观看油管发音视频\"VvsW\"\n  - 20min记单词\n  - 20min豆包口语练习\n  > 修正文本：Hello Doubao, I'm Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers' home for vacation. Now I've come back to school and I'll restart the challenge for about a month. I know you're an AI and can't recognize my pronunciation, but that's okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I've also learned a song named \"Love the Way You Lie\" by Eminem and Rihanna. And I studied the pronunciation difference between \"we\" and \"we've\" on YouTube. Okay, that's all. See you tomorrow.\n\n## 2025-08-16 星期六\n- **Mood:** 6\n- **Note:** 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。\n- **Math:** 2h行列式展开定理，7个行列式重要公式\n- **Code:** 1.5h杭电3题力扣1题\n- **Exercise:**  86 push - ups\n- **English:** \n    - 12min pronunciation-words ending with \"x,t,ck\"\n    - 30min learning \n    - 20min public speaking practice \n    > 修正文本：Hi, my friend. Today is August 16th. Today isn't an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don't know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with 'x', 't' and 'ck'. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.\n\t  > - 冠词使用错误，\"a ordinary day\"应为\"an ordinary day\"。\n\t  > - 时态错误，\"estimated i will score\"应是\"estimated I would score\"，因为\"estimated\"是过去式，从句要用相应过去时态。\n\t  > - 动词搭配，\"spend... in 夯练\"应是\"spend... practicing\"；\"spend... practice\"应是\"spend... practicing\"。\n    > - 名词单复数，\"advicees\"应为\"advice\"，advice 是不可数名词，没有复数形式。\n    > - 中式英语，\"我可能有点木强\"这种表述应转化为符合英语习惯的表达，如\"have a desire to be better\"。\n    \n## 2025-08-18 星期一\n- **Mood:** 6\n- **Note:** 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。\n- **Math:** 1h 矩阵基本运算，矩阵的逆\n- **Code:** 3h 深入学习指针，默写线性表模版，leetcode10题\n- **Exercise:** 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60\n- **English:** 20min youtube发音课\n\n## 2025-08-19 星期二\n- **Mood:** 8\n- **Note:** \n- **Math:** 1h 线性代数前两章笔记整理，\n- **Code:** 3h 十道力扣题目\n- **Exercise:** 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹\n- **English:** \n  - 15min 单词\n\n\n## 2025-08-21 星期四\n- **Mood:** 6\n- **Note:** \n- **Math:** \n- **Code:** 2h 单向链表模版代码\n- **Exercise:** \n- **English:** \n\n\n\n## 2025-08-28 星期四\n- **Mood:** \n- **Note:** \n- **Math:** 2h线性代数\n- **Code:** 1.5h 单向链表力扣题\n- **Exercise:** \n- **English:** \n\n## 2025-08-29 星期五\n- **Mood:** 6\n- **Note:** \n- **Math:** 3h 线性代数，矩阵的逆，矩阵的秩\n- **Code:** \n- **Exercise:** 游泳，憋气蛙\n- **English:** \n\n## 2025-08-31 星期日\n- **Mood:** 4\n- **Note:** 久坐很累\n- **Math:** 3h 伴随矩阵，分块矩阵，向量基本运算\n- **Code:** \n- **Exercise:** \n- **English:** 外刊20min\n","slug":"August","published":1,"updated":"2025-09-10T05:34:05.735Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5com00039c9k74hd00dm","content":"<ul>\n<li>线代：姜晓千+研掌</li>\n<li>数据结构：英雄cpp + 严蔚敏</li>\n<li>英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊</li>\n<li>减脂：控制饮食，五分化训练</li>\n</ul>\n<h2 id=\"2025-08-14-星期四\"><a href=\"#2025-08-14-星期四\" class=\"headerlink\" title=\"2025-08-14 星期四\"></a>2025-08-14 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> 做了今天到开学学习和健身规划，蓄势待发</li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-15-星期五\"><a href=\"#2025-08-15-星期五\" class=\"headerlink\" title=\"2025-08-15 星期五\"></a>2025-08-15 星期五</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1.5h行列式定义，5个性质，5个重要行列式</li>\n<li><strong>Code:</strong> 1.5h线性表模版</li>\n<li><strong>Exercise:</strong> 38min慢跑5公里</li>\n<li><strong>English:</strong> <ul>\n<li>30min学歌</li>\n<li>20min观看油管发音视频”VvsW”</li>\n<li>20min记单词</li>\n<li>20min豆包口语练习<blockquote>\n<p>修正文本：Hello Doubao, I’m Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers’ home for vacation. Now I’ve come back to school and I’ll restart the challenge for about a month. I know you’re an AI and can’t recognize my pronunciation, but that’s okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I’ve also learned a song named “Love the Way You Lie” by Eminem and Rihanna. And I studied the pronunciation difference between “we” and “we’ve” on YouTube. Okay, that’s all. See you tomorrow.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-16-星期六\"><a href=\"#2025-08-16-星期六\" class=\"headerlink\" title=\"2025-08-16 星期六\"></a>2025-08-16 星期六</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。</li>\n<li><strong>Math:</strong> 2h行列式展开定理，7个行列式重要公式</li>\n<li><strong>Code:</strong> 1.5h杭电3题力扣1题</li>\n<li><strong>Exercise:</strong>  86 push - ups</li>\n<li><strong>English:</strong> <ul>\n<li>12min pronunciation-words ending with “x,t,ck”</li>\n<li>30min learning </li>\n<li>20min public speaking practice <blockquote>\n<p>修正文本：Hi, my friend. Today is August 16th. Today isn’t an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don’t know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with ‘x’, ‘t’ and ‘ck’. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.</p>\n<ul>\n<li>冠词使用错误，”a ordinary day”应为”an ordinary day”。</li>\n<li>时态错误，”estimated i will score”应是”estimated I would score”，因为”estimated”是过去式，从句要用相应过去时态。</li>\n<li>动词搭配，”spend… in 夯练”应是”spend… practicing”；”spend… practice”应是”spend… practicing”。</li>\n<li>名词单复数，”advicees”应为”advice”，advice 是不可数名词，没有复数形式。</li>\n<li>中式英语，”我可能有点木强”这种表述应转化为符合英语习惯的表达，如”have a desire to be better”。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-18-星期一\"><a href=\"#2025-08-18-星期一\" class=\"headerlink\" title=\"2025-08-18 星期一\"></a>2025-08-18 星期一</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。</li>\n<li><strong>Math:</strong> 1h 矩阵基本运算，矩阵的逆</li>\n<li><strong>Code:</strong> 3h 深入学习指针，默写线性表模版，leetcode10题</li>\n<li><strong>Exercise:</strong> 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60</li>\n<li><strong>English:</strong> 20min youtube发音课</li>\n</ul>\n<h2 id=\"2025-08-19-星期二\"><a href=\"#2025-08-19-星期二\" class=\"headerlink\" title=\"2025-08-19 星期二\"></a>2025-08-19 星期二</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1h 线性代数前两章笔记整理，</li>\n<li><strong>Code:</strong> 3h 十道力扣题目</li>\n<li><strong>Exercise:</strong> 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹</li>\n<li><strong>English:</strong> <ul>\n<li>15min 单词</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-21-星期四\"><a href=\"#2025-08-21-星期四\" class=\"headerlink\" title=\"2025-08-21 星期四\"></a>2025-08-21 星期四</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> 2h 单向链表模版代码</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-28-星期四\"><a href=\"#2025-08-28-星期四\" class=\"headerlink\" title=\"2025-08-28 星期四\"></a>2025-08-28 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 2h线性代数</li>\n<li><strong>Code:</strong> 1.5h 单向链表力扣题</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-29-星期五\"><a href=\"#2025-08-29-星期五\" class=\"headerlink\" title=\"2025-08-29 星期五\"></a>2025-08-29 星期五</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 3h 线性代数，矩阵的逆，矩阵的秩</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> 游泳，憋气蛙</li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-31-星期日\"><a href=\"#2025-08-31-星期日\" class=\"headerlink\" title=\"2025-08-31 星期日\"></a>2025-08-31 星期日</h2><ul>\n<li><strong>Mood:</strong> 4</li>\n<li><strong>Note:</strong> 久坐很累</li>\n<li><strong>Math:</strong> 3h 伴随矩阵，分块矩阵，向量基本运算</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong> 外刊20min</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>线代：姜晓千+研掌</li>\n<li>数据结构：英雄cpp + 严蔚敏</li>\n<li>英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊</li>\n<li>减脂：控制饮食，五分化训练</li>\n</ul>\n<h2 id=\"2025-08-14-星期四\"><a href=\"#2025-08-14-星期四\" class=\"headerlink\" title=\"2025-08-14 星期四\"></a>2025-08-14 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> 做了今天到开学学习和健身规划，蓄势待发</li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-15-星期五\"><a href=\"#2025-08-15-星期五\" class=\"headerlink\" title=\"2025-08-15 星期五\"></a>2025-08-15 星期五</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1.5h行列式定义，5个性质，5个重要行列式</li>\n<li><strong>Code:</strong> 1.5h线性表模版</li>\n<li><strong>Exercise:</strong> 38min慢跑5公里</li>\n<li><strong>English:</strong> <ul>\n<li>30min学歌</li>\n<li>20min观看油管发音视频”VvsW”</li>\n<li>20min记单词</li>\n<li>20min豆包口语练习<blockquote>\n<p>修正文本：Hello Doubao, I’m Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers’ home for vacation. Now I’ve come back to school and I’ll restart the challenge for about a month. I know you’re an AI and can’t recognize my pronunciation, but that’s okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I’ve also learned a song named “Love the Way You Lie” by Eminem and Rihanna. And I studied the pronunciation difference between “we” and “we’ve” on YouTube. Okay, that’s all. See you tomorrow.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-16-星期六\"><a href=\"#2025-08-16-星期六\" class=\"headerlink\" title=\"2025-08-16 星期六\"></a>2025-08-16 星期六</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。</li>\n<li><strong>Math:</strong> 2h行列式展开定理，7个行列式重要公式</li>\n<li><strong>Code:</strong> 1.5h杭电3题力扣1题</li>\n<li><strong>Exercise:</strong>  86 push - ups</li>\n<li><strong>English:</strong> <ul>\n<li>12min pronunciation-words ending with “x,t,ck”</li>\n<li>30min learning </li>\n<li>20min public speaking practice <blockquote>\n<p>修正文本：Hi, my friend. Today is August 16th. Today isn’t an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don’t know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with ‘x’, ‘t’ and ‘ck’. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.</p>\n<ul>\n<li>冠词使用错误，”a ordinary day”应为”an ordinary day”。</li>\n<li>时态错误，”estimated i will score”应是”estimated I would score”，因为”estimated”是过去式，从句要用相应过去时态。</li>\n<li>动词搭配，”spend… in 夯练”应是”spend… practicing”；”spend… practice”应是”spend… practicing”。</li>\n<li>名词单复数，”advicees”应为”advice”，advice 是不可数名词，没有复数形式。</li>\n<li>中式英语，”我可能有点木强”这种表述应转化为符合英语习惯的表达，如”have a desire to be better”。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-18-星期一\"><a href=\"#2025-08-18-星期一\" class=\"headerlink\" title=\"2025-08-18 星期一\"></a>2025-08-18 星期一</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。</li>\n<li><strong>Math:</strong> 1h 矩阵基本运算，矩阵的逆</li>\n<li><strong>Code:</strong> 3h 深入学习指针，默写线性表模版，leetcode10题</li>\n<li><strong>Exercise:</strong> 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60</li>\n<li><strong>English:</strong> 20min youtube发音课</li>\n</ul>\n<h2 id=\"2025-08-19-星期二\"><a href=\"#2025-08-19-星期二\" class=\"headerlink\" title=\"2025-08-19 星期二\"></a>2025-08-19 星期二</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1h 线性代数前两章笔记整理，</li>\n<li><strong>Code:</strong> 3h 十道力扣题目</li>\n<li><strong>Exercise:</strong> 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹</li>\n<li><strong>English:</strong> <ul>\n<li>15min 单词</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-21-星期四\"><a href=\"#2025-08-21-星期四\" class=\"headerlink\" title=\"2025-08-21 星期四\"></a>2025-08-21 星期四</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> 2h 单向链表模版代码</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-28-星期四\"><a href=\"#2025-08-28-星期四\" class=\"headerlink\" title=\"2025-08-28 星期四\"></a>2025-08-28 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 2h线性代数</li>\n<li><strong>Code:</strong> 1.5h 单向链表力扣题</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-29-星期五\"><a href=\"#2025-08-29-星期五\" class=\"headerlink\" title=\"2025-08-29 星期五\"></a>2025-08-29 星期五</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 3h 线性代数，矩阵的逆，矩阵的秩</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> 游泳，憋气蛙</li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-31-星期日\"><a href=\"#2025-08-31-星期日\" class=\"headerlink\" title=\"2025-08-31 星期日\"></a>2025-08-31 星期日</h2><ul>\n<li><strong>Mood:</strong> 4</li>\n<li><strong>Note:</strong> 久坐很累</li>\n<li><strong>Math:</strong> 3h 伴随矩阵，分块矩阵，向量基本运算</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong> 外刊20min</li>\n</ul>\n"},{"title":"C++基础知识","date":"2025-08-04T14:29:24.000Z","_content":"\n## 目录\n1. [C++基础概念](#c基础概念)\n2. [面向对象编程](#面向对象编程)\n3. [理论知识点](#理论知识点)\n\n---\n\n## C++基础概念\n\n### 结构体\n\n**结构体定义和使用：**\n结构体是一种自定义的数据类型，可以包含多个不同类型的成员变量。\n\n**结构体的定义格式：**\n```cpp\nstruct 结构体名\n{\n    成员变量类型1 成员变量名1;\n    成员变量类型2 成员变量名2;\n    ...\n    成员变量类型n 成员变量名n;\n};\n```\n\n**基础示例：**\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Student\n{\n    int id;         //学号\n    string name;    //姓名\n    int age;        //年龄\n};\n\nint main()\n{\n    Student stu;    //在c++中可以省略struct关键字\n    stu.id = 1001;\n    stu.name = \"张三\";\n    stu.age = 18;\n    \n    cout << \"学号：\" << stu.id << endl;\n    cout << \"姓名：\" << stu.name << endl;\n    cout << \"年龄：\" << stu.age << endl;\n    return 0;\n}\n```\n\n**结构体数组：**\n```cpp\nStudent stu[3] = {\n    {1001, \"张三\", 18},\n    {1002, \"李四\", 19},\n    {1003, \"王五\", 20}\n};\n```\n\n**结构体指针：**\n```cpp\nStudent stu = {1001, \"张三\", 18};\nStudent *p = &stu;  //定义结构体指针p，指向结构体变量stu\ncout << \"学号：\" << p->id << endl;  //通过指针访问结构体成员变量\n```\n\n### 指针\n\n**指针定义和使用：**\n```cpp\nint a = 10, b = 20;\nint *p1 = &a, *p2 = &b;         // 定义指针变量p1和p2，分别指向a和b\ncout << \"*p1 = \" << *p1 << endl; //指针变量前加*，表示取出指针变量指向的内存中的值\ncout << \"p1 = \" << p1 << endl;   //指针变量前不加*，表示取出指针变量本身的值，即内存编号\n```\n\n**空指针和野指针：**\n```cpp\nint *p = NULL;                  //定义空指针\n//cout << \"*p = \" << *p << endl;  //空指针不能访问内存中的值，会报错\n\nint *p = (int *)0x7ffebc1b3b7c; //定义野指针\n//cout << \"*p = \" << *p << endl;  //野指针不能访问内存中的值，会报错\n```\n\n**const修饰指针：**\n```cpp\nconst int *p = &a;              //指向常量的指针，不能修改指向的值\nint *const p = &a;              //指针常量，不能修改指针指向的地址\n```\n\n### 函数\n\n**函数声明和定义：**\n```cpp\nint max (int a, int b);             // 函数声明\nint max (int a, int b) {            // 函数定义\n    return a > b ? a : b;           // 三目运算符\n}\n```\n\n**值传递vs引用传递：**\n```cpp\n// 值传递（不会改变原值）\nvoid swap(int a, int b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\n// 引用传递（会改变原值）\nvoid swap(int &a, int &b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n```\n\n### 数组\n\n**一维数组：**\n```cpp\nint arr[10] = {1,2,3,4,5,6,7,8,9,10};\n\n// 找出最大值\nint max = arr[0];\nfor(int i = 0; i < 10; i++){\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n\n// 元素逆置\nint start = 0;\nint end = sizeof(arr)/sizeof(arr[0]) - 1;\nwhile(start < end){\n    int temp = arr[start];\n    arr[start] = arr[end];\n    arr[end] = temp;\n    start++;\n    end--;\n}\n\n// 冒泡排序\nfor(int i = 0; i < 10; i++){\n    for(int j = 0; j < 10 - i - 1; j++){\n        if(arr[j] > arr[j+1]){\n            int temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n}\n```\n\n**二维数组：**\n```cpp\n// 四种定义方式\nint arr1[2][3];                                    // 1. 数据类型 数组名[行数][列数];\nint arr2[2][3] = {{1,2,3},{4,5,6}};               // 2. 数据类型 数组名[行数][列数] = {{数据1，数据2},{数据3，数据4}};\nint arr3[2][3] = {1,2,3,4,5,6};                   // 3. 数据类型 数组名[行数][列数] = {数据1，数据2，数据3，数据4};\nint arr4[][3] = {1,2,3,4,5,6};                    // 4. 数据类型 数组名[][列数] = {数据1，数据2，数据3，数据4};\n\n// 输出二维数组\nfor (int i = 0; i < 2; i++){\n    for (int j = 0; j < 3; j++){\n        cout << arr[i][j] << \" \";\n    }\n    cout << endl;\n}\n```\n\n---\n\n## 面向对象编程\n\n### 类和对象\n\n**创建类：**\n```cpp\nclass MyClass {\n    public:           // 访问修饰符指定可以从类外部访问类的成员\n    int myNum;        // 属性（int 变量）\n    string myString;  // 属性（string 变量）\n};\n```\n\n**创建对象：**\n```cpp\nclass Car {\n  public:\n    string brand;   \n    string model;\n    int year;\n};\n\nint main() {\n  Car carObj1;\n  carObj1.brand = \"BMW\";\n  carObj1.model = \"X5\";\n  carObj1.year = 1999;\n  \n  cout << carObj1.brand << \" \" << carObj1.model << \" \" << carObj1.year << \"\\n\";\n  return 0;\n}\n```\n\n### 类方法\n\n**内部定义：**\n```cpp\nclass MyClass {\n  public:\n    void myMethod() {\n      cout << \"Hello World!\";\n    }\n};\n\nint main() {\n  MyClass myObj;\n  myObj.myMethod();\n  return 0;\n}\n```\n\n**外部定义：**\n```cpp\nclass MyClass {\n  public:\n    void myMethod();   // 方法声明\n};\n\n// 类外的方法定义\nvoid MyClass::myMethod() {\n  cout << \"Hello World!\";\n}\n```\n\n### 构造函数\n\n**内部定义：**\n```cpp\nclass Car {\n  public:\n    string brand;\n    string model;\n    int year;\n    Car(string x, string y, int z) { // 带参数的构造函数\n      brand = x;\n      model = y;\n      year = z;\n    }\n};\n\nint main() {\n  Car carObj1(\"BMW\", \"X5\", 1999);\n  return 0;\n}\n```\n\n**外部定义：**\n```cpp\nclass Car {\n  public:\n    string brand;\n    string model;\n    int year;\n    Car(string x, string y, int z); // 构造函数声明\n};\n\n// 类外的构造函数定义\nCar::Car(string x, string y, int z) {\n  brand = x;\n  model = y;\n  year = z;\n}\n```\n\n### 访问修饰符\n\n在C++中，有三个访问修饰符：\n- **public** - 成员可以从类外访问\n- **private** - 不能从类外部访问（或查看）成员\n- **protected** - 不能从类外部访问成员，但是可以在继承的类中访问成员\n\n默认情况下，如果不指定访问修饰符，则类的所有成员都是私有的private。\n\n```cpp\nclass MyClass {\n  public:    // 公共访问修饰符\n    int x;   // 公共属性\n  private:   // 私有访问修饰符\n    int y;   // 私有属性\n};\n\nint main() {\n  MyClass myObj;\n  myObj.x = 25;  // 允许 (public)\n  // myObj.y = 50;  // 不允许 (private)\n  return 0;\n}\n```\n\n### 封装\n\n封装的意义是确保对用户隐藏敏感数据。为此，必须将类变量/属性声明为private。\n\n```cpp\nclass Employee {\n  private:\n    int salary;  // 私有属性\n\n  public:\n    // Setter\n    void setSalary(int s) {\n      salary = s;\n    }\n    // Getter\n    int getSalary() {\n      return salary;\n    }\n};\n\nint main() {\n  Employee myObj;\n  myObj.setSalary(50000);\n  cout << myObj.getSalary();\n  return 0;\n}\n```\n\n### 继承\n\n继承对代码的可重用性很有用：在创建新类时重用现有类的属性和方法。\n\n```cpp\n// 基类\nclass Vehicle {\n  public:\n    string brand = \"Ford\";\n    void honk() {\n      cout << \"Tuut, tuut! \\n\";\n    }\n};\n\n// 派生类\nclass Car: public Vehicle {\n  public:\n    string model = \"Mustang\";\n};\n\nint main() {\n  Car myCar;\n  myCar.honk();\n  cout << myCar.brand + \" \" + myCar.model;\n  return 0;\n}\n```\n\n### 多态\n\n多态允许我们执行一个动作，以不同的方式。\n\n```cpp\n// 基类\nclass Animal {\n  public:\n    void animalSound() {\n      cout << \"The animal makes a sound \\n\";\n    }\n};\n\n// 派生类\nclass Pig : public Animal {\n  public:\n    void animalSound() {\n      cout << \"The pig says: wee wee \\n\";\n    }\n};\n\n// 派生类\nclass Dog : public Animal {\n  public:\n    void animalSound() {\n      cout << \"The dog says: bow wow \\n\";\n    }\n};\n\nint main() {\n  Animal myAnimal;\n  Pig myPig;\n  Dog myDog;\n\n  myAnimal.animalSound();\n  myPig.animalSound();\n  myDog.animalSound();\n  return 0;\n}\n```\n\n---\n\n## 理论知识点\n\n### 类和对象相关\n\n1. **类成员访问权限**：默认情况下，类中的数据成员是private的\n2. **类定义包含**：数据和函数成员的定义\n3. **对象成员函数调用**：使用点语法，如 `x.a()`\n4. **对象生命周期**：对象生命期结束时，系统自动调用析构函数并销毁对象\n\n### 函数相关\n\n1. **形参**：形参可以有也可以没有，不是必须的\n2. **函数重载**：编译器会根据函数的参数个数和参数类型来区分函数的重载形式\n3. **内联函数**：inline是编译优化建议，与定义位置无关\n4. **函数声明**：仅当函数定义在调用之后时需要声明\n\n### 字符串处理\n\n1. **字符串比较**：使用 `strcmp(s1,s2)>0` 判断字符串s1是否大于字符串s2\n2. **字符函数**：\n   - `isdigit()` - 检查数字字符（0-9）\n   - `isalnum()` - 检查字母或数字字符\n   - `islower()` - 检查小写字母（a-z）\n   - `isupper()` - 检查大写字母（A-Z）\n   - `isspace()` - 检查空白字符\n   - `ispunct()` - 检查标点符号\n   - `isprint()` - 检查可打印字符\n\n### 控制结构\n\n1. **break语句**：最常用的是在循环语句中的if语句里，满足条件时跳出循环\n2. **continue语句**：跳过本次循环，继续下一次循环\n3. **循环嵌套**：外层循环控制轮数，内层循环控制每轮次数\n\n### 数据类型和转换\n\n1. **类型转换**：注意隐式转换和显式转换的区别\n2. **精度问题**：浮点数运算可能存在精度误差\n3. **内存管理**：指针使用需要注意内存泄漏和野指针问题\n\n---\n\n## 常用函数和技巧\n\n### 数学函数\n```cpp\n#include <cmath>\nceil(2.4)    // 向上取整，得到3\nfloor(2.7)   // 向下取整，得到2\nabs(-5)      // 绝对值，得到5\npow(2, 3)    // 幂运算，2的3次方，得到8\nsqrt(16)     // 平方根，得到4\n```\n\n### 字符串处理\n```cpp\n#include <string>\n#include <algorithm>\n\nstring s = \"hello\";\nreverse(s.begin(), s.end());  // 反转字符串\ns.length()  // 字符串长度\ns.substr(0, 3)  // 子串，从位置0开始，长度为3\n```\n\n### 字符处理\n```cpp\n#include <cctype>\n\nchar c = 'a';\ntoupper(c)   // 转换为大写\ntolower(c)   // 转换为小写\nisdigit(c)   // 判断是否为数字\nisalpha(c)   // 判断是否为字母\n```\n\n### 输入输出格式控制\n```cpp\n#include <iomanip>\n\ncout << fixed << setprecision(3) << 3.14159;  // 输出3.142\ncout << setw(10) << \"hello\";  // 设置输出宽度为10\n``` ","source":"_posts/基础知识.md","raw":"---\ntitle: C++基础知识\ndate: 2025-08-04 22:29:24\ncategories:\n  - study\ntags:\n  - C++\n\n---\n\n## 目录\n1. [C++基础概念](#c基础概念)\n2. [面向对象编程](#面向对象编程)\n3. [理论知识点](#理论知识点)\n\n---\n\n## C++基础概念\n\n### 结构体\n\n**结构体定义和使用：**\n结构体是一种自定义的数据类型，可以包含多个不同类型的成员变量。\n\n**结构体的定义格式：**\n```cpp\nstruct 结构体名\n{\n    成员变量类型1 成员变量名1;\n    成员变量类型2 成员变量名2;\n    ...\n    成员变量类型n 成员变量名n;\n};\n```\n\n**基础示例：**\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Student\n{\n    int id;         //学号\n    string name;    //姓名\n    int age;        //年龄\n};\n\nint main()\n{\n    Student stu;    //在c++中可以省略struct关键字\n    stu.id = 1001;\n    stu.name = \"张三\";\n    stu.age = 18;\n    \n    cout << \"学号：\" << stu.id << endl;\n    cout << \"姓名：\" << stu.name << endl;\n    cout << \"年龄：\" << stu.age << endl;\n    return 0;\n}\n```\n\n**结构体数组：**\n```cpp\nStudent stu[3] = {\n    {1001, \"张三\", 18},\n    {1002, \"李四\", 19},\n    {1003, \"王五\", 20}\n};\n```\n\n**结构体指针：**\n```cpp\nStudent stu = {1001, \"张三\", 18};\nStudent *p = &stu;  //定义结构体指针p，指向结构体变量stu\ncout << \"学号：\" << p->id << endl;  //通过指针访问结构体成员变量\n```\n\n### 指针\n\n**指针定义和使用：**\n```cpp\nint a = 10, b = 20;\nint *p1 = &a, *p2 = &b;         // 定义指针变量p1和p2，分别指向a和b\ncout << \"*p1 = \" << *p1 << endl; //指针变量前加*，表示取出指针变量指向的内存中的值\ncout << \"p1 = \" << p1 << endl;   //指针变量前不加*，表示取出指针变量本身的值，即内存编号\n```\n\n**空指针和野指针：**\n```cpp\nint *p = NULL;                  //定义空指针\n//cout << \"*p = \" << *p << endl;  //空指针不能访问内存中的值，会报错\n\nint *p = (int *)0x7ffebc1b3b7c; //定义野指针\n//cout << \"*p = \" << *p << endl;  //野指针不能访问内存中的值，会报错\n```\n\n**const修饰指针：**\n```cpp\nconst int *p = &a;              //指向常量的指针，不能修改指向的值\nint *const p = &a;              //指针常量，不能修改指针指向的地址\n```\n\n### 函数\n\n**函数声明和定义：**\n```cpp\nint max (int a, int b);             // 函数声明\nint max (int a, int b) {            // 函数定义\n    return a > b ? a : b;           // 三目运算符\n}\n```\n\n**值传递vs引用传递：**\n```cpp\n// 值传递（不会改变原值）\nvoid swap(int a, int b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\n// 引用传递（会改变原值）\nvoid swap(int &a, int &b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n```\n\n### 数组\n\n**一维数组：**\n```cpp\nint arr[10] = {1,2,3,4,5,6,7,8,9,10};\n\n// 找出最大值\nint max = arr[0];\nfor(int i = 0; i < 10; i++){\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n\n// 元素逆置\nint start = 0;\nint end = sizeof(arr)/sizeof(arr[0]) - 1;\nwhile(start < end){\n    int temp = arr[start];\n    arr[start] = arr[end];\n    arr[end] = temp;\n    start++;\n    end--;\n}\n\n// 冒泡排序\nfor(int i = 0; i < 10; i++){\n    for(int j = 0; j < 10 - i - 1; j++){\n        if(arr[j] > arr[j+1]){\n            int temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n}\n```\n\n**二维数组：**\n```cpp\n// 四种定义方式\nint arr1[2][3];                                    // 1. 数据类型 数组名[行数][列数];\nint arr2[2][3] = {{1,2,3},{4,5,6}};               // 2. 数据类型 数组名[行数][列数] = {{数据1，数据2},{数据3，数据4}};\nint arr3[2][3] = {1,2,3,4,5,6};                   // 3. 数据类型 数组名[行数][列数] = {数据1，数据2，数据3，数据4};\nint arr4[][3] = {1,2,3,4,5,6};                    // 4. 数据类型 数组名[][列数] = {数据1，数据2，数据3，数据4};\n\n// 输出二维数组\nfor (int i = 0; i < 2; i++){\n    for (int j = 0; j < 3; j++){\n        cout << arr[i][j] << \" \";\n    }\n    cout << endl;\n}\n```\n\n---\n\n## 面向对象编程\n\n### 类和对象\n\n**创建类：**\n```cpp\nclass MyClass {\n    public:           // 访问修饰符指定可以从类外部访问类的成员\n    int myNum;        // 属性（int 变量）\n    string myString;  // 属性（string 变量）\n};\n```\n\n**创建对象：**\n```cpp\nclass Car {\n  public:\n    string brand;   \n    string model;\n    int year;\n};\n\nint main() {\n  Car carObj1;\n  carObj1.brand = \"BMW\";\n  carObj1.model = \"X5\";\n  carObj1.year = 1999;\n  \n  cout << carObj1.brand << \" \" << carObj1.model << \" \" << carObj1.year << \"\\n\";\n  return 0;\n}\n```\n\n### 类方法\n\n**内部定义：**\n```cpp\nclass MyClass {\n  public:\n    void myMethod() {\n      cout << \"Hello World!\";\n    }\n};\n\nint main() {\n  MyClass myObj;\n  myObj.myMethod();\n  return 0;\n}\n```\n\n**外部定义：**\n```cpp\nclass MyClass {\n  public:\n    void myMethod();   // 方法声明\n};\n\n// 类外的方法定义\nvoid MyClass::myMethod() {\n  cout << \"Hello World!\";\n}\n```\n\n### 构造函数\n\n**内部定义：**\n```cpp\nclass Car {\n  public:\n    string brand;\n    string model;\n    int year;\n    Car(string x, string y, int z) { // 带参数的构造函数\n      brand = x;\n      model = y;\n      year = z;\n    }\n};\n\nint main() {\n  Car carObj1(\"BMW\", \"X5\", 1999);\n  return 0;\n}\n```\n\n**外部定义：**\n```cpp\nclass Car {\n  public:\n    string brand;\n    string model;\n    int year;\n    Car(string x, string y, int z); // 构造函数声明\n};\n\n// 类外的构造函数定义\nCar::Car(string x, string y, int z) {\n  brand = x;\n  model = y;\n  year = z;\n}\n```\n\n### 访问修饰符\n\n在C++中，有三个访问修饰符：\n- **public** - 成员可以从类外访问\n- **private** - 不能从类外部访问（或查看）成员\n- **protected** - 不能从类外部访问成员，但是可以在继承的类中访问成员\n\n默认情况下，如果不指定访问修饰符，则类的所有成员都是私有的private。\n\n```cpp\nclass MyClass {\n  public:    // 公共访问修饰符\n    int x;   // 公共属性\n  private:   // 私有访问修饰符\n    int y;   // 私有属性\n};\n\nint main() {\n  MyClass myObj;\n  myObj.x = 25;  // 允许 (public)\n  // myObj.y = 50;  // 不允许 (private)\n  return 0;\n}\n```\n\n### 封装\n\n封装的意义是确保对用户隐藏敏感数据。为此，必须将类变量/属性声明为private。\n\n```cpp\nclass Employee {\n  private:\n    int salary;  // 私有属性\n\n  public:\n    // Setter\n    void setSalary(int s) {\n      salary = s;\n    }\n    // Getter\n    int getSalary() {\n      return salary;\n    }\n};\n\nint main() {\n  Employee myObj;\n  myObj.setSalary(50000);\n  cout << myObj.getSalary();\n  return 0;\n}\n```\n\n### 继承\n\n继承对代码的可重用性很有用：在创建新类时重用现有类的属性和方法。\n\n```cpp\n// 基类\nclass Vehicle {\n  public:\n    string brand = \"Ford\";\n    void honk() {\n      cout << \"Tuut, tuut! \\n\";\n    }\n};\n\n// 派生类\nclass Car: public Vehicle {\n  public:\n    string model = \"Mustang\";\n};\n\nint main() {\n  Car myCar;\n  myCar.honk();\n  cout << myCar.brand + \" \" + myCar.model;\n  return 0;\n}\n```\n\n### 多态\n\n多态允许我们执行一个动作，以不同的方式。\n\n```cpp\n// 基类\nclass Animal {\n  public:\n    void animalSound() {\n      cout << \"The animal makes a sound \\n\";\n    }\n};\n\n// 派生类\nclass Pig : public Animal {\n  public:\n    void animalSound() {\n      cout << \"The pig says: wee wee \\n\";\n    }\n};\n\n// 派生类\nclass Dog : public Animal {\n  public:\n    void animalSound() {\n      cout << \"The dog says: bow wow \\n\";\n    }\n};\n\nint main() {\n  Animal myAnimal;\n  Pig myPig;\n  Dog myDog;\n\n  myAnimal.animalSound();\n  myPig.animalSound();\n  myDog.animalSound();\n  return 0;\n}\n```\n\n---\n\n## 理论知识点\n\n### 类和对象相关\n\n1. **类成员访问权限**：默认情况下，类中的数据成员是private的\n2. **类定义包含**：数据和函数成员的定义\n3. **对象成员函数调用**：使用点语法，如 `x.a()`\n4. **对象生命周期**：对象生命期结束时，系统自动调用析构函数并销毁对象\n\n### 函数相关\n\n1. **形参**：形参可以有也可以没有，不是必须的\n2. **函数重载**：编译器会根据函数的参数个数和参数类型来区分函数的重载形式\n3. **内联函数**：inline是编译优化建议，与定义位置无关\n4. **函数声明**：仅当函数定义在调用之后时需要声明\n\n### 字符串处理\n\n1. **字符串比较**：使用 `strcmp(s1,s2)>0` 判断字符串s1是否大于字符串s2\n2. **字符函数**：\n   - `isdigit()` - 检查数字字符（0-9）\n   - `isalnum()` - 检查字母或数字字符\n   - `islower()` - 检查小写字母（a-z）\n   - `isupper()` - 检查大写字母（A-Z）\n   - `isspace()` - 检查空白字符\n   - `ispunct()` - 检查标点符号\n   - `isprint()` - 检查可打印字符\n\n### 控制结构\n\n1. **break语句**：最常用的是在循环语句中的if语句里，满足条件时跳出循环\n2. **continue语句**：跳过本次循环，继续下一次循环\n3. **循环嵌套**：外层循环控制轮数，内层循环控制每轮次数\n\n### 数据类型和转换\n\n1. **类型转换**：注意隐式转换和显式转换的区别\n2. **精度问题**：浮点数运算可能存在精度误差\n3. **内存管理**：指针使用需要注意内存泄漏和野指针问题\n\n---\n\n## 常用函数和技巧\n\n### 数学函数\n```cpp\n#include <cmath>\nceil(2.4)    // 向上取整，得到3\nfloor(2.7)   // 向下取整，得到2\nabs(-5)      // 绝对值，得到5\npow(2, 3)    // 幂运算，2的3次方，得到8\nsqrt(16)     // 平方根，得到4\n```\n\n### 字符串处理\n```cpp\n#include <string>\n#include <algorithm>\n\nstring s = \"hello\";\nreverse(s.begin(), s.end());  // 反转字符串\ns.length()  // 字符串长度\ns.substr(0, 3)  // 子串，从位置0开始，长度为3\n```\n\n### 字符处理\n```cpp\n#include <cctype>\n\nchar c = 'a';\ntoupper(c)   // 转换为大写\ntolower(c)   // 转换为小写\nisdigit(c)   // 判断是否为数字\nisalpha(c)   // 判断是否为字母\n```\n\n### 输入输出格式控制\n```cpp\n#include <iomanip>\n\ncout << fixed << setprecision(3) << 3.14159;  // 输出3.142\ncout << setw(10) << \"hello\";  // 设置输出宽度为10\n``` ","slug":"基础知识","published":1,"updated":"2025-09-10T05:34:05.737Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5cou00079c9khruw569x","content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#c%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5\">C++基础概念</a></li>\n<li><a href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B\">面向对象编程</a></li>\n<li><a href=\"#%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86%E7%82%B9\">理论知识点</a></li>\n</ol>\n<hr>\n<h2 id=\"C-基础概念\"><a href=\"#C-基础概念\" class=\"headerlink\" title=\"C++基础概念\"></a>C++基础概念</h2><h3 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h3><p><strong>结构体定义和使用：</strong><br>结构体是一种自定义的数据类型，可以包含多个不同类型的成员变量。</p>\n<p><strong>结构体的定义格式：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> 结构体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    成员变量类型<span class=\"number\">1</span> 成员变量名<span class=\"number\">1</span>;</span><br><span class=\"line\">    成员变量类型<span class=\"number\">2</span> 成员变量名<span class=\"number\">2</span>;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    成员变量类型n 成员变量名n;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>基础示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> id;         <span class=\"comment\">//学号</span></span><br><span class=\"line\">    string name;    <span class=\"comment\">//姓名</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;        <span class=\"comment\">//年龄</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Student stu;    <span class=\"comment\">//在c++中可以省略struct关键字</span></span><br><span class=\"line\">    stu.id = <span class=\"number\">1001</span>;</span><br><span class=\"line\">    stu.name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">    stu.age = <span class=\"number\">18</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;学号：&quot;</span> &lt;&lt; stu.id &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;年龄：&quot;</span> &lt;&lt; stu.age &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>结构体数组：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student stu[<span class=\"number\">3</span>] = &#123;</span><br><span class=\"line\">    &#123;<span class=\"number\">1001</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">18</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">1002</span>, <span class=\"string\">&quot;李四&quot;</span>, <span class=\"number\">19</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">1003</span>, <span class=\"string\">&quot;王五&quot;</span>, <span class=\"number\">20</span>&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>结构体指针：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student stu = &#123;<span class=\"number\">1001</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">18</span>&#125;;</span><br><span class=\"line\">Student *p = &amp;stu;  <span class=\"comment\">//定义结构体指针p，指向结构体变量stu</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;学号：&quot;</span> &lt;&lt; p-&gt;id &lt;&lt; endl;  <span class=\"comment\">//通过指针访问结构体成员变量</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h3><p><strong>指针定义和使用：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>, b = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p1 = &amp;a, *p2 = &amp;b;         <span class=\"comment\">// 定义指针变量p1和p2，分别指向a和b</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;*p1 = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl; <span class=\"comment\">//指针变量前加*，表示取出指针变量指向的内存中的值</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;p1 = &quot;</span> &lt;&lt; p1 &lt;&lt; endl;   <span class=\"comment\">//指针变量前不加*，表示取出指针变量本身的值，即内存编号</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>空指针和野指针：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> *p = <span class=\"literal\">NULL</span>;                  <span class=\"comment\">//定义空指针</span></span><br><span class=\"line\"><span class=\"comment\">//cout &lt;&lt; &quot;*p = &quot; &lt;&lt; *p &lt;&lt; endl;  //空指针不能访问内存中的值，会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> *p = (<span class=\"type\">int</span> *)<span class=\"number\">0x7ffebc1b3b7c</span>; <span class=\"comment\">//定义野指针</span></span><br><span class=\"line\"><span class=\"comment\">//cout &lt;&lt; &quot;*p = &quot; &lt;&lt; *p &lt;&lt; endl;  //野指针不能访问内存中的值，会报错</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>const修饰指针：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> *p = &amp;a;              <span class=\"comment\">//指向常量的指针，不能修改指向的值</span></span><br><span class=\"line\"><span class=\"type\">int</span> *<span class=\"type\">const</span> p = &amp;a;              <span class=\"comment\">//指针常量，不能修改指针指向的地址</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p><strong>函数声明和定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">max</span> <span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span>;             <span class=\"comment\">// 函数声明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">max</span> <span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;            <span class=\"comment\">// 函数定义</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b ? a : b;           <span class=\"comment\">// 三目运算符</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>值传递vs引用传递：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 值传递（不会改变原值）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = a;</span><br><span class=\"line\">    a = b;</span><br><span class=\"line\">    b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用传递（会改变原值）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"type\">int</span> &amp;a, <span class=\"type\">int</span> &amp;b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = a;</span><br><span class=\"line\">    a = b;</span><br><span class=\"line\">    b = temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p><strong>一维数组：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 找出最大值</span></span><br><span class=\"line\"><span class=\"type\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 元素逆置</span></span><br><span class=\"line\"><span class=\"type\">int</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> end = <span class=\"built_in\">sizeof</span>(arr)/<span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(start &lt; end)&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = arr[start];</span><br><span class=\"line\">    arr[start] = arr[end];</span><br><span class=\"line\">    arr[end] = temp;</span><br><span class=\"line\">    start++;</span><br><span class=\"line\">    end--;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 冒泡排序</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span> - i - <span class=\"number\">1</span>; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[j] &gt; arr[j<span class=\"number\">+1</span>])&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> temp = arr[j];</span><br><span class=\"line\">            arr[j] = arr[j<span class=\"number\">+1</span>];</span><br><span class=\"line\">            arr[j<span class=\"number\">+1</span>] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>二维数组：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 四种定义方式</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr1[<span class=\"number\">2</span>][<span class=\"number\">3</span>];                                    <span class=\"comment\">// 1. 数据类型 数组名[行数][列数];</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr2[<span class=\"number\">2</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;&#125;;               <span class=\"comment\">// 2. 数据类型 数组名[行数][列数] = &#123;&#123;数据1，数据2&#125;,&#123;数据3，数据4&#125;&#125;;</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr3[<span class=\"number\">2</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;;                   <span class=\"comment\">// 3. 数据类型 数组名[行数][列数] = &#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr4[][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;;                    <span class=\"comment\">// 4. 数据类型 数组名[][列数] = &#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出二维数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; j++)&#123;</span><br><span class=\"line\">        cout &lt;&lt; arr[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"面向对象编程\"><a href=\"#面向对象编程\" class=\"headerlink\" title=\"面向对象编程\"></a>面向对象编程</h2><h3 id=\"类和对象\"><a href=\"#类和对象\" class=\"headerlink\" title=\"类和对象\"></a>类和对象</h3><p><strong>创建类：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:           <span class=\"comment\">// 访问修饰符指定可以从类外部访问类的成员</span></span><br><span class=\"line\">    <span class=\"type\">int</span> myNum;        <span class=\"comment\">// 属性（int 变量）</span></span><br><span class=\"line\">    string myString;  <span class=\"comment\">// 属性（string 变量）</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>创建对象：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand;   </span><br><span class=\"line\">    string model;</span><br><span class=\"line\">    <span class=\"type\">int</span> year;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Car carObj1;</span><br><span class=\"line\">  carObj<span class=\"number\">1.</span>brand = <span class=\"string\">&quot;BMW&quot;</span>;</span><br><span class=\"line\">  carObj<span class=\"number\">1.</span>model = <span class=\"string\">&quot;X5&quot;</span>;</span><br><span class=\"line\">  carObj<span class=\"number\">1.</span>year = <span class=\"number\">1999</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  cout &lt;&lt; carObj<span class=\"number\">1.</span>brand &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; carObj<span class=\"number\">1.</span>model &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; carObj<span class=\"number\">1.</span>year &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"类方法\"><a href=\"#类方法\" class=\"headerlink\" title=\"类方法\"></a>类方法</h3><p><strong>内部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">myMethod</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  MyClass myObj;</span><br><span class=\"line\">  myObj.<span class=\"built_in\">myMethod</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>外部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">myMethod</span><span class=\"params\">()</span></span>;   <span class=\"comment\">// 方法声明</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类外的方法定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyClass::myMethod</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><p><strong>内部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand;</span><br><span class=\"line\">    string model;</span><br><span class=\"line\">    <span class=\"type\">int</span> year;</span><br><span class=\"line\">    <span class=\"built_in\">Car</span>(string x, string y, <span class=\"type\">int</span> z) &#123; <span class=\"comment\">// 带参数的构造函数</span></span><br><span class=\"line\">      brand = x;</span><br><span class=\"line\">      model = y;</span><br><span class=\"line\">      year = z;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\">Car <span class=\"title\">carObj1</span><span class=\"params\">(<span class=\"string\">&quot;BMW&quot;</span>, <span class=\"string\">&quot;X5&quot;</span>, <span class=\"number\">1999</span>)</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>外部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand;</span><br><span class=\"line\">    string model;</span><br><span class=\"line\">    <span class=\"type\">int</span> year;</span><br><span class=\"line\">    <span class=\"built_in\">Car</span>(string x, string y, <span class=\"type\">int</span> z); <span class=\"comment\">// 构造函数声明</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类外的构造函数定义</span></span><br><span class=\"line\">Car::<span class=\"built_in\">Car</span>(string x, string y, <span class=\"type\">int</span> z) &#123;</span><br><span class=\"line\">  brand = x;</span><br><span class=\"line\">  model = y;</span><br><span class=\"line\">  year = z;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"访问修饰符\"><a href=\"#访问修饰符\" class=\"headerlink\" title=\"访问修饰符\"></a>访问修饰符</h3><p>在C++中，有三个访问修饰符：</p>\n<ul>\n<li><strong>public</strong> - 成员可以从类外访问</li>\n<li><strong>private</strong> - 不能从类外部访问（或查看）成员</li>\n<li><strong>protected</strong> - 不能从类外部访问成员，但是可以在继承的类中访问成员</li>\n</ul>\n<p>默认情况下，如果不指定访问修饰符，则类的所有成员都是私有的private。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:    <span class=\"comment\">// 公共访问修饰符</span></span><br><span class=\"line\">    <span class=\"type\">int</span> x;   <span class=\"comment\">// 公共属性</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span>:   <span class=\"comment\">// 私有访问修饰符</span></span><br><span class=\"line\">    <span class=\"type\">int</span> y;   <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  MyClass myObj;</span><br><span class=\"line\">  myObj.x = <span class=\"number\">25</span>;  <span class=\"comment\">// 允许 (public)</span></span><br><span class=\"line\">  <span class=\"comment\">// myObj.y = 50;  // 不允许 (private)</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h3><p>封装的意义是确保对用户隐藏敏感数据。为此，必须将类变量&#x2F;属性声明为private。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Employee</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> salary;  <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">// Setter</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setSalary</span><span class=\"params\">(<span class=\"type\">int</span> s)</span> </span>&#123;</span><br><span class=\"line\">      salary = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Getter</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getSalary</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> salary;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Employee myObj;</span><br><span class=\"line\">  myObj.<span class=\"built_in\">setSalary</span>(<span class=\"number\">50000</span>);</span><br><span class=\"line\">  cout &lt;&lt; myObj.<span class=\"built_in\">getSalary</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>继承对代码的可重用性很有用：在创建新类时重用现有类的属性和方法。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vehicle</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand = <span class=\"string\">&quot;Ford&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">honk</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;Tuut, tuut! \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 派生类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span>: <span class=\"keyword\">public</span> Vehicle &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string model = <span class=\"string\">&quot;Mustang&quot;</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Car myCar;</span><br><span class=\"line\">  myCar.<span class=\"built_in\">honk</span>();</span><br><span class=\"line\">  cout &lt;&lt; myCar.brand + <span class=\"string\">&quot; &quot;</span> + myCar.model;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h3><p>多态允许我们执行一个动作，以不同的方式。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">animalSound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;The animal makes a sound \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 派生类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pig</span> : <span class=\"keyword\">public</span> Animal &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">animalSound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;The pig says: wee wee \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 派生类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> : <span class=\"keyword\">public</span> Animal &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">animalSound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;The dog says: bow wow \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Animal myAnimal;</span><br><span class=\"line\">  Pig myPig;</span><br><span class=\"line\">  Dog myDog;</span><br><span class=\"line\"></span><br><span class=\"line\">  myAnimal.<span class=\"built_in\">animalSound</span>();</span><br><span class=\"line\">  myPig.<span class=\"built_in\">animalSound</span>();</span><br><span class=\"line\">  myDog.<span class=\"built_in\">animalSound</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"理论知识点\"><a href=\"#理论知识点\" class=\"headerlink\" title=\"理论知识点\"></a>理论知识点</h2><h3 id=\"类和对象相关\"><a href=\"#类和对象相关\" class=\"headerlink\" title=\"类和对象相关\"></a>类和对象相关</h3><ol>\n<li><strong>类成员访问权限</strong>：默认情况下，类中的数据成员是private的</li>\n<li><strong>类定义包含</strong>：数据和函数成员的定义</li>\n<li><strong>对象成员函数调用</strong>：使用点语法，如 <code>x.a()</code></li>\n<li><strong>对象生命周期</strong>：对象生命期结束时，系统自动调用析构函数并销毁对象</li>\n</ol>\n<h3 id=\"函数相关\"><a href=\"#函数相关\" class=\"headerlink\" title=\"函数相关\"></a>函数相关</h3><ol>\n<li><strong>形参</strong>：形参可以有也可以没有，不是必须的</li>\n<li><strong>函数重载</strong>：编译器会根据函数的参数个数和参数类型来区分函数的重载形式</li>\n<li><strong>内联函数</strong>：inline是编译优化建议，与定义位置无关</li>\n<li><strong>函数声明</strong>：仅当函数定义在调用之后时需要声明</li>\n</ol>\n<h3 id=\"字符串处理\"><a href=\"#字符串处理\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h3><ol>\n<li><strong>字符串比较</strong>：使用 <code>strcmp(s1,s2)&gt;0</code> 判断字符串s1是否大于字符串s2</li>\n<li><strong>字符函数</strong>：<ul>\n<li><code>isdigit()</code> - 检查数字字符（0-9）</li>\n<li><code>isalnum()</code> - 检查字母或数字字符</li>\n<li><code>islower()</code> - 检查小写字母（a-z）</li>\n<li><code>isupper()</code> - 检查大写字母（A-Z）</li>\n<li><code>isspace()</code> - 检查空白字符</li>\n<li><code>ispunct()</code> - 检查标点符号</li>\n<li><code>isprint()</code> - 检查可打印字符</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"控制结构\"><a href=\"#控制结构\" class=\"headerlink\" title=\"控制结构\"></a>控制结构</h3><ol>\n<li><strong>break语句</strong>：最常用的是在循环语句中的if语句里，满足条件时跳出循环</li>\n<li><strong>continue语句</strong>：跳过本次循环，继续下一次循环</li>\n<li><strong>循环嵌套</strong>：外层循环控制轮数，内层循环控制每轮次数</li>\n</ol>\n<h3 id=\"数据类型和转换\"><a href=\"#数据类型和转换\" class=\"headerlink\" title=\"数据类型和转换\"></a>数据类型和转换</h3><ol>\n<li><strong>类型转换</strong>：注意隐式转换和显式转换的区别</li>\n<li><strong>精度问题</strong>：浮点数运算可能存在精度误差</li>\n<li><strong>内存管理</strong>：指针使用需要注意内存泄漏和野指针问题</li>\n</ol>\n<hr>\n<h2 id=\"常用函数和技巧\"><a href=\"#常用函数和技巧\" class=\"headerlink\" title=\"常用函数和技巧\"></a>常用函数和技巧</h2><h3 id=\"数学函数\"><a href=\"#数学函数\" class=\"headerlink\" title=\"数学函数\"></a>数学函数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"built_in\">ceil</span>(<span class=\"number\">2.4</span>)    <span class=\"comment\">// 向上取整，得到3</span></span><br><span class=\"line\"><span class=\"built_in\">floor</span>(<span class=\"number\">2.7</span>)   <span class=\"comment\">// 向下取整，得到2</span></span><br><span class=\"line\"><span class=\"built_in\">abs</span>(<span class=\"number\">-5</span>)      <span class=\"comment\">// 绝对值，得到5</span></span><br><span class=\"line\"><span class=\"built_in\">pow</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>)    <span class=\"comment\">// 幂运算，2的3次方，得到8</span></span><br><span class=\"line\"><span class=\"built_in\">sqrt</span>(<span class=\"number\">16</span>)     <span class=\"comment\">// 平方根，得到4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串处理-1\"><a href=\"#字符串处理-1\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">string s = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(s.<span class=\"built_in\">begin</span>(), s.<span class=\"built_in\">end</span>());  <span class=\"comment\">// 反转字符串</span></span><br><span class=\"line\">s.<span class=\"built_in\">length</span>()  <span class=\"comment\">// 字符串长度</span></span><br><span class=\"line\">s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">3</span>)  <span class=\"comment\">// 子串，从位置0开始，长度为3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符处理\"><a href=\"#字符处理\" class=\"headerlink\" title=\"字符处理\"></a>字符处理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> c = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">toupper</span>(c)   <span class=\"comment\">// 转换为大写</span></span><br><span class=\"line\"><span class=\"built_in\">tolower</span>(c)   <span class=\"comment\">// 转换为小写</span></span><br><span class=\"line\"><span class=\"built_in\">isdigit</span>(c)   <span class=\"comment\">// 判断是否为数字</span></span><br><span class=\"line\"><span class=\"built_in\">isalpha</span>(c)   <span class=\"comment\">// 判断是否为字母</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输入输出格式控制\"><a href=\"#输入输出格式控制\" class=\"headerlink\" title=\"输入输出格式控制\"></a>输入输出格式控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">cout &lt;&lt; fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">3</span>) &lt;&lt; <span class=\"number\">3.14159</span>;  <span class=\"comment\">// 输出3.142</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">10</span>) &lt;&lt; <span class=\"string\">&quot;hello&quot;</span>;  <span class=\"comment\">// 设置输出宽度为10</span></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#c%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5\">C++基础概念</a></li>\n<li><a href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B\">面向对象编程</a></li>\n<li><a href=\"#%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86%E7%82%B9\">理论知识点</a></li>\n</ol>\n<hr>\n<h2 id=\"C-基础概念\"><a href=\"#C-基础概念\" class=\"headerlink\" title=\"C++基础概念\"></a>C++基础概念</h2><h3 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h3><p><strong>结构体定义和使用：</strong><br>结构体是一种自定义的数据类型，可以包含多个不同类型的成员变量。</p>\n<p><strong>结构体的定义格式：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> 结构体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    成员变量类型<span class=\"number\">1</span> 成员变量名<span class=\"number\">1</span>;</span><br><span class=\"line\">    成员变量类型<span class=\"number\">2</span> 成员变量名<span class=\"number\">2</span>;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    成员变量类型n 成员变量名n;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>基础示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> id;         <span class=\"comment\">//学号</span></span><br><span class=\"line\">    string name;    <span class=\"comment\">//姓名</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;        <span class=\"comment\">//年龄</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Student stu;    <span class=\"comment\">//在c++中可以省略struct关键字</span></span><br><span class=\"line\">    stu.id = <span class=\"number\">1001</span>;</span><br><span class=\"line\">    stu.name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">    stu.age = <span class=\"number\">18</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;学号：&quot;</span> &lt;&lt; stu.id &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;年龄：&quot;</span> &lt;&lt; stu.age &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>结构体数组：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student stu[<span class=\"number\">3</span>] = &#123;</span><br><span class=\"line\">    &#123;<span class=\"number\">1001</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">18</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">1002</span>, <span class=\"string\">&quot;李四&quot;</span>, <span class=\"number\">19</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">1003</span>, <span class=\"string\">&quot;王五&quot;</span>, <span class=\"number\">20</span>&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>结构体指针：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student stu = &#123;<span class=\"number\">1001</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">18</span>&#125;;</span><br><span class=\"line\">Student *p = &amp;stu;  <span class=\"comment\">//定义结构体指针p，指向结构体变量stu</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;学号：&quot;</span> &lt;&lt; p-&gt;id &lt;&lt; endl;  <span class=\"comment\">//通过指针访问结构体成员变量</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h3><p><strong>指针定义和使用：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>, b = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p1 = &amp;a, *p2 = &amp;b;         <span class=\"comment\">// 定义指针变量p1和p2，分别指向a和b</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;*p1 = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl; <span class=\"comment\">//指针变量前加*，表示取出指针变量指向的内存中的值</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;p1 = &quot;</span> &lt;&lt; p1 &lt;&lt; endl;   <span class=\"comment\">//指针变量前不加*，表示取出指针变量本身的值，即内存编号</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>空指针和野指针：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> *p = <span class=\"literal\">NULL</span>;                  <span class=\"comment\">//定义空指针</span></span><br><span class=\"line\"><span class=\"comment\">//cout &lt;&lt; &quot;*p = &quot; &lt;&lt; *p &lt;&lt; endl;  //空指针不能访问内存中的值，会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> *p = (<span class=\"type\">int</span> *)<span class=\"number\">0x7ffebc1b3b7c</span>; <span class=\"comment\">//定义野指针</span></span><br><span class=\"line\"><span class=\"comment\">//cout &lt;&lt; &quot;*p = &quot; &lt;&lt; *p &lt;&lt; endl;  //野指针不能访问内存中的值，会报错</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>const修饰指针：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> *p = &amp;a;              <span class=\"comment\">//指向常量的指针，不能修改指向的值</span></span><br><span class=\"line\"><span class=\"type\">int</span> *<span class=\"type\">const</span> p = &amp;a;              <span class=\"comment\">//指针常量，不能修改指针指向的地址</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p><strong>函数声明和定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">max</span> <span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span>;             <span class=\"comment\">// 函数声明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">max</span> <span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;            <span class=\"comment\">// 函数定义</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b ? a : b;           <span class=\"comment\">// 三目运算符</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>值传递vs引用传递：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 值传递（不会改变原值）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = a;</span><br><span class=\"line\">    a = b;</span><br><span class=\"line\">    b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用传递（会改变原值）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"type\">int</span> &amp;a, <span class=\"type\">int</span> &amp;b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = a;</span><br><span class=\"line\">    a = b;</span><br><span class=\"line\">    b = temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p><strong>一维数组：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 找出最大值</span></span><br><span class=\"line\"><span class=\"type\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 元素逆置</span></span><br><span class=\"line\"><span class=\"type\">int</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> end = <span class=\"built_in\">sizeof</span>(arr)/<span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(start &lt; end)&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = arr[start];</span><br><span class=\"line\">    arr[start] = arr[end];</span><br><span class=\"line\">    arr[end] = temp;</span><br><span class=\"line\">    start++;</span><br><span class=\"line\">    end--;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 冒泡排序</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span> - i - <span class=\"number\">1</span>; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[j] &gt; arr[j<span class=\"number\">+1</span>])&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> temp = arr[j];</span><br><span class=\"line\">            arr[j] = arr[j<span class=\"number\">+1</span>];</span><br><span class=\"line\">            arr[j<span class=\"number\">+1</span>] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>二维数组：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 四种定义方式</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr1[<span class=\"number\">2</span>][<span class=\"number\">3</span>];                                    <span class=\"comment\">// 1. 数据类型 数组名[行数][列数];</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr2[<span class=\"number\">2</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;&#125;;               <span class=\"comment\">// 2. 数据类型 数组名[行数][列数] = &#123;&#123;数据1，数据2&#125;,&#123;数据3，数据4&#125;&#125;;</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr3[<span class=\"number\">2</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;;                   <span class=\"comment\">// 3. 数据类型 数组名[行数][列数] = &#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr4[][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;;                    <span class=\"comment\">// 4. 数据类型 数组名[][列数] = &#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出二维数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; j++)&#123;</span><br><span class=\"line\">        cout &lt;&lt; arr[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"面向对象编程\"><a href=\"#面向对象编程\" class=\"headerlink\" title=\"面向对象编程\"></a>面向对象编程</h2><h3 id=\"类和对象\"><a href=\"#类和对象\" class=\"headerlink\" title=\"类和对象\"></a>类和对象</h3><p><strong>创建类：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:           <span class=\"comment\">// 访问修饰符指定可以从类外部访问类的成员</span></span><br><span class=\"line\">    <span class=\"type\">int</span> myNum;        <span class=\"comment\">// 属性（int 变量）</span></span><br><span class=\"line\">    string myString;  <span class=\"comment\">// 属性（string 变量）</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>创建对象：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand;   </span><br><span class=\"line\">    string model;</span><br><span class=\"line\">    <span class=\"type\">int</span> year;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Car carObj1;</span><br><span class=\"line\">  carObj<span class=\"number\">1.</span>brand = <span class=\"string\">&quot;BMW&quot;</span>;</span><br><span class=\"line\">  carObj<span class=\"number\">1.</span>model = <span class=\"string\">&quot;X5&quot;</span>;</span><br><span class=\"line\">  carObj<span class=\"number\">1.</span>year = <span class=\"number\">1999</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  cout &lt;&lt; carObj<span class=\"number\">1.</span>brand &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; carObj<span class=\"number\">1.</span>model &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; carObj<span class=\"number\">1.</span>year &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"类方法\"><a href=\"#类方法\" class=\"headerlink\" title=\"类方法\"></a>类方法</h3><p><strong>内部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">myMethod</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  MyClass myObj;</span><br><span class=\"line\">  myObj.<span class=\"built_in\">myMethod</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>外部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">myMethod</span><span class=\"params\">()</span></span>;   <span class=\"comment\">// 方法声明</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类外的方法定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyClass::myMethod</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><p><strong>内部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand;</span><br><span class=\"line\">    string model;</span><br><span class=\"line\">    <span class=\"type\">int</span> year;</span><br><span class=\"line\">    <span class=\"built_in\">Car</span>(string x, string y, <span class=\"type\">int</span> z) &#123; <span class=\"comment\">// 带参数的构造函数</span></span><br><span class=\"line\">      brand = x;</span><br><span class=\"line\">      model = y;</span><br><span class=\"line\">      year = z;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\">Car <span class=\"title\">carObj1</span><span class=\"params\">(<span class=\"string\">&quot;BMW&quot;</span>, <span class=\"string\">&quot;X5&quot;</span>, <span class=\"number\">1999</span>)</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>外部定义：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand;</span><br><span class=\"line\">    string model;</span><br><span class=\"line\">    <span class=\"type\">int</span> year;</span><br><span class=\"line\">    <span class=\"built_in\">Car</span>(string x, string y, <span class=\"type\">int</span> z); <span class=\"comment\">// 构造函数声明</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类外的构造函数定义</span></span><br><span class=\"line\">Car::<span class=\"built_in\">Car</span>(string x, string y, <span class=\"type\">int</span> z) &#123;</span><br><span class=\"line\">  brand = x;</span><br><span class=\"line\">  model = y;</span><br><span class=\"line\">  year = z;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"访问修饰符\"><a href=\"#访问修饰符\" class=\"headerlink\" title=\"访问修饰符\"></a>访问修饰符</h3><p>在C++中，有三个访问修饰符：</p>\n<ul>\n<li><strong>public</strong> - 成员可以从类外访问</li>\n<li><strong>private</strong> - 不能从类外部访问（或查看）成员</li>\n<li><strong>protected</strong> - 不能从类外部访问成员，但是可以在继承的类中访问成员</li>\n</ul>\n<p>默认情况下，如果不指定访问修饰符，则类的所有成员都是私有的private。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:    <span class=\"comment\">// 公共访问修饰符</span></span><br><span class=\"line\">    <span class=\"type\">int</span> x;   <span class=\"comment\">// 公共属性</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span>:   <span class=\"comment\">// 私有访问修饰符</span></span><br><span class=\"line\">    <span class=\"type\">int</span> y;   <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  MyClass myObj;</span><br><span class=\"line\">  myObj.x = <span class=\"number\">25</span>;  <span class=\"comment\">// 允许 (public)</span></span><br><span class=\"line\">  <span class=\"comment\">// myObj.y = 50;  // 不允许 (private)</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h3><p>封装的意义是确保对用户隐藏敏感数据。为此，必须将类变量&#x2F;属性声明为private。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Employee</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> salary;  <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">// Setter</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setSalary</span><span class=\"params\">(<span class=\"type\">int</span> s)</span> </span>&#123;</span><br><span class=\"line\">      salary = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Getter</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getSalary</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> salary;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Employee myObj;</span><br><span class=\"line\">  myObj.<span class=\"built_in\">setSalary</span>(<span class=\"number\">50000</span>);</span><br><span class=\"line\">  cout &lt;&lt; myObj.<span class=\"built_in\">getSalary</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>继承对代码的可重用性很有用：在创建新类时重用现有类的属性和方法。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vehicle</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string brand = <span class=\"string\">&quot;Ford&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">honk</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;Tuut, tuut! \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 派生类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span>: <span class=\"keyword\">public</span> Vehicle &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    string model = <span class=\"string\">&quot;Mustang&quot;</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Car myCar;</span><br><span class=\"line\">  myCar.<span class=\"built_in\">honk</span>();</span><br><span class=\"line\">  cout &lt;&lt; myCar.brand + <span class=\"string\">&quot; &quot;</span> + myCar.model;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h3><p>多态允许我们执行一个动作，以不同的方式。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">animalSound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;The animal makes a sound \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 派生类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pig</span> : <span class=\"keyword\">public</span> Animal &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">animalSound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;The pig says: wee wee \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 派生类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> : <span class=\"keyword\">public</span> Animal &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">animalSound</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;The dog says: bow wow \\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  Animal myAnimal;</span><br><span class=\"line\">  Pig myPig;</span><br><span class=\"line\">  Dog myDog;</span><br><span class=\"line\"></span><br><span class=\"line\">  myAnimal.<span class=\"built_in\">animalSound</span>();</span><br><span class=\"line\">  myPig.<span class=\"built_in\">animalSound</span>();</span><br><span class=\"line\">  myDog.<span class=\"built_in\">animalSound</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"理论知识点\"><a href=\"#理论知识点\" class=\"headerlink\" title=\"理论知识点\"></a>理论知识点</h2><h3 id=\"类和对象相关\"><a href=\"#类和对象相关\" class=\"headerlink\" title=\"类和对象相关\"></a>类和对象相关</h3><ol>\n<li><strong>类成员访问权限</strong>：默认情况下，类中的数据成员是private的</li>\n<li><strong>类定义包含</strong>：数据和函数成员的定义</li>\n<li><strong>对象成员函数调用</strong>：使用点语法，如 <code>x.a()</code></li>\n<li><strong>对象生命周期</strong>：对象生命期结束时，系统自动调用析构函数并销毁对象</li>\n</ol>\n<h3 id=\"函数相关\"><a href=\"#函数相关\" class=\"headerlink\" title=\"函数相关\"></a>函数相关</h3><ol>\n<li><strong>形参</strong>：形参可以有也可以没有，不是必须的</li>\n<li><strong>函数重载</strong>：编译器会根据函数的参数个数和参数类型来区分函数的重载形式</li>\n<li><strong>内联函数</strong>：inline是编译优化建议，与定义位置无关</li>\n<li><strong>函数声明</strong>：仅当函数定义在调用之后时需要声明</li>\n</ol>\n<h3 id=\"字符串处理\"><a href=\"#字符串处理\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h3><ol>\n<li><strong>字符串比较</strong>：使用 <code>strcmp(s1,s2)&gt;0</code> 判断字符串s1是否大于字符串s2</li>\n<li><strong>字符函数</strong>：<ul>\n<li><code>isdigit()</code> - 检查数字字符（0-9）</li>\n<li><code>isalnum()</code> - 检查字母或数字字符</li>\n<li><code>islower()</code> - 检查小写字母（a-z）</li>\n<li><code>isupper()</code> - 检查大写字母（A-Z）</li>\n<li><code>isspace()</code> - 检查空白字符</li>\n<li><code>ispunct()</code> - 检查标点符号</li>\n<li><code>isprint()</code> - 检查可打印字符</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"控制结构\"><a href=\"#控制结构\" class=\"headerlink\" title=\"控制结构\"></a>控制结构</h3><ol>\n<li><strong>break语句</strong>：最常用的是在循环语句中的if语句里，满足条件时跳出循环</li>\n<li><strong>continue语句</strong>：跳过本次循环，继续下一次循环</li>\n<li><strong>循环嵌套</strong>：外层循环控制轮数，内层循环控制每轮次数</li>\n</ol>\n<h3 id=\"数据类型和转换\"><a href=\"#数据类型和转换\" class=\"headerlink\" title=\"数据类型和转换\"></a>数据类型和转换</h3><ol>\n<li><strong>类型转换</strong>：注意隐式转换和显式转换的区别</li>\n<li><strong>精度问题</strong>：浮点数运算可能存在精度误差</li>\n<li><strong>内存管理</strong>：指针使用需要注意内存泄漏和野指针问题</li>\n</ol>\n<hr>\n<h2 id=\"常用函数和技巧\"><a href=\"#常用函数和技巧\" class=\"headerlink\" title=\"常用函数和技巧\"></a>常用函数和技巧</h2><h3 id=\"数学函数\"><a href=\"#数学函数\" class=\"headerlink\" title=\"数学函数\"></a>数学函数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"built_in\">ceil</span>(<span class=\"number\">2.4</span>)    <span class=\"comment\">// 向上取整，得到3</span></span><br><span class=\"line\"><span class=\"built_in\">floor</span>(<span class=\"number\">2.7</span>)   <span class=\"comment\">// 向下取整，得到2</span></span><br><span class=\"line\"><span class=\"built_in\">abs</span>(<span class=\"number\">-5</span>)      <span class=\"comment\">// 绝对值，得到5</span></span><br><span class=\"line\"><span class=\"built_in\">pow</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>)    <span class=\"comment\">// 幂运算，2的3次方，得到8</span></span><br><span class=\"line\"><span class=\"built_in\">sqrt</span>(<span class=\"number\">16</span>)     <span class=\"comment\">// 平方根，得到4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串处理-1\"><a href=\"#字符串处理-1\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">string s = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(s.<span class=\"built_in\">begin</span>(), s.<span class=\"built_in\">end</span>());  <span class=\"comment\">// 反转字符串</span></span><br><span class=\"line\">s.<span class=\"built_in\">length</span>()  <span class=\"comment\">// 字符串长度</span></span><br><span class=\"line\">s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">3</span>)  <span class=\"comment\">// 子串，从位置0开始，长度为3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符处理\"><a href=\"#字符处理\" class=\"headerlink\" title=\"字符处理\"></a>字符处理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> c = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">toupper</span>(c)   <span class=\"comment\">// 转换为大写</span></span><br><span class=\"line\"><span class=\"built_in\">tolower</span>(c)   <span class=\"comment\">// 转换为小写</span></span><br><span class=\"line\"><span class=\"built_in\">isdigit</span>(c)   <span class=\"comment\">// 判断是否为数字</span></span><br><span class=\"line\"><span class=\"built_in\">isalpha</span>(c)   <span class=\"comment\">// 判断是否为字母</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输入输出格式控制\"><a href=\"#输入输出格式控制\" class=\"headerlink\" title=\"输入输出格式控制\"></a>输入输出格式控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">cout &lt;&lt; fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">3</span>) &lt;&lt; <span class=\"number\">3.14159</span>;  <span class=\"comment\">// 输出3.142</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">10</span>) &lt;&lt; <span class=\"string\">&quot;hello&quot;</span>;  <span class=\"comment\">// 设置输出宽度为10</span></span><br></pre></td></tr></table></figure>"},{"title":"my learning materials","date":"2025-08-14T06:02:13.000Z","_content":"\n- 作者blog：[jx's blog](https://jaxon1216.github.io/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n---\n> to do list\n\n\n### 考研最全汇总\n- 公共课(数学英语政治)\n`链接:`https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\n\n- 专业课\n`链接:`https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn \n> 提取码: hvjn \n![](/img/math.png)\n\n### English\n- summarize\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n\n### Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n","source":"_posts/my-study-materials.md","raw":"---\ntitle: my learning materials\ndate: 2025-08-14 14:02:13\ncategories:\n  - study\ntags:\n  - 资料\n---\n\n- 作者blog：[jx's blog](https://jaxon1216.github.io/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n---\n> to do list\n\n\n### 考研最全汇总\n- 公共课(数学英语政治)\n`链接:`https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\n\n- 专业课\n`链接:`https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn \n> 提取码: hvjn \n![](/img/math.png)\n\n### English\n- summarize\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n\n### Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n","slug":"my-study-materials","published":1,"updated":"2025-09-10T05:34:05.736Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5cov00099c9kgu48b6ve","content":"<ul>\n<li>作者blog：<a href=\"https://jaxon1216.github.io/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>to do list</p>\n</blockquote>\n<h3 id=\"考研最全汇总\"><a href=\"#考研最全汇总\" class=\"headerlink\" title=\"考研最全汇总\"></a>考研最全汇总</h3><ul>\n<li><p>公共课(数学英语政治)<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\">https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666</a></p>\n</li>\n<li><p>专业课<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn\">https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn</a> </p>\n<blockquote>\n<p>提取码: hvjn<br><img src=\"/img/math.png\"></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><ul>\n<li>summarize<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>作者blog：<a href=\"https://jaxon1216.github.io/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>to do list</p>\n</blockquote>\n<h3 id=\"考研最全汇总\"><a href=\"#考研最全汇总\" class=\"headerlink\" title=\"考研最全汇总\"></a>考研最全汇总</h3><ul>\n<li><p>公共课(数学英语政治)<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\">https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666</a></p>\n</li>\n<li><p>专业课<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn\">https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn</a> </p>\n<blockquote>\n<p>提取码: hvjn<br><img src=\"/img/math.png\"></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><ul>\n<li>summarize<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"C++普通题集","date":"2025-08-04T12:20:10.000Z","_content":"# 普通题目集\n\n## 目录\n1. [编程题](#编程题)\n2. [函数题](#函数题)\n3. [程序填空](#程序填空)\n4. [常用技巧](#常用技巧)\n\n---\n\n## 编程题\n\n### 前导零处理\n\n**vector版本：**\n```cpp\nvector<int> digits;\nwhile (num > 0) {\n    digits.push_back(num % 10);  // 存入个位（低位在前）\n    num /= 10;\n}\n// digits 中存储的顺序已经是逆序，例如：\n// 输入700 → digits={0,0,7}\n// 输入123 → digits={3,2,1}\n\n// 直接输出：\nfor (int d : digits) cout << d;  // 输出时自动忽略前导零\n```\n\n**字符串版本：**\n```cpp\nstring num;\ncin >> num;  // 输入 \"700\"\nreverse(num.begin(), num.end());  // 反转后 \"007\"\ncout << stoi(num) << endl;  // stoi(\"007\") → 7（自动忽略前导零）\n```\n\n### 向上取整\n```cpp\n#include <cmath>\nceil(2.4)  // 得到3\n```\n\n### 字符函数使用\n\n**相关函数集：**\n| 函数名       | 功能描述                   |\n|--------------|--------------------------|\n| `isdigit()`  | 检查数字字符（0-9）        |\n| `isalnum()`  | 检查字母或数字字符         |\n| `islower()`  | 检查小写字母（a-z）        |\n| `isupper()`  | 检查大写字母（A-Z）        |\n| `isspace()`  | 检查空白字符（空格/制表符等）|\n| `ispunct()`  | 检查标点符号               |\n| `isprint()`  | 检查可打印字符             |\n\n**常见错误：**\n```cpp\n// 错误：stoi(c) 不能用于单个字符\nfor(char c : s){\n    if(isdigit(c)){\n        sum += stoi(c);  // 错误！\n        cnt++;\n    }\n}\n\n// 正确：需要将字符转换为数字\nint num = c - '0';  // 字符转数字\nsum += num;\n```\n\n### 二维数组转置\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int m, n;\n    cin >> m >> n;\n    \n    // 定义原始矩阵和转置矩阵的vector\n    vector<vector<int>> original(m, vector<int>(n));\n    vector<vector<int>> transposed(n, vector<int>(m));\n    \n    // 读取原始矩阵\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            cin >> original[i][j];\n        }\n    }\n    \n    // 进行转置\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            transposed[j][i] = original[i][j];\n        }\n    }\n    \n    // 输出转置后的矩阵，每个数据占5列\n    for (const auto& row : transposed) {\n        for (int num : row) {\n            cout << setw(5) << num;\n        }\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 杨辉三角\n```cpp\n#include<iostream>\nusing namespace std;\nlong long a,b[100][100];\nint main() {\n    cin>>a;\n    b[1][1]=1;\n    for(int i=1;i<=a;i++){\n        for(int j=1;j<=i;j++){\n            b[i][j]+=b[i-1][j-1]+b[i-1][j];\n            cout<<b[i][j]<<\" \";\n        }\n        cout<<endl;\n    }\n}\n```\n\n### 回文判断\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    string s;\n    getline(cin,s);\n    \n    string s1 = s;\n    reverse(s1.begin(),s1.end());\n    if(s1 == s) cout << s << \"是回文\";\n    else cout << s << \"不是回文\";\n    return 0;\n}\n```\n\n### 字符统计\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    vector<int> cnt(10,0);  // 注意初始化大小\n    string s;\n    cin >> s;\n    for(int i = 0; i < s.size(); i++){\n        cnt[s[i]- '0']++;  // 注意字符转数字\n    }\n    for(int i = 0; i < cnt.size(); i++){\n        if(cnt[i]!=0){\n            cout << i << \":\" << cnt[i]<<endl;\n        }\n    }\n    return 0;\n}\n```\n\n### 外卖费用计算\n```cpp\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    char m;\n    cin >> n >> m;\n    int a = n / 500;  // 关键是那句不足500克按500克收就这样方便\n    if(n % 500 != 0) a++;  // 模拟\n    int b = 4 + 3 * (a - 2);  // 模拟知道这里是-2\n    if(n <= 1000) b = 4;  // 这句是为了防止n小于500的情况\n    if(m == 'y') b += 5;\n    cout << b << endl;\n    return 0;\n}\n```\n\n### 天天向上\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    double d;\n    cin >> d;\n    if(d >= 0) cout << \"up:\"<<fixed << setprecision(2) << (pow(1+d,365)-1)*100 << \"%\";\n    if(d < 0) cout << \"down:\"<<fixed << setprecision(2) << (-pow(1-abs(d),365)+1)*100 << \"%\";\n    return 0;\n}\n```\n\n### 三天打鱼两天晒网\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    int r = n % 5;\n    if (r == 1 || r == 2 || r == 3) {\n        cout << \"Fishing in day \" << n << endl;\n    } else {  // 余数为0或4的情况\n        cout << \"Drying in day \" << n << endl;\n    }\n    return 0;\n}\n```\n\n### 日期计算\n```cpp\n#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nint main() {\n    int year, month, day;\n    cin >> year >> month >> day;\n    \n    // 预定义每月天数（2月按平年计算）\n    int days[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    \n    // 处理闰年\n    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {\n        days[2] = 29;\n    }\n    \n    int total = day;\n    for (int i = 1; i < month; i++) {\n        total += days[i];\n    }\n    \n    cout << setfill('0') \n         << setw(4) << year << \"-\"\n         << setw(2) << month << \"-\"\n         << setw(2) << day << \":\" \n         << total << endl;\n    \n    return 0;\n}\n```\n\n### 数组最大值最小值交换\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\nint main(){\n    int n;\n    cin >> n;\n    vector<int> shuzi(n);\n    for(int i = 0; i < n; i++) cin >> shuzi[i];\n    auto max = max_element(shuzi.begin(), shuzi.end());\n    auto min = min_element(shuzi.begin(), shuzi.end());\n    int maxweizhi = distance(shuzi.begin(), max);\n    int minweizhi = distance(shuzi.begin(), min);\n    swap(shuzi[maxweizhi], shuzi[minweizhi]);\n    cout << \"max = \" << *max << \", min = \" << *min << endl;\n    for(int i = 0; i < n; i++){\n        cout << shuzi[i];\n        if(i != n-1) cout << \" \";\n    }\n    return 0;\n}\n```\n\n### 菱形打印\n```cpp\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    \n    // 打印上半部分（包括中间行）\n    for(int i = 0; i < n / 2 + 1; i++){\n        for(int j = 0; j < n / 2 - i; j++) cout << \" \";\n        for(int j = 0; j < 2 * i + 1; j++) cout << \"*\";\n        cout << endl;\n    }\n    \n    // 打印下半部分\n    for(int i = n / 2 - 1; i >= 0; i--){\n        for(int j = 0; j < n / 2 - i; j++) cout << \" \";\n        for(int j = 0; j < 2 * i + 1; j++) cout << \"*\";\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 回文质数\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n// 素数判断函数\nbool sushu(int n) {\n    if (n <= 1) return false;  // 1不是素数\n    for (int i = 2; i * i <= n; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n\n// 数字反转\nint fanzhuan(int n){\n    int temp = n, ans = 0;\n    while (temp != 0) {\n        ans = ans * 10 + temp % 10;\n        temp /= 10;\n    }\n    return ans;\n}\n\nint main() {\n    int m, n, ans = 0;\n    cin >> m >> n;\n    \n    for (int i = m; i <= n; i++) {\n        if (sushu(i) && sushu(fanzhuan(i))) ans++;\n    }\n    \n    cout << ans;\n    return 0;\n}\n```\n\n---\n\n## 函数题\n\n### 二维数组行最大值与列最小值的平均值\n\n```cpp\ndouble Average(double a[][M], int n) {\n    double sum = 0;\n    \n    // 计算每行的最大值并累加到总和\n    for (int i = 0; i < n; i++) {\n        double max = a[i][0];\n        for (int j = 1; j < M; j++) {\n            if (a[i][j] > max) {\n                max = a[i][j];\n            }\n        }\n        sum += max;\n    }\n    \n    // 计算每列的最小值并累加到总和\n    for (int j = 0; j < M; j++) {\n        double min = a[0][j];\n        for (int i = 1; i < n; i++) {\n            if (a[i][j] < min) {\n                min = a[i][j];\n            }\n        }\n        sum += min;\n    }\n    \n    // 返回平均值\n    return sum / (n + M);\n}\n```\n\n### 最大公约数（辗转相除法）\n\n```cpp\nint gcd(int a, int b) {\n    while (b != 0) {\n        int t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}\n```\n\n### 素数判断\n\n```cpp\nbool isPrime(int n) {\n    if (n <= 1) return false;\n    for (int i = 2; i * i <= n; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n```\n\n### 斐波那契数列\n\n```cpp\nvoid fibo(int n, int f[]) {\n    f[0] = 0;\n    f[1] = 1;\n    for (int i = 2; i < n; i++) {\n        f[i] = f[i-1] + f[i-2];\n    }\n}\n```\n\n### 字符串反转\n\n```cpp\nvoid reverse(char str[]) {\n    int len = strlen(str);\n    for (int i = 0; i < len / 2; i++) {\n        char temp = str[i];\n        str[i] = str[len - 1 - i];\n        str[len - 1 - i] = temp;\n    }\n}\n```\n\n### 数组排序\n\n```cpp\nvoid sort(int arr[], int n) {\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = 0; j < n - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n```\n\n---\n\n## 程序填空\n\n### 1. Student类填空题\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nclass Student\n{\npublic:\n    Student(int i_id, char i_name[]);\n    int getId();\nprivate:\n    int id;\n    char name[20];\n};\n\nStudent::Student(int i_id, char i_name[])\n{\n    id = i_id;\n    strcpy(name, i_name);  // 【1】必须使用strcpy进行字符串深拷贝\n}\n\nint Student::getId()\n{\n    return id;  // 【2】返回私有成员id的值\n}\n\nint main()\n{\n    Student s1(1, \"zhangsan\");\n    cout << s1.getId() << endl;  // 【3】成员函数调用必须带括号\n}\n```\n\n### 2. Complex类填空题\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass Complex\n{\npublic:\n  Complex() { Set(0,0); }                   \n  Complex(double r, double i);                   \n  void Set(double r, double i);\n  void Output();\n  double GetReal() { return real; }\n  double GetImag() { return imag; }\nprivate:\n  double real, imag;\n};\n\nComplex::Complex(double r, double i)  // 【1】类外定义需作用域解析符和完整参数类型\n{\n     Set(r, i);\n}\n\nint main()\n{\n    Complex p2(1,2);\n    cout << p2.GetReal() << \"+\" << p2.GetImag() << \"i\" << endl;  // 【2】成员函数调用需注意大小写一致\n}\n```\n\n### 3. 冒泡排序填空题\n\n```cpp\nvoid BubbleSort(int a[],int n)\n{\n    int i,j;\n    for(j=0;j<n;j++)  // 【1】外层循环变量初始化\n        for(i=0;i<n-j-1;i++)  // 【2】每轮减少比较次数\n            if(a[i] > a[i+1])  // 【3】升序排序条件\n            {\n                int t=a[i];\n                a[i] = a[i+1];  // 【4】元素交换操作\n                a[i+1]=t;\n            }    \n}\n```\n\n### 4. 选择排序填空题\n\n```cpp\nfor(k = 0; k < n-1; k++){  // 【1】需n-1轮选择\n    index = k;  // 【2】初始化最大值位置\n    for(i = k+1; i < n; i++)  // 【3】遍历未排序部分\n    {\n        if(a[i] > a[index])  // 【4】找更大值条件\n        {\n            index = i;  // 【5】更新最大值索引\n        }    \n     }  \n   temp = a[index];  \n   a[index] = a[k]; \n   a[k] = temp;\n}\n```\n\n### 5. 二维数组对称判断\n\n```cpp\nfor(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n        if(a[i][j] != a[j][i])  // 【1】对称判断条件\n        {       \n            found = 0;  // 【2】发现不对称时标记\n            break;\n        }\n    }\n    if(found == 0) break;  // 【3】发现不对称提前退出\n}\n```\n\n### 6. 有序插入字符\n\n```cpp\n#include<iostream>\nusing namespace std;\nvoid insertString(char str[], char c);  // 【1】函数前置声明\n\nint main()\n{\n    char str[100],c;\n    cin.getline(str,99);\n    cin>>c;\n    insertString(str, c);  // 【2】函数调用\n    cout<<str<<endl;\n}\n\nvoid insertString (char str[], char c)\n{\n    int n,i;\n    for(n=0;str[n]!=0;n++);\n    str[n+1]='\\0';\n    for(i = n-1;i>=0;i--)  // 【3】从末尾开始遍历\n        if(str[i]>c) \n            str[i+1] = str[i]  // 【4】元素后移操作\n        else\n            break;\n    str[i+1] = c;  // 【5】在正确位置插入字符\n}\n```\n\n### 7. Circle类填空题\n\n```cpp\nclass Circle\n{\npublic:  // 【1】公共访问权限\n    double m_r;  // 【2】定义半径属性\n    double calculateZC()\n    {\n        return 2 * PI * m_r;  // 【3】圆周长公式\n    }\n};\n```\n\n### 8. 类的权限控制\n\n```cpp\nclass Person\n{\npublic:\n    void setmycar(string a) { m_Car = a; }  // 【1】保护属性设置方法\n    void setpassword(int a) { m_Password = a; }  // 【2】私有属性设置方法\n};\n\nint main() {\n    Person p;\n    cout << p.m_Name << endl;  // 【3】公共属性直接访问\n}\n```\n\n### 9. 类的读写控制\n\n```cpp\nclass Person {\npublic:\n    // 姓名可读可写\n    void setName(string name) { m_Name = name; }  // 【1】【2】设置姓名\n    string getName() { return m_Name; }  // 【3】【4】获取姓名\n    \n    // 暗恋对象只写\n    void setLover(string lover) { m_Lover = lover; }  // 【5】【6】设置暗恋对象\n    \n    // 所在地只读\n    string getip() { return ip; }  // 【7】【8】获取所在地\n};\n```\n\n### 10. Circle类构建\n\n```cpp\nclass Circle {  // 【1】类名\npublic:\n    Circle(double ir);  // 【2】构造函数参数\n    void setR(double ir);  // 【3】设置半径方法\n    double getArea();  // 【4】获取面积方法\n};\n\nCircle::Circle(double ir){ r=ir; }  // 【5】构造函数参数\ndouble getArea(){ return 3.14*r*r; }  // 【6】返回类型\n```\n\n### 11. Time类\n\n```cpp\nTime::Time(int h=0, int m=0, int s=0) { setTime(h,m,s); }  // 【1】构造函数默认参数\nvoid Time::setTime(int h,int m,int s) { hour=h; min=m; sec=s; }  // 【2】类外实现作用域\nint Time::getHour() { return hour; }  // 【3】返回私有成员值\n```\n\n---\n\n## 常用技巧\n\n### 1. 连续输出文本\n```cpp\ncout << \n\"                ********\\n\"\n\"               ************\\n\"\n\"               ####....#.\\n\"\n\"             #..###.....##....\\n\"\n\"            ###.......######              ###            ###\\n\";\n```\n\n### 2. 浮点数精度控制\n```cpp\n#include <iomanip>\ndouble t;\nint n;\ncin >> t >> n;\ndouble perStudent = t / n;\ncout << fixed << setprecision(3) << perStudent << endl;\n```\n\n### 3. 字符串反转\n```cpp\n#include <string>\n#include <algorithm>\n\nstring a;\ncin >> a;\nreverse(a.begin(), a.end());  // 反转字符串\ncout << a << endl;\n```\n\n### 4. 字符大小写转换\n```cpp\n// 方法1：ASCII码计算\nchar s;\ncin >> s;\nchar m = s - ('a' - 'A');  // 小写转大写\ncout << m << endl;\n\n// 方法2：使用函数\n#include <cctype>\nchar c;\ncin >> c;\nc = toupper(c);  // 转换为大写\ncout << c << endl;\n```\n\n### 5. 闰年判断\n```cpp\nbool isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);\n}\n```\n\n### 6. 向上取整\n```cpp\n#include <cmath>\ndouble v = 3.14 * r * r * h;\nint n = ceil(20000.0 / v);\n```\n\n### 7. 字符串转数字\n```cpp\nstring s = \"123\";\nint num = stoi(s);  // 字符串转整数\ndouble d = stod(s);  // 字符串转浮点数\n```\n\n### 8. 数字转字符串\n```cpp\nint num = 123;\nstring s = to_string(num);  // 数字转字符串\n```\n\n### 9. 数组初始化\n```cpp\n// 一维数组\nint arr[10] = {0};  // 全部初始化为0\nvector<int> vec(10, 0);  // vector初始化\n\n// 二维数组\nint arr[3][3] = {{1,2,3},{4,5,6},{7,8,9}};\nvector<vector<int>> vec(3, vector<int>(3, 0));\n```\n\n### 10. 常用算法函数\n```cpp\n#include <algorithm>\n\n// 排序\nsort(vec.begin(), vec.end());\n\n// 反转\nreverse(vec.begin(), vec.end());\n\n// 查找最大最小值\nauto max_it = max_element(vec.begin(), vec.end());\nauto min_it = min_element(vec.begin(), vec.end());\n\n// 交换\nswap(a, b);\n``` ","source":"_posts/普通题目.md","raw":"---\ntitle: C++普通题集\ndate: 2025-08-04 20:20:10\ncategories:\n  - study\ntags:\n  - C++\n  - 题目集\n---\n# 普通题目集\n\n## 目录\n1. [编程题](#编程题)\n2. [函数题](#函数题)\n3. [程序填空](#程序填空)\n4. [常用技巧](#常用技巧)\n\n---\n\n## 编程题\n\n### 前导零处理\n\n**vector版本：**\n```cpp\nvector<int> digits;\nwhile (num > 0) {\n    digits.push_back(num % 10);  // 存入个位（低位在前）\n    num /= 10;\n}\n// digits 中存储的顺序已经是逆序，例如：\n// 输入700 → digits={0,0,7}\n// 输入123 → digits={3,2,1}\n\n// 直接输出：\nfor (int d : digits) cout << d;  // 输出时自动忽略前导零\n```\n\n**字符串版本：**\n```cpp\nstring num;\ncin >> num;  // 输入 \"700\"\nreverse(num.begin(), num.end());  // 反转后 \"007\"\ncout << stoi(num) << endl;  // stoi(\"007\") → 7（自动忽略前导零）\n```\n\n### 向上取整\n```cpp\n#include <cmath>\nceil(2.4)  // 得到3\n```\n\n### 字符函数使用\n\n**相关函数集：**\n| 函数名       | 功能描述                   |\n|--------------|--------------------------|\n| `isdigit()`  | 检查数字字符（0-9）        |\n| `isalnum()`  | 检查字母或数字字符         |\n| `islower()`  | 检查小写字母（a-z）        |\n| `isupper()`  | 检查大写字母（A-Z）        |\n| `isspace()`  | 检查空白字符（空格/制表符等）|\n| `ispunct()`  | 检查标点符号               |\n| `isprint()`  | 检查可打印字符             |\n\n**常见错误：**\n```cpp\n// 错误：stoi(c) 不能用于单个字符\nfor(char c : s){\n    if(isdigit(c)){\n        sum += stoi(c);  // 错误！\n        cnt++;\n    }\n}\n\n// 正确：需要将字符转换为数字\nint num = c - '0';  // 字符转数字\nsum += num;\n```\n\n### 二维数组转置\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int m, n;\n    cin >> m >> n;\n    \n    // 定义原始矩阵和转置矩阵的vector\n    vector<vector<int>> original(m, vector<int>(n));\n    vector<vector<int>> transposed(n, vector<int>(m));\n    \n    // 读取原始矩阵\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            cin >> original[i][j];\n        }\n    }\n    \n    // 进行转置\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            transposed[j][i] = original[i][j];\n        }\n    }\n    \n    // 输出转置后的矩阵，每个数据占5列\n    for (const auto& row : transposed) {\n        for (int num : row) {\n            cout << setw(5) << num;\n        }\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 杨辉三角\n```cpp\n#include<iostream>\nusing namespace std;\nlong long a,b[100][100];\nint main() {\n    cin>>a;\n    b[1][1]=1;\n    for(int i=1;i<=a;i++){\n        for(int j=1;j<=i;j++){\n            b[i][j]+=b[i-1][j-1]+b[i-1][j];\n            cout<<b[i][j]<<\" \";\n        }\n        cout<<endl;\n    }\n}\n```\n\n### 回文判断\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    string s;\n    getline(cin,s);\n    \n    string s1 = s;\n    reverse(s1.begin(),s1.end());\n    if(s1 == s) cout << s << \"是回文\";\n    else cout << s << \"不是回文\";\n    return 0;\n}\n```\n\n### 字符统计\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    vector<int> cnt(10,0);  // 注意初始化大小\n    string s;\n    cin >> s;\n    for(int i = 0; i < s.size(); i++){\n        cnt[s[i]- '0']++;  // 注意字符转数字\n    }\n    for(int i = 0; i < cnt.size(); i++){\n        if(cnt[i]!=0){\n            cout << i << \":\" << cnt[i]<<endl;\n        }\n    }\n    return 0;\n}\n```\n\n### 外卖费用计算\n```cpp\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    char m;\n    cin >> n >> m;\n    int a = n / 500;  // 关键是那句不足500克按500克收就这样方便\n    if(n % 500 != 0) a++;  // 模拟\n    int b = 4 + 3 * (a - 2);  // 模拟知道这里是-2\n    if(n <= 1000) b = 4;  // 这句是为了防止n小于500的情况\n    if(m == 'y') b += 5;\n    cout << b << endl;\n    return 0;\n}\n```\n\n### 天天向上\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    double d;\n    cin >> d;\n    if(d >= 0) cout << \"up:\"<<fixed << setprecision(2) << (pow(1+d,365)-1)*100 << \"%\";\n    if(d < 0) cout << \"down:\"<<fixed << setprecision(2) << (-pow(1-abs(d),365)+1)*100 << \"%\";\n    return 0;\n}\n```\n\n### 三天打鱼两天晒网\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    int r = n % 5;\n    if (r == 1 || r == 2 || r == 3) {\n        cout << \"Fishing in day \" << n << endl;\n    } else {  // 余数为0或4的情况\n        cout << \"Drying in day \" << n << endl;\n    }\n    return 0;\n}\n```\n\n### 日期计算\n```cpp\n#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nint main() {\n    int year, month, day;\n    cin >> year >> month >> day;\n    \n    // 预定义每月天数（2月按平年计算）\n    int days[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    \n    // 处理闰年\n    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {\n        days[2] = 29;\n    }\n    \n    int total = day;\n    for (int i = 1; i < month; i++) {\n        total += days[i];\n    }\n    \n    cout << setfill('0') \n         << setw(4) << year << \"-\"\n         << setw(2) << month << \"-\"\n         << setw(2) << day << \":\" \n         << total << endl;\n    \n    return 0;\n}\n```\n\n### 数组最大值最小值交换\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\nint main(){\n    int n;\n    cin >> n;\n    vector<int> shuzi(n);\n    for(int i = 0; i < n; i++) cin >> shuzi[i];\n    auto max = max_element(shuzi.begin(), shuzi.end());\n    auto min = min_element(shuzi.begin(), shuzi.end());\n    int maxweizhi = distance(shuzi.begin(), max);\n    int minweizhi = distance(shuzi.begin(), min);\n    swap(shuzi[maxweizhi], shuzi[minweizhi]);\n    cout << \"max = \" << *max << \", min = \" << *min << endl;\n    for(int i = 0; i < n; i++){\n        cout << shuzi[i];\n        if(i != n-1) cout << \" \";\n    }\n    return 0;\n}\n```\n\n### 菱形打印\n```cpp\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    \n    // 打印上半部分（包括中间行）\n    for(int i = 0; i < n / 2 + 1; i++){\n        for(int j = 0; j < n / 2 - i; j++) cout << \" \";\n        for(int j = 0; j < 2 * i + 1; j++) cout << \"*\";\n        cout << endl;\n    }\n    \n    // 打印下半部分\n    for(int i = n / 2 - 1; i >= 0; i--){\n        for(int j = 0; j < n / 2 - i; j++) cout << \" \";\n        for(int j = 0; j < 2 * i + 1; j++) cout << \"*\";\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 回文质数\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n// 素数判断函数\nbool sushu(int n) {\n    if (n <= 1) return false;  // 1不是素数\n    for (int i = 2; i * i <= n; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n\n// 数字反转\nint fanzhuan(int n){\n    int temp = n, ans = 0;\n    while (temp != 0) {\n        ans = ans * 10 + temp % 10;\n        temp /= 10;\n    }\n    return ans;\n}\n\nint main() {\n    int m, n, ans = 0;\n    cin >> m >> n;\n    \n    for (int i = m; i <= n; i++) {\n        if (sushu(i) && sushu(fanzhuan(i))) ans++;\n    }\n    \n    cout << ans;\n    return 0;\n}\n```\n\n---\n\n## 函数题\n\n### 二维数组行最大值与列最小值的平均值\n\n```cpp\ndouble Average(double a[][M], int n) {\n    double sum = 0;\n    \n    // 计算每行的最大值并累加到总和\n    for (int i = 0; i < n; i++) {\n        double max = a[i][0];\n        for (int j = 1; j < M; j++) {\n            if (a[i][j] > max) {\n                max = a[i][j];\n            }\n        }\n        sum += max;\n    }\n    \n    // 计算每列的最小值并累加到总和\n    for (int j = 0; j < M; j++) {\n        double min = a[0][j];\n        for (int i = 1; i < n; i++) {\n            if (a[i][j] < min) {\n                min = a[i][j];\n            }\n        }\n        sum += min;\n    }\n    \n    // 返回平均值\n    return sum / (n + M);\n}\n```\n\n### 最大公约数（辗转相除法）\n\n```cpp\nint gcd(int a, int b) {\n    while (b != 0) {\n        int t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}\n```\n\n### 素数判断\n\n```cpp\nbool isPrime(int n) {\n    if (n <= 1) return false;\n    for (int i = 2; i * i <= n; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n```\n\n### 斐波那契数列\n\n```cpp\nvoid fibo(int n, int f[]) {\n    f[0] = 0;\n    f[1] = 1;\n    for (int i = 2; i < n; i++) {\n        f[i] = f[i-1] + f[i-2];\n    }\n}\n```\n\n### 字符串反转\n\n```cpp\nvoid reverse(char str[]) {\n    int len = strlen(str);\n    for (int i = 0; i < len / 2; i++) {\n        char temp = str[i];\n        str[i] = str[len - 1 - i];\n        str[len - 1 - i] = temp;\n    }\n}\n```\n\n### 数组排序\n\n```cpp\nvoid sort(int arr[], int n) {\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = 0; j < n - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n```\n\n---\n\n## 程序填空\n\n### 1. Student类填空题\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nclass Student\n{\npublic:\n    Student(int i_id, char i_name[]);\n    int getId();\nprivate:\n    int id;\n    char name[20];\n};\n\nStudent::Student(int i_id, char i_name[])\n{\n    id = i_id;\n    strcpy(name, i_name);  // 【1】必须使用strcpy进行字符串深拷贝\n}\n\nint Student::getId()\n{\n    return id;  // 【2】返回私有成员id的值\n}\n\nint main()\n{\n    Student s1(1, \"zhangsan\");\n    cout << s1.getId() << endl;  // 【3】成员函数调用必须带括号\n}\n```\n\n### 2. Complex类填空题\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass Complex\n{\npublic:\n  Complex() { Set(0,0); }                   \n  Complex(double r, double i);                   \n  void Set(double r, double i);\n  void Output();\n  double GetReal() { return real; }\n  double GetImag() { return imag; }\nprivate:\n  double real, imag;\n};\n\nComplex::Complex(double r, double i)  // 【1】类外定义需作用域解析符和完整参数类型\n{\n     Set(r, i);\n}\n\nint main()\n{\n    Complex p2(1,2);\n    cout << p2.GetReal() << \"+\" << p2.GetImag() << \"i\" << endl;  // 【2】成员函数调用需注意大小写一致\n}\n```\n\n### 3. 冒泡排序填空题\n\n```cpp\nvoid BubbleSort(int a[],int n)\n{\n    int i,j;\n    for(j=0;j<n;j++)  // 【1】外层循环变量初始化\n        for(i=0;i<n-j-1;i++)  // 【2】每轮减少比较次数\n            if(a[i] > a[i+1])  // 【3】升序排序条件\n            {\n                int t=a[i];\n                a[i] = a[i+1];  // 【4】元素交换操作\n                a[i+1]=t;\n            }    \n}\n```\n\n### 4. 选择排序填空题\n\n```cpp\nfor(k = 0; k < n-1; k++){  // 【1】需n-1轮选择\n    index = k;  // 【2】初始化最大值位置\n    for(i = k+1; i < n; i++)  // 【3】遍历未排序部分\n    {\n        if(a[i] > a[index])  // 【4】找更大值条件\n        {\n            index = i;  // 【5】更新最大值索引\n        }    \n     }  \n   temp = a[index];  \n   a[index] = a[k]; \n   a[k] = temp;\n}\n```\n\n### 5. 二维数组对称判断\n\n```cpp\nfor(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n        if(a[i][j] != a[j][i])  // 【1】对称判断条件\n        {       \n            found = 0;  // 【2】发现不对称时标记\n            break;\n        }\n    }\n    if(found == 0) break;  // 【3】发现不对称提前退出\n}\n```\n\n### 6. 有序插入字符\n\n```cpp\n#include<iostream>\nusing namespace std;\nvoid insertString(char str[], char c);  // 【1】函数前置声明\n\nint main()\n{\n    char str[100],c;\n    cin.getline(str,99);\n    cin>>c;\n    insertString(str, c);  // 【2】函数调用\n    cout<<str<<endl;\n}\n\nvoid insertString (char str[], char c)\n{\n    int n,i;\n    for(n=0;str[n]!=0;n++);\n    str[n+1]='\\0';\n    for(i = n-1;i>=0;i--)  // 【3】从末尾开始遍历\n        if(str[i]>c) \n            str[i+1] = str[i]  // 【4】元素后移操作\n        else\n            break;\n    str[i+1] = c;  // 【5】在正确位置插入字符\n}\n```\n\n### 7. Circle类填空题\n\n```cpp\nclass Circle\n{\npublic:  // 【1】公共访问权限\n    double m_r;  // 【2】定义半径属性\n    double calculateZC()\n    {\n        return 2 * PI * m_r;  // 【3】圆周长公式\n    }\n};\n```\n\n### 8. 类的权限控制\n\n```cpp\nclass Person\n{\npublic:\n    void setmycar(string a) { m_Car = a; }  // 【1】保护属性设置方法\n    void setpassword(int a) { m_Password = a; }  // 【2】私有属性设置方法\n};\n\nint main() {\n    Person p;\n    cout << p.m_Name << endl;  // 【3】公共属性直接访问\n}\n```\n\n### 9. 类的读写控制\n\n```cpp\nclass Person {\npublic:\n    // 姓名可读可写\n    void setName(string name) { m_Name = name; }  // 【1】【2】设置姓名\n    string getName() { return m_Name; }  // 【3】【4】获取姓名\n    \n    // 暗恋对象只写\n    void setLover(string lover) { m_Lover = lover; }  // 【5】【6】设置暗恋对象\n    \n    // 所在地只读\n    string getip() { return ip; }  // 【7】【8】获取所在地\n};\n```\n\n### 10. Circle类构建\n\n```cpp\nclass Circle {  // 【1】类名\npublic:\n    Circle(double ir);  // 【2】构造函数参数\n    void setR(double ir);  // 【3】设置半径方法\n    double getArea();  // 【4】获取面积方法\n};\n\nCircle::Circle(double ir){ r=ir; }  // 【5】构造函数参数\ndouble getArea(){ return 3.14*r*r; }  // 【6】返回类型\n```\n\n### 11. Time类\n\n```cpp\nTime::Time(int h=0, int m=0, int s=0) { setTime(h,m,s); }  // 【1】构造函数默认参数\nvoid Time::setTime(int h,int m,int s) { hour=h; min=m; sec=s; }  // 【2】类外实现作用域\nint Time::getHour() { return hour; }  // 【3】返回私有成员值\n```\n\n---\n\n## 常用技巧\n\n### 1. 连续输出文本\n```cpp\ncout << \n\"                ********\\n\"\n\"               ************\\n\"\n\"               ####....#.\\n\"\n\"             #..###.....##....\\n\"\n\"            ###.......######              ###            ###\\n\";\n```\n\n### 2. 浮点数精度控制\n```cpp\n#include <iomanip>\ndouble t;\nint n;\ncin >> t >> n;\ndouble perStudent = t / n;\ncout << fixed << setprecision(3) << perStudent << endl;\n```\n\n### 3. 字符串反转\n```cpp\n#include <string>\n#include <algorithm>\n\nstring a;\ncin >> a;\nreverse(a.begin(), a.end());  // 反转字符串\ncout << a << endl;\n```\n\n### 4. 字符大小写转换\n```cpp\n// 方法1：ASCII码计算\nchar s;\ncin >> s;\nchar m = s - ('a' - 'A');  // 小写转大写\ncout << m << endl;\n\n// 方法2：使用函数\n#include <cctype>\nchar c;\ncin >> c;\nc = toupper(c);  // 转换为大写\ncout << c << endl;\n```\n\n### 5. 闰年判断\n```cpp\nbool isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);\n}\n```\n\n### 6. 向上取整\n```cpp\n#include <cmath>\ndouble v = 3.14 * r * r * h;\nint n = ceil(20000.0 / v);\n```\n\n### 7. 字符串转数字\n```cpp\nstring s = \"123\";\nint num = stoi(s);  // 字符串转整数\ndouble d = stod(s);  // 字符串转浮点数\n```\n\n### 8. 数字转字符串\n```cpp\nint num = 123;\nstring s = to_string(num);  // 数字转字符串\n```\n\n### 9. 数组初始化\n```cpp\n// 一维数组\nint arr[10] = {0};  // 全部初始化为0\nvector<int> vec(10, 0);  // vector初始化\n\n// 二维数组\nint arr[3][3] = {{1,2,3},{4,5,6},{7,8,9}};\nvector<vector<int>> vec(3, vector<int>(3, 0));\n```\n\n### 10. 常用算法函数\n```cpp\n#include <algorithm>\n\n// 排序\nsort(vec.begin(), vec.end());\n\n// 反转\nreverse(vec.begin(), vec.end());\n\n// 查找最大最小值\nauto max_it = max_element(vec.begin(), vec.end());\nauto min_it = min_element(vec.begin(), vec.end());\n\n// 交换\nswap(a, b);\n``` ","slug":"普通题目","published":1,"updated":"2025-09-10T05:34:05.738Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5cox000b9c9k7o03802g","content":"<h1 id=\"普通题目集\"><a href=\"#普通题目集\" class=\"headerlink\" title=\"普通题目集\"></a>普通题目集</h1><h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#%E7%BC%96%E7%A8%8B%E9%A2%98\">编程题</a></li>\n<li><a href=\"#%E5%87%BD%E6%95%B0%E9%A2%98\">函数题</a></li>\n<li><a href=\"#%E7%A8%8B%E5%BA%8F%E5%A1%AB%E7%A9%BA\">程序填空</a></li>\n<li><a href=\"#%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7\">常用技巧</a></li>\n</ol>\n<hr>\n<h2 id=\"编程题\"><a href=\"#编程题\" class=\"headerlink\" title=\"编程题\"></a>编程题</h2><h3 id=\"前导零处理\"><a href=\"#前导零处理\" class=\"headerlink\" title=\"前导零处理\"></a>前导零处理</h3><p><strong>vector版本：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; digits;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (num &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    digits.<span class=\"built_in\">push_back</span>(num % <span class=\"number\">10</span>);  <span class=\"comment\">// 存入个位（低位在前）</span></span><br><span class=\"line\">    num /= <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// digits 中存储的顺序已经是逆序，例如：</span></span><br><span class=\"line\"><span class=\"comment\">// 输入700 → digits=&#123;0,0,7&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 输入123 → digits=&#123;3,2,1&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接输出：</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> d : digits) cout &lt;&lt; d;  <span class=\"comment\">// 输出时自动忽略前导零</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>字符串版本：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string num;</span><br><span class=\"line\">cin &gt;&gt; num;  <span class=\"comment\">// 输入 &quot;700&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(num.<span class=\"built_in\">begin</span>(), num.<span class=\"built_in\">end</span>());  <span class=\"comment\">// 反转后 &quot;007&quot;</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">stoi</span>(num) &lt;&lt; endl;  <span class=\"comment\">// stoi(&quot;007&quot;) → 7（自动忽略前导零）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"向上取整\"><a href=\"#向上取整\" class=\"headerlink\" title=\"向上取整\"></a>向上取整</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"built_in\">ceil</span>(<span class=\"number\">2.4</span>)  <span class=\"comment\">// 得到3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符函数使用\"><a href=\"#字符函数使用\" class=\"headerlink\" title=\"字符函数使用\"></a>字符函数使用</h3><p><strong>相关函数集：</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>isdigit()</code></td>\n<td>检查数字字符（0-9）</td>\n</tr>\n<tr>\n<td><code>isalnum()</code></td>\n<td>检查字母或数字字符</td>\n</tr>\n<tr>\n<td><code>islower()</code></td>\n<td>检查小写字母（a-z）</td>\n</tr>\n<tr>\n<td><code>isupper()</code></td>\n<td>检查大写字母（A-Z）</td>\n</tr>\n<tr>\n<td><code>isspace()</code></td>\n<td>检查空白字符（空格&#x2F;制表符等）</td>\n</tr>\n<tr>\n<td><code>ispunct()</code></td>\n<td>检查标点符号</td>\n</tr>\n<tr>\n<td><code>isprint()</code></td>\n<td>检查可打印字符</td>\n</tr>\n</tbody></table>\n<p><strong>常见错误：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误：stoi(c) 不能用于单个字符</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">char</span> c : s)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">isdigit</span>(c))&#123;</span><br><span class=\"line\">        sum += <span class=\"built_in\">stoi</span>(c);  <span class=\"comment\">// 错误！</span></span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确：需要将字符转换为数字</span></span><br><span class=\"line\"><span class=\"type\">int</span> num = c - <span class=\"string\">&#x27;0&#x27;</span>;  <span class=\"comment\">// 字符转数字</span></span><br><span class=\"line\">sum += num;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维数组转置\"><a href=\"#二维数组转置\" class=\"headerlink\" title=\"二维数组转置\"></a>二维数组转置</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 定义原始矩阵和转置矩阵的vector</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">original</span>(m, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">transposed</span>(n, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 读取原始矩阵</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            cin &gt;&gt; original[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 进行转置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            transposed[j][i] = original[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输出转置后的矩阵，每个数据占5列</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; row : transposed) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : row) &#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">5</span>) &lt;&lt; num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"杨辉三角\"><a href=\"#杨辉三角\" class=\"headerlink\" title=\"杨辉三角\"></a>杨辉三角</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> a,b[<span class=\"number\">100</span>][<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cin&gt;&gt;a;</span><br><span class=\"line\">    b[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=a;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">            b[i][j]+=b[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+b[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">            cout&lt;&lt;b[i][j]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout&lt;&lt;endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回文判断\"><a href=\"#回文判断\" class=\"headerlink\" title=\"回文判断\"></a>回文判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin,s);</span><br><span class=\"line\">    </span><br><span class=\"line\">    string s1 = s;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(s<span class=\"number\">1.</span><span class=\"built_in\">begin</span>(),s<span class=\"number\">1.</span><span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s1 == s) cout &lt;&lt; s &lt;&lt; <span class=\"string\">&quot;是回文&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> cout &lt;&lt; s &lt;&lt; <span class=\"string\">&quot;不是回文&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符统计\"><a href=\"#字符统计\" class=\"headerlink\" title=\"字符统计\"></a>字符统计</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">cnt</span><span class=\"params\">(<span class=\"number\">10</span>,<span class=\"number\">0</span>)</span></span>;  <span class=\"comment\">// 注意初始化大小</span></span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin &gt;&gt; s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">size</span>(); i++)&#123;</span><br><span class=\"line\">        cnt[s[i]- <span class=\"string\">&#x27;0&#x27;</span>]++;  <span class=\"comment\">// 注意字符转数字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; cnt.<span class=\"built_in\">size</span>(); i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cnt[i]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            cout &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;:&quot;</span> &lt;&lt; cnt[i]&lt;&lt;endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"外卖费用计算\"><a href=\"#外卖费用计算\" class=\"headerlink\" title=\"外卖费用计算\"></a>外卖费用计算</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"type\">char</span> m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = n / <span class=\"number\">500</span>;  <span class=\"comment\">// 关键是那句不足500克按500克收就这样方便</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n % <span class=\"number\">500</span> != <span class=\"number\">0</span>) a++;  <span class=\"comment\">// 模拟</span></span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">4</span> + <span class=\"number\">3</span> * (a - <span class=\"number\">2</span>);  <span class=\"comment\">// 模拟知道这里是-2</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1000</span>) b = <span class=\"number\">4</span>;  <span class=\"comment\">// 这句是为了防止n小于500的情况</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(m == <span class=\"string\">&#x27;y&#x27;</span>) b += <span class=\"number\">5</span>;</span><br><span class=\"line\">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"天天向上\"><a href=\"#天天向上\" class=\"headerlink\" title=\"天天向上\"></a>天天向上</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> d;</span><br><span class=\"line\">    cin &gt;&gt; d;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(d &gt;= <span class=\"number\">0</span>) cout &lt;&lt; <span class=\"string\">&quot;up:&quot;</span>&lt;&lt;fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; (<span class=\"built_in\">pow</span>(<span class=\"number\">1</span>+d,<span class=\"number\">365</span>)<span class=\"number\">-1</span>)*<span class=\"number\">100</span> &lt;&lt; <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(d &lt; <span class=\"number\">0</span>) cout &lt;&lt; <span class=\"string\">&quot;down:&quot;</span>&lt;&lt;fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; (-<span class=\"built_in\">pow</span>(<span class=\"number\">1</span>-<span class=\"built_in\">abs</span>(d),<span class=\"number\">365</span>)<span class=\"number\">+1</span>)*<span class=\"number\">100</span> &lt;&lt; <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三天打鱼两天晒网\"><a href=\"#三天打鱼两天晒网\" class=\"headerlink\" title=\"三天打鱼两天晒网\"></a>三天打鱼两天晒网</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> r = n % <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r == <span class=\"number\">1</span> || r == <span class=\"number\">2</span> || r == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Fishing in day &quot;</span> &lt;&lt; n &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 余数为0或4的情况</span></span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Drying in day &quot;</span> &lt;&lt; n &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日期计算\"><a href=\"#日期计算\" class=\"headerlink\" title=\"日期计算\"></a>日期计算</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> year, month, day;</span><br><span class=\"line\">    cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 预定义每月天数（2月按平年计算）</span></span><br><span class=\"line\">    <span class=\"type\">int</span> days[] = &#123;<span class=\"number\">0</span>, <span class=\"number\">31</span>, <span class=\"number\">28</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>&#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 处理闰年</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span>) || (year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">        days[<span class=\"number\">2</span>] = <span class=\"number\">29</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> total = day;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; month; i++) &#123;</span><br><span class=\"line\">        total += days[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">setfill</span>(<span class=\"string\">&#x27;0&#x27;</span>) </span><br><span class=\"line\">         &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">4</span>) &lt;&lt; year &lt;&lt; <span class=\"string\">&quot;-&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">2</span>) &lt;&lt; month &lt;&lt; <span class=\"string\">&quot;-&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">2</span>) &lt;&lt; day &lt;&lt; <span class=\"string\">&quot;:&quot;</span> </span><br><span class=\"line\">         &lt;&lt; total &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组最大值最小值交换\"><a href=\"#数组最大值最小值交换\" class=\"headerlink\" title=\"数组最大值最小值交换\"></a>数组最大值最小值交换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">shuzi</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) cin &gt;&gt; shuzi[i];</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> max = <span class=\"built_in\">max_element</span>(shuzi.<span class=\"built_in\">begin</span>(), shuzi.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> min = <span class=\"built_in\">min_element</span>(shuzi.<span class=\"built_in\">begin</span>(), shuzi.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"type\">int</span> maxweizhi = <span class=\"built_in\">distance</span>(shuzi.<span class=\"built_in\">begin</span>(), max);</span><br><span class=\"line\">    <span class=\"type\">int</span> minweizhi = <span class=\"built_in\">distance</span>(shuzi.<span class=\"built_in\">begin</span>(), min);</span><br><span class=\"line\">    <span class=\"built_in\">swap</span>(shuzi[maxweizhi], shuzi[minweizhi]);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;max = &quot;</span> &lt;&lt; *max &lt;&lt; <span class=\"string\">&quot;, min = &quot;</span> &lt;&lt; *min &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        cout &lt;&lt; shuzi[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i != n<span class=\"number\">-1</span>) cout &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"菱形打印\"><a href=\"#菱形打印\" class=\"headerlink\" title=\"菱形打印\"></a>菱形打印</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 打印上半部分（包括中间行）</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n / <span class=\"number\">2</span> + <span class=\"number\">1</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n / <span class=\"number\">2</span> - i; j++) cout &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span> * i + <span class=\"number\">1</span>; j++) cout &lt;&lt; <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 打印下半部分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = n / <span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n / <span class=\"number\">2</span> - i; j++) cout &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span> * i + <span class=\"number\">1</span>; j++) cout &lt;&lt; <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回文质数\"><a href=\"#回文质数\" class=\"headerlink\" title=\"回文质数\"></a>回文质数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 素数判断函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">sushu</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  <span class=\"comment\">// 1不是素数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % i == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数字反转</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">fanzhuan</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = n, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (temp != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        ans = ans * <span class=\"number\">10</span> + temp % <span class=\"number\">10</span>;</span><br><span class=\"line\">        temp /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = m; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">sushu</span>(i) &amp;&amp; <span class=\"built_in\">sushu</span>(<span class=\"built_in\">fanzhuan</span>(i))) ans++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; ans;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"函数题\"><a href=\"#函数题\" class=\"headerlink\" title=\"函数题\"></a>函数题</h2><h3 id=\"二维数组行最大值与列最小值的平均值\"><a href=\"#二维数组行最大值与列最小值的平均值\" class=\"headerlink\" title=\"二维数组行最大值与列最小值的平均值\"></a>二维数组行最大值与列最小值的平均值</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">Average</span><span class=\"params\">(<span class=\"type\">double</span> a[][M], <span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算每行的最大值并累加到总和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> max = a[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; M; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i][j] &gt; max) &#123;</span><br><span class=\"line\">                max = a[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sum += max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算每列的最小值并累加到总和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; M; j++) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> min = a[<span class=\"number\">0</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i][j] &lt; min) &#123;</span><br><span class=\"line\">                min = a[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sum += min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 返回平均值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum / (n + M);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"最大公约数（辗转相除法）\"><a href=\"#最大公约数（辗转相除法）\" class=\"headerlink\" title=\"最大公约数（辗转相除法）\"></a>最大公约数（辗转相除法）</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (b != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = b;</span><br><span class=\"line\">        b = a % b;</span><br><span class=\"line\">        a = t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"素数判断\"><a href=\"#素数判断\" class=\"headerlink\" title=\"素数判断\"></a>素数判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPrime</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % i == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a>斐波那契数列</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fibo</span><span class=\"params\">(<span class=\"type\">int</span> n, <span class=\"type\">int</span> f[])</span> </span>&#123;</span><br><span class=\"line\">    f[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    f[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        f[i] = f[i<span class=\"number\">-1</span>] + f[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串反转\"><a href=\"#字符串反转\" class=\"headerlink\" title=\"字符串反转\"></a>字符串反转</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(<span class=\"type\">char</span> str[])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(str);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> temp = str[i];</span><br><span class=\"line\">        str[i] = str[len - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">        str[len - <span class=\"number\">1</span> - i] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"type\">int</span> arr[], <span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n - i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[j] &gt; arr[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> temp = arr[j];</span><br><span class=\"line\">                arr[j] = arr[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                arr[j + <span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"程序填空\"><a href=\"#程序填空\" class=\"headerlink\" title=\"程序填空\"></a>程序填空</h2><h3 id=\"1-Student类填空题\"><a href=\"#1-Student类填空题\" class=\"headerlink\" title=\"1. Student类填空题\"></a>1. Student类填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Student</span>(<span class=\"type\">int</span> i_id, <span class=\"type\">char</span> i_name[]);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"type\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Student::<span class=\"built_in\">Student</span>(<span class=\"type\">int</span> i_id, <span class=\"type\">char</span> i_name[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    id = i_id;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(name, i_name);  <span class=\"comment\">// 【1】必须使用strcpy进行字符串深拷贝</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Student::getId</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id;  <span class=\"comment\">// 【2】返回私有成员id的值</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Student <span class=\"title\">s1</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>)</span></span>;</span><br><span class=\"line\">    cout &lt;&lt; s<span class=\"number\">1.</span><span class=\"built_in\">getId</span>() &lt;&lt; endl;  <span class=\"comment\">// 【3】成员函数调用必须带括号</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Complex类填空题\"><a href=\"#2-Complex类填空题\" class=\"headerlink\" title=\"2. Complex类填空题\"></a>2. Complex类填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Complex</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Complex</span>() &#123; <span class=\"built_in\">Set</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>); &#125;                   </span><br><span class=\"line\">  <span class=\"built_in\">Complex</span>(<span class=\"type\">double</span> r, <span class=\"type\">double</span> i);                   </span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Set</span><span class=\"params\">(<span class=\"type\">double</span> r, <span class=\"type\">double</span> i)</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Output</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">GetReal</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> real; &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">GetImag</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> imag; &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"type\">double</span> real, imag;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Complex::<span class=\"built_in\">Complex</span>(<span class=\"type\">double</span> r, <span class=\"type\">double</span> i)  <span class=\"comment\">// 【1】类外定义需作用域解析符和完整参数类型</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"built_in\">Set</span>(r, i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Complex <span class=\"title\">p2</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span></span>;</span><br><span class=\"line\">    cout &lt;&lt; p<span class=\"number\">2.</span><span class=\"built_in\">GetReal</span>() &lt;&lt; <span class=\"string\">&quot;+&quot;</span> &lt;&lt; p<span class=\"number\">2.</span><span class=\"built_in\">GetImag</span>() &lt;&lt; <span class=\"string\">&quot;i&quot;</span> &lt;&lt; endl;  <span class=\"comment\">// 【2】成员函数调用需注意大小写一致</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-冒泡排序填空题\"><a href=\"#3-冒泡排序填空题\" class=\"headerlink\" title=\"3. 冒泡排序填空题\"></a>3. 冒泡排序填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BubbleSort</span><span class=\"params\">(<span class=\"type\">int</span> a[],<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i,j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;n;j++)  <span class=\"comment\">// 【1】外层循环变量初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n-j<span class=\"number\">-1</span>;i++)  <span class=\"comment\">// 【2】每轮减少比较次数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i] &gt; a[i<span class=\"number\">+1</span>])  <span class=\"comment\">// 【3】升序排序条件</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> t=a[i];</span><br><span class=\"line\">                a[i] = a[i<span class=\"number\">+1</span>];  <span class=\"comment\">// 【4】元素交换操作</span></span><br><span class=\"line\">                a[i<span class=\"number\">+1</span>]=t;</span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-选择排序填空题\"><a href=\"#4-选择排序填空题\" class=\"headerlink\" title=\"4. 选择排序填空题\"></a>4. 选择排序填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(k = <span class=\"number\">0</span>; k &lt; n<span class=\"number\">-1</span>; k++)&#123;  <span class=\"comment\">// 【1】需n-1轮选择</span></span><br><span class=\"line\">    index = k;  <span class=\"comment\">// 【2】初始化最大值位置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = k<span class=\"number\">+1</span>; i &lt; n; i++)  <span class=\"comment\">// 【3】遍历未排序部分</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i] &gt; a[index])  <span class=\"comment\">// 【4】找更大值条件</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            index = i;  <span class=\"comment\">// 【5】更新最大值索引</span></span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">   temp = a[index];  </span><br><span class=\"line\">   a[index] = a[k]; </span><br><span class=\"line\">   a[k] = temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-二维数组对称判断\"><a href=\"#5-二维数组对称判断\" class=\"headerlink\" title=\"5. 二维数组对称判断\"></a>5. 二维数组对称判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i][j] != a[j][i])  <span class=\"comment\">// 【1】对称判断条件</span></span><br><span class=\"line\">        &#123;       </span><br><span class=\"line\">            found = <span class=\"number\">0</span>;  <span class=\"comment\">// 【2】发现不对称时标记</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(found == <span class=\"number\">0</span>) <span class=\"keyword\">break</span>;  <span class=\"comment\">// 【3】发现不对称提前退出</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-有序插入字符\"><a href=\"#6-有序插入字符\" class=\"headerlink\" title=\"6. 有序插入字符\"></a>6. 有序插入字符</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insertString</span><span class=\"params\">(<span class=\"type\">char</span> str[], <span class=\"type\">char</span> c)</span></span>;  <span class=\"comment\">// 【1】函数前置声明</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> str[<span class=\"number\">100</span>],c;</span><br><span class=\"line\">    cin.<span class=\"built_in\">getline</span>(str,<span class=\"number\">99</span>);</span><br><span class=\"line\">    cin&gt;&gt;c;</span><br><span class=\"line\">    <span class=\"built_in\">insertString</span>(str, c);  <span class=\"comment\">// 【2】函数调用</span></span><br><span class=\"line\">    cout&lt;&lt;str&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insertString</span> <span class=\"params\">(<span class=\"type\">char</span> str[], <span class=\"type\">char</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(n=<span class=\"number\">0</span>;str[n]!=<span class=\"number\">0</span>;n++);</span><br><span class=\"line\">    str[n<span class=\"number\">+1</span>]=<span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = n<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)  <span class=\"comment\">// 【3】从末尾开始遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str[i]&gt;c) </span><br><span class=\"line\">            str[i<span class=\"number\">+1</span>] = str[i]  <span class=\"comment\">// 【4】元素后移操作</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    str[i<span class=\"number\">+1</span>] = c;  <span class=\"comment\">// 【5】在正确位置插入字符</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-Circle类填空题\"><a href=\"#7-Circle类填空题\" class=\"headerlink\" title=\"7. Circle类填空题\"></a>7. Circle类填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:  <span class=\"comment\">// 【1】公共访问权限</span></span><br><span class=\"line\">    <span class=\"type\">double</span> m_r;  <span class=\"comment\">// 【2】定义半径属性</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">calculateZC</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span> * PI * m_r;  <span class=\"comment\">// 【3】圆周长公式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-类的权限控制\"><a href=\"#8-类的权限控制\" class=\"headerlink\" title=\"8. 类的权限控制\"></a>8. 类的权限控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setmycar</span><span class=\"params\">(string a)</span> </span>&#123; m_Car = a; &#125;  <span class=\"comment\">// 【1】保护属性设置方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setpassword</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> </span>&#123; m_Password = a; &#125;  <span class=\"comment\">// 【2】私有属性设置方法</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Person p;</span><br><span class=\"line\">    cout &lt;&lt; p.m_Name &lt;&lt; endl;  <span class=\"comment\">// 【3】公共属性直接访问</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-类的读写控制\"><a href=\"#9-类的读写控制\" class=\"headerlink\" title=\"9. 类的读写控制\"></a>9. 类的读写控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">// 姓名可读可写</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setName</span><span class=\"params\">(string name)</span> </span>&#123; m_Name = name; &#125;  <span class=\"comment\">// 【1】【2】设置姓名</span></span><br><span class=\"line\">    <span class=\"function\">string <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> m_Name; &#125;  <span class=\"comment\">// 【3】【4】获取姓名</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 暗恋对象只写</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setLover</span><span class=\"params\">(string lover)</span> </span>&#123; m_Lover = lover; &#125;  <span class=\"comment\">// 【5】【6】设置暗恋对象</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 所在地只读</span></span><br><span class=\"line\">    <span class=\"function\">string <span class=\"title\">getip</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> ip; &#125;  <span class=\"comment\">// 【7】【8】获取所在地</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-Circle类构建\"><a href=\"#10-Circle类构建\" class=\"headerlink\" title=\"10. Circle类构建\"></a>10. Circle类构建</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span> &#123;  <span class=\"comment\">// 【1】类名</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Circle</span>(<span class=\"type\">double</span> ir);  <span class=\"comment\">// 【2】构造函数参数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setR</span><span class=\"params\">(<span class=\"type\">double</span> ir)</span></span>;  <span class=\"comment\">// 【3】设置半径方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span></span>;  <span class=\"comment\">// 【4】获取面积方法</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Circle::<span class=\"built_in\">Circle</span>(<span class=\"type\">double</span> ir)&#123; r=ir; &#125;  <span class=\"comment\">// 【5】构造函数参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">3.14</span>*r*r; &#125;  <span class=\"comment\">// 【6】返回类型</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"11-Time类\"><a href=\"#11-Time类\" class=\"headerlink\" title=\"11. Time类\"></a>11. Time类</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Time::<span class=\"built_in\">Time</span>(<span class=\"type\">int</span> h=<span class=\"number\">0</span>, <span class=\"type\">int</span> m=<span class=\"number\">0</span>, <span class=\"type\">int</span> s=<span class=\"number\">0</span>) &#123; <span class=\"built_in\">setTime</span>(h,m,s); &#125;  <span class=\"comment\">// 【1】构造函数默认参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Time::setTime</span><span class=\"params\">(<span class=\"type\">int</span> h,<span class=\"type\">int</span> m,<span class=\"type\">int</span> s)</span> </span>&#123; hour=h; min=m; sec=s; &#125;  <span class=\"comment\">// 【2】类外实现作用域</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Time::getHour</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> hour; &#125;  <span class=\"comment\">// 【3】返回私有成员值</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"常用技巧\"><a href=\"#常用技巧\" class=\"headerlink\" title=\"常用技巧\"></a>常用技巧</h2><h3 id=\"1-连续输出文本\"><a href=\"#1-连续输出文本\" class=\"headerlink\" title=\"1. 连续输出文本\"></a>1. 连续输出文本</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cout &lt;&lt; </span><br><span class=\"line\"><span class=\"string\">&quot;                ********\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;               ************\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;               ####....#.\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;             #..###.....##....\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;            ###.......######              ###            ###\\n&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-浮点数精度控制\"><a href=\"#2-浮点数精度控制\" class=\"headerlink\" title=\"2. 浮点数精度控制\"></a>2. 浮点数精度控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">double</span> t;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\">cin &gt;&gt; t &gt;&gt; n;</span><br><span class=\"line\"><span class=\"type\">double</span> perStudent = t / n;</span><br><span class=\"line\">cout &lt;&lt; fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">3</span>) &lt;&lt; perStudent &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-字符串反转\"><a href=\"#3-字符串反转\" class=\"headerlink\" title=\"3. 字符串反转\"></a>3. 字符串反转</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">string a;</span><br><span class=\"line\">cin &gt;&gt; a;</span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(a.<span class=\"built_in\">begin</span>(), a.<span class=\"built_in\">end</span>());  <span class=\"comment\">// 反转字符串</span></span><br><span class=\"line\">cout &lt;&lt; a &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-字符大小写转换\"><a href=\"#4-字符大小写转换\" class=\"headerlink\" title=\"4. 字符大小写转换\"></a>4. 字符大小写转换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法1：ASCII码计算</span></span><br><span class=\"line\"><span class=\"type\">char</span> s;</span><br><span class=\"line\">cin &gt;&gt; s;</span><br><span class=\"line\"><span class=\"type\">char</span> m = s - (<span class=\"string\">&#x27;a&#x27;</span> - <span class=\"string\">&#x27;A&#x27;</span>);  <span class=\"comment\">// 小写转大写</span></span><br><span class=\"line\">cout &lt;&lt; m &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法2：使用函数</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">char</span> c;</span><br><span class=\"line\">cin &gt;&gt; c;</span><br><span class=\"line\">c = <span class=\"built_in\">toupper</span>(c);  <span class=\"comment\">// 转换为大写</span></span><br><span class=\"line\">cout &lt;&lt; c &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-闰年判断\"><a href=\"#5-闰年判断\" class=\"headerlink\" title=\"5. 闰年判断\"></a>5. 闰年判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isLeapYear</span><span class=\"params\">(<span class=\"type\">int</span> year)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span>) || (year % <span class=\"number\">400</span> == <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-向上取整\"><a href=\"#6-向上取整\" class=\"headerlink\" title=\"6. 向上取整\"></a>6. 向上取整</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">double</span> v = <span class=\"number\">3.14</span> * r * r * h;</span><br><span class=\"line\"><span class=\"type\">int</span> n = <span class=\"built_in\">ceil</span>(<span class=\"number\">20000.0</span> / v);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-字符串转数字\"><a href=\"#7-字符串转数字\" class=\"headerlink\" title=\"7. 字符串转数字\"></a>7. 字符串转数字</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string s = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"built_in\">stoi</span>(s);  <span class=\"comment\">// 字符串转整数</span></span><br><span class=\"line\"><span class=\"type\">double</span> d = <span class=\"built_in\">stod</span>(s);  <span class=\"comment\">// 字符串转浮点数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-数字转字符串\"><a href=\"#8-数字转字符串\" class=\"headerlink\" title=\"8. 数字转字符串\"></a>8. 数字转字符串</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">123</span>;</span><br><span class=\"line\">string s = <span class=\"built_in\">to_string</span>(num);  <span class=\"comment\">// 数字转字符串</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-数组初始化\"><a href=\"#9-数组初始化\" class=\"headerlink\" title=\"9. 数组初始化\"></a>9. 数组初始化</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一维数组</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;  <span class=\"comment\">// 全部初始化为0</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">vec</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">0</span>)</span></span>;  <span class=\"comment\">// vector初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二维数组</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[<span class=\"number\">3</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">vec</span>(<span class=\"number\">3</span>, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-常用算法函数\"><a href=\"#10-常用算法函数\" class=\"headerlink\" title=\"10. 常用算法函数\"></a>10. 常用算法函数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 排序</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反转</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查找最大最小值</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> max_it = <span class=\"built_in\">max_element</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"><span class=\"keyword\">auto</span> min_it = <span class=\"built_in\">min_element</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交换</span></span><br><span class=\"line\"><span class=\"built_in\">swap</span>(a, b);</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"普通题目集\"><a href=\"#普通题目集\" class=\"headerlink\" title=\"普通题目集\"></a>普通题目集</h1><h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#%E7%BC%96%E7%A8%8B%E9%A2%98\">编程题</a></li>\n<li><a href=\"#%E5%87%BD%E6%95%B0%E9%A2%98\">函数题</a></li>\n<li><a href=\"#%E7%A8%8B%E5%BA%8F%E5%A1%AB%E7%A9%BA\">程序填空</a></li>\n<li><a href=\"#%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7\">常用技巧</a></li>\n</ol>\n<hr>\n<h2 id=\"编程题\"><a href=\"#编程题\" class=\"headerlink\" title=\"编程题\"></a>编程题</h2><h3 id=\"前导零处理\"><a href=\"#前导零处理\" class=\"headerlink\" title=\"前导零处理\"></a>前导零处理</h3><p><strong>vector版本：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; digits;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (num &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    digits.<span class=\"built_in\">push_back</span>(num % <span class=\"number\">10</span>);  <span class=\"comment\">// 存入个位（低位在前）</span></span><br><span class=\"line\">    num /= <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// digits 中存储的顺序已经是逆序，例如：</span></span><br><span class=\"line\"><span class=\"comment\">// 输入700 → digits=&#123;0,0,7&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 输入123 → digits=&#123;3,2,1&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接输出：</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> d : digits) cout &lt;&lt; d;  <span class=\"comment\">// 输出时自动忽略前导零</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>字符串版本：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string num;</span><br><span class=\"line\">cin &gt;&gt; num;  <span class=\"comment\">// 输入 &quot;700&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(num.<span class=\"built_in\">begin</span>(), num.<span class=\"built_in\">end</span>());  <span class=\"comment\">// 反转后 &quot;007&quot;</span></span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">stoi</span>(num) &lt;&lt; endl;  <span class=\"comment\">// stoi(&quot;007&quot;) → 7（自动忽略前导零）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"向上取整\"><a href=\"#向上取整\" class=\"headerlink\" title=\"向上取整\"></a>向上取整</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"built_in\">ceil</span>(<span class=\"number\">2.4</span>)  <span class=\"comment\">// 得到3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符函数使用\"><a href=\"#字符函数使用\" class=\"headerlink\" title=\"字符函数使用\"></a>字符函数使用</h3><p><strong>相关函数集：</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>isdigit()</code></td>\n<td>检查数字字符（0-9）</td>\n</tr>\n<tr>\n<td><code>isalnum()</code></td>\n<td>检查字母或数字字符</td>\n</tr>\n<tr>\n<td><code>islower()</code></td>\n<td>检查小写字母（a-z）</td>\n</tr>\n<tr>\n<td><code>isupper()</code></td>\n<td>检查大写字母（A-Z）</td>\n</tr>\n<tr>\n<td><code>isspace()</code></td>\n<td>检查空白字符（空格&#x2F;制表符等）</td>\n</tr>\n<tr>\n<td><code>ispunct()</code></td>\n<td>检查标点符号</td>\n</tr>\n<tr>\n<td><code>isprint()</code></td>\n<td>检查可打印字符</td>\n</tr>\n</tbody></table>\n<p><strong>常见错误：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误：stoi(c) 不能用于单个字符</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">char</span> c : s)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">isdigit</span>(c))&#123;</span><br><span class=\"line\">        sum += <span class=\"built_in\">stoi</span>(c);  <span class=\"comment\">// 错误！</span></span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确：需要将字符转换为数字</span></span><br><span class=\"line\"><span class=\"type\">int</span> num = c - <span class=\"string\">&#x27;0&#x27;</span>;  <span class=\"comment\">// 字符转数字</span></span><br><span class=\"line\">sum += num;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维数组转置\"><a href=\"#二维数组转置\" class=\"headerlink\" title=\"二维数组转置\"></a>二维数组转置</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 定义原始矩阵和转置矩阵的vector</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">original</span>(m, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">transposed</span>(n, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 读取原始矩阵</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            cin &gt;&gt; original[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 进行转置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            transposed[j][i] = original[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输出转置后的矩阵，每个数据占5列</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; row : transposed) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : row) &#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">5</span>) &lt;&lt; num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"杨辉三角\"><a href=\"#杨辉三角\" class=\"headerlink\" title=\"杨辉三角\"></a>杨辉三角</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> a,b[<span class=\"number\">100</span>][<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cin&gt;&gt;a;</span><br><span class=\"line\">    b[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=a;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">            b[i][j]+=b[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+b[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">            cout&lt;&lt;b[i][j]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout&lt;&lt;endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回文判断\"><a href=\"#回文判断\" class=\"headerlink\" title=\"回文判断\"></a>回文判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin,s);</span><br><span class=\"line\">    </span><br><span class=\"line\">    string s1 = s;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(s<span class=\"number\">1.</span><span class=\"built_in\">begin</span>(),s<span class=\"number\">1.</span><span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s1 == s) cout &lt;&lt; s &lt;&lt; <span class=\"string\">&quot;是回文&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> cout &lt;&lt; s &lt;&lt; <span class=\"string\">&quot;不是回文&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符统计\"><a href=\"#字符统计\" class=\"headerlink\" title=\"字符统计\"></a>字符统计</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">cnt</span><span class=\"params\">(<span class=\"number\">10</span>,<span class=\"number\">0</span>)</span></span>;  <span class=\"comment\">// 注意初始化大小</span></span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin &gt;&gt; s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">size</span>(); i++)&#123;</span><br><span class=\"line\">        cnt[s[i]- <span class=\"string\">&#x27;0&#x27;</span>]++;  <span class=\"comment\">// 注意字符转数字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; cnt.<span class=\"built_in\">size</span>(); i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cnt[i]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            cout &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;:&quot;</span> &lt;&lt; cnt[i]&lt;&lt;endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"外卖费用计算\"><a href=\"#外卖费用计算\" class=\"headerlink\" title=\"外卖费用计算\"></a>外卖费用计算</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"type\">char</span> m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = n / <span class=\"number\">500</span>;  <span class=\"comment\">// 关键是那句不足500克按500克收就这样方便</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n % <span class=\"number\">500</span> != <span class=\"number\">0</span>) a++;  <span class=\"comment\">// 模拟</span></span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">4</span> + <span class=\"number\">3</span> * (a - <span class=\"number\">2</span>);  <span class=\"comment\">// 模拟知道这里是-2</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1000</span>) b = <span class=\"number\">4</span>;  <span class=\"comment\">// 这句是为了防止n小于500的情况</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(m == <span class=\"string\">&#x27;y&#x27;</span>) b += <span class=\"number\">5</span>;</span><br><span class=\"line\">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"天天向上\"><a href=\"#天天向上\" class=\"headerlink\" title=\"天天向上\"></a>天天向上</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> d;</span><br><span class=\"line\">    cin &gt;&gt; d;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(d &gt;= <span class=\"number\">0</span>) cout &lt;&lt; <span class=\"string\">&quot;up:&quot;</span>&lt;&lt;fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; (<span class=\"built_in\">pow</span>(<span class=\"number\">1</span>+d,<span class=\"number\">365</span>)<span class=\"number\">-1</span>)*<span class=\"number\">100</span> &lt;&lt; <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(d &lt; <span class=\"number\">0</span>) cout &lt;&lt; <span class=\"string\">&quot;down:&quot;</span>&lt;&lt;fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; (-<span class=\"built_in\">pow</span>(<span class=\"number\">1</span>-<span class=\"built_in\">abs</span>(d),<span class=\"number\">365</span>)<span class=\"number\">+1</span>)*<span class=\"number\">100</span> &lt;&lt; <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三天打鱼两天晒网\"><a href=\"#三天打鱼两天晒网\" class=\"headerlink\" title=\"三天打鱼两天晒网\"></a>三天打鱼两天晒网</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> r = n % <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r == <span class=\"number\">1</span> || r == <span class=\"number\">2</span> || r == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Fishing in day &quot;</span> &lt;&lt; n &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 余数为0或4的情况</span></span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Drying in day &quot;</span> &lt;&lt; n &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日期计算\"><a href=\"#日期计算\" class=\"headerlink\" title=\"日期计算\"></a>日期计算</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> year, month, day;</span><br><span class=\"line\">    cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 预定义每月天数（2月按平年计算）</span></span><br><span class=\"line\">    <span class=\"type\">int</span> days[] = &#123;<span class=\"number\">0</span>, <span class=\"number\">31</span>, <span class=\"number\">28</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>&#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 处理闰年</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span>) || (year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">        days[<span class=\"number\">2</span>] = <span class=\"number\">29</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> total = day;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; month; i++) &#123;</span><br><span class=\"line\">        total += days[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">setfill</span>(<span class=\"string\">&#x27;0&#x27;</span>) </span><br><span class=\"line\">         &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">4</span>) &lt;&lt; year &lt;&lt; <span class=\"string\">&quot;-&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">2</span>) &lt;&lt; month &lt;&lt; <span class=\"string\">&quot;-&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">2</span>) &lt;&lt; day &lt;&lt; <span class=\"string\">&quot;:&quot;</span> </span><br><span class=\"line\">         &lt;&lt; total &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组最大值最小值交换\"><a href=\"#数组最大值最小值交换\" class=\"headerlink\" title=\"数组最大值最小值交换\"></a>数组最大值最小值交换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">shuzi</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) cin &gt;&gt; shuzi[i];</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> max = <span class=\"built_in\">max_element</span>(shuzi.<span class=\"built_in\">begin</span>(), shuzi.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> min = <span class=\"built_in\">min_element</span>(shuzi.<span class=\"built_in\">begin</span>(), shuzi.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"type\">int</span> maxweizhi = <span class=\"built_in\">distance</span>(shuzi.<span class=\"built_in\">begin</span>(), max);</span><br><span class=\"line\">    <span class=\"type\">int</span> minweizhi = <span class=\"built_in\">distance</span>(shuzi.<span class=\"built_in\">begin</span>(), min);</span><br><span class=\"line\">    <span class=\"built_in\">swap</span>(shuzi[maxweizhi], shuzi[minweizhi]);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;max = &quot;</span> &lt;&lt; *max &lt;&lt; <span class=\"string\">&quot;, min = &quot;</span> &lt;&lt; *min &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        cout &lt;&lt; shuzi[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i != n<span class=\"number\">-1</span>) cout &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"菱形打印\"><a href=\"#菱形打印\" class=\"headerlink\" title=\"菱形打印\"></a>菱形打印</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 打印上半部分（包括中间行）</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n / <span class=\"number\">2</span> + <span class=\"number\">1</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n / <span class=\"number\">2</span> - i; j++) cout &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span> * i + <span class=\"number\">1</span>; j++) cout &lt;&lt; <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 打印下半部分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = n / <span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n / <span class=\"number\">2</span> - i; j++) cout &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span> * i + <span class=\"number\">1</span>; j++) cout &lt;&lt; <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回文质数\"><a href=\"#回文质数\" class=\"headerlink\" title=\"回文质数\"></a>回文质数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 素数判断函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">sushu</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  <span class=\"comment\">// 1不是素数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % i == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数字反转</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">fanzhuan</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> temp = n, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (temp != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        ans = ans * <span class=\"number\">10</span> + temp % <span class=\"number\">10</span>;</span><br><span class=\"line\">        temp /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = m; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">sushu</span>(i) &amp;&amp; <span class=\"built_in\">sushu</span>(<span class=\"built_in\">fanzhuan</span>(i))) ans++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; ans;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"函数题\"><a href=\"#函数题\" class=\"headerlink\" title=\"函数题\"></a>函数题</h2><h3 id=\"二维数组行最大值与列最小值的平均值\"><a href=\"#二维数组行最大值与列最小值的平均值\" class=\"headerlink\" title=\"二维数组行最大值与列最小值的平均值\"></a>二维数组行最大值与列最小值的平均值</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">Average</span><span class=\"params\">(<span class=\"type\">double</span> a[][M], <span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算每行的最大值并累加到总和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> max = a[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; M; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i][j] &gt; max) &#123;</span><br><span class=\"line\">                max = a[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sum += max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算每列的最小值并累加到总和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; M; j++) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> min = a[<span class=\"number\">0</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[i][j] &lt; min) &#123;</span><br><span class=\"line\">                min = a[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sum += min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 返回平均值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum / (n + M);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"最大公约数（辗转相除法）\"><a href=\"#最大公约数（辗转相除法）\" class=\"headerlink\" title=\"最大公约数（辗转相除法）\"></a>最大公约数（辗转相除法）</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (b != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = b;</span><br><span class=\"line\">        b = a % b;</span><br><span class=\"line\">        a = t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"素数判断\"><a href=\"#素数判断\" class=\"headerlink\" title=\"素数判断\"></a>素数判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPrime</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % i == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a>斐波那契数列</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fibo</span><span class=\"params\">(<span class=\"type\">int</span> n, <span class=\"type\">int</span> f[])</span> </span>&#123;</span><br><span class=\"line\">    f[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    f[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        f[i] = f[i<span class=\"number\">-1</span>] + f[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串反转\"><a href=\"#字符串反转\" class=\"headerlink\" title=\"字符串反转\"></a>字符串反转</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(<span class=\"type\">char</span> str[])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(str);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> temp = str[i];</span><br><span class=\"line\">        str[i] = str[len - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">        str[len - <span class=\"number\">1</span> - i] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"type\">int</span> arr[], <span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n - i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[j] &gt; arr[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> temp = arr[j];</span><br><span class=\"line\">                arr[j] = arr[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                arr[j + <span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"程序填空\"><a href=\"#程序填空\" class=\"headerlink\" title=\"程序填空\"></a>程序填空</h2><h3 id=\"1-Student类填空题\"><a href=\"#1-Student类填空题\" class=\"headerlink\" title=\"1. Student类填空题\"></a>1. Student类填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Student</span>(<span class=\"type\">int</span> i_id, <span class=\"type\">char</span> i_name[]);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"type\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Student::<span class=\"built_in\">Student</span>(<span class=\"type\">int</span> i_id, <span class=\"type\">char</span> i_name[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    id = i_id;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(name, i_name);  <span class=\"comment\">// 【1】必须使用strcpy进行字符串深拷贝</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Student::getId</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id;  <span class=\"comment\">// 【2】返回私有成员id的值</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Student <span class=\"title\">s1</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>)</span></span>;</span><br><span class=\"line\">    cout &lt;&lt; s<span class=\"number\">1.</span><span class=\"built_in\">getId</span>() &lt;&lt; endl;  <span class=\"comment\">// 【3】成员函数调用必须带括号</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Complex类填空题\"><a href=\"#2-Complex类填空题\" class=\"headerlink\" title=\"2. Complex类填空题\"></a>2. Complex类填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Complex</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">Complex</span>() &#123; <span class=\"built_in\">Set</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>); &#125;                   </span><br><span class=\"line\">  <span class=\"built_in\">Complex</span>(<span class=\"type\">double</span> r, <span class=\"type\">double</span> i);                   </span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Set</span><span class=\"params\">(<span class=\"type\">double</span> r, <span class=\"type\">double</span> i)</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Output</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">GetReal</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> real; &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">GetImag</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> imag; &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"type\">double</span> real, imag;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Complex::<span class=\"built_in\">Complex</span>(<span class=\"type\">double</span> r, <span class=\"type\">double</span> i)  <span class=\"comment\">// 【1】类外定义需作用域解析符和完整参数类型</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"built_in\">Set</span>(r, i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Complex <span class=\"title\">p2</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span></span>;</span><br><span class=\"line\">    cout &lt;&lt; p<span class=\"number\">2.</span><span class=\"built_in\">GetReal</span>() &lt;&lt; <span class=\"string\">&quot;+&quot;</span> &lt;&lt; p<span class=\"number\">2.</span><span class=\"built_in\">GetImag</span>() &lt;&lt; <span class=\"string\">&quot;i&quot;</span> &lt;&lt; endl;  <span class=\"comment\">// 【2】成员函数调用需注意大小写一致</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-冒泡排序填空题\"><a href=\"#3-冒泡排序填空题\" class=\"headerlink\" title=\"3. 冒泡排序填空题\"></a>3. 冒泡排序填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BubbleSort</span><span class=\"params\">(<span class=\"type\">int</span> a[],<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i,j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;n;j++)  <span class=\"comment\">// 【1】外层循环变量初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n-j<span class=\"number\">-1</span>;i++)  <span class=\"comment\">// 【2】每轮减少比较次数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i] &gt; a[i<span class=\"number\">+1</span>])  <span class=\"comment\">// 【3】升序排序条件</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> t=a[i];</span><br><span class=\"line\">                a[i] = a[i<span class=\"number\">+1</span>];  <span class=\"comment\">// 【4】元素交换操作</span></span><br><span class=\"line\">                a[i<span class=\"number\">+1</span>]=t;</span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-选择排序填空题\"><a href=\"#4-选择排序填空题\" class=\"headerlink\" title=\"4. 选择排序填空题\"></a>4. 选择排序填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(k = <span class=\"number\">0</span>; k &lt; n<span class=\"number\">-1</span>; k++)&#123;  <span class=\"comment\">// 【1】需n-1轮选择</span></span><br><span class=\"line\">    index = k;  <span class=\"comment\">// 【2】初始化最大值位置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = k<span class=\"number\">+1</span>; i &lt; n; i++)  <span class=\"comment\">// 【3】遍历未排序部分</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i] &gt; a[index])  <span class=\"comment\">// 【4】找更大值条件</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            index = i;  <span class=\"comment\">// 【5】更新最大值索引</span></span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">   temp = a[index];  </span><br><span class=\"line\">   a[index] = a[k]; </span><br><span class=\"line\">   a[k] = temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-二维数组对称判断\"><a href=\"#5-二维数组对称判断\" class=\"headerlink\" title=\"5. 二维数组对称判断\"></a>5. 二维数组对称判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i][j] != a[j][i])  <span class=\"comment\">// 【1】对称判断条件</span></span><br><span class=\"line\">        &#123;       </span><br><span class=\"line\">            found = <span class=\"number\">0</span>;  <span class=\"comment\">// 【2】发现不对称时标记</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(found == <span class=\"number\">0</span>) <span class=\"keyword\">break</span>;  <span class=\"comment\">// 【3】发现不对称提前退出</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-有序插入字符\"><a href=\"#6-有序插入字符\" class=\"headerlink\" title=\"6. 有序插入字符\"></a>6. 有序插入字符</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insertString</span><span class=\"params\">(<span class=\"type\">char</span> str[], <span class=\"type\">char</span> c)</span></span>;  <span class=\"comment\">// 【1】函数前置声明</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> str[<span class=\"number\">100</span>],c;</span><br><span class=\"line\">    cin.<span class=\"built_in\">getline</span>(str,<span class=\"number\">99</span>);</span><br><span class=\"line\">    cin&gt;&gt;c;</span><br><span class=\"line\">    <span class=\"built_in\">insertString</span>(str, c);  <span class=\"comment\">// 【2】函数调用</span></span><br><span class=\"line\">    cout&lt;&lt;str&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insertString</span> <span class=\"params\">(<span class=\"type\">char</span> str[], <span class=\"type\">char</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(n=<span class=\"number\">0</span>;str[n]!=<span class=\"number\">0</span>;n++);</span><br><span class=\"line\">    str[n<span class=\"number\">+1</span>]=<span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = n<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)  <span class=\"comment\">// 【3】从末尾开始遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str[i]&gt;c) </span><br><span class=\"line\">            str[i<span class=\"number\">+1</span>] = str[i]  <span class=\"comment\">// 【4】元素后移操作</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    str[i<span class=\"number\">+1</span>] = c;  <span class=\"comment\">// 【5】在正确位置插入字符</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-Circle类填空题\"><a href=\"#7-Circle类填空题\" class=\"headerlink\" title=\"7. Circle类填空题\"></a>7. Circle类填空题</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:  <span class=\"comment\">// 【1】公共访问权限</span></span><br><span class=\"line\">    <span class=\"type\">double</span> m_r;  <span class=\"comment\">// 【2】定义半径属性</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">calculateZC</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span> * PI * m_r;  <span class=\"comment\">// 【3】圆周长公式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-类的权限控制\"><a href=\"#8-类的权限控制\" class=\"headerlink\" title=\"8. 类的权限控制\"></a>8. 类的权限控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setmycar</span><span class=\"params\">(string a)</span> </span>&#123; m_Car = a; &#125;  <span class=\"comment\">// 【1】保护属性设置方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setpassword</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> </span>&#123; m_Password = a; &#125;  <span class=\"comment\">// 【2】私有属性设置方法</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Person p;</span><br><span class=\"line\">    cout &lt;&lt; p.m_Name &lt;&lt; endl;  <span class=\"comment\">// 【3】公共属性直接访问</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-类的读写控制\"><a href=\"#9-类的读写控制\" class=\"headerlink\" title=\"9. 类的读写控制\"></a>9. 类的读写控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"comment\">// 姓名可读可写</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setName</span><span class=\"params\">(string name)</span> </span>&#123; m_Name = name; &#125;  <span class=\"comment\">// 【1】【2】设置姓名</span></span><br><span class=\"line\">    <span class=\"function\">string <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> m_Name; &#125;  <span class=\"comment\">// 【3】【4】获取姓名</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 暗恋对象只写</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setLover</span><span class=\"params\">(string lover)</span> </span>&#123; m_Lover = lover; &#125;  <span class=\"comment\">// 【5】【6】设置暗恋对象</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 所在地只读</span></span><br><span class=\"line\">    <span class=\"function\">string <span class=\"title\">getip</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> ip; &#125;  <span class=\"comment\">// 【7】【8】获取所在地</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-Circle类构建\"><a href=\"#10-Circle类构建\" class=\"headerlink\" title=\"10. Circle类构建\"></a>10. Circle类构建</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span> &#123;  <span class=\"comment\">// 【1】类名</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Circle</span>(<span class=\"type\">double</span> ir);  <span class=\"comment\">// 【2】构造函数参数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setR</span><span class=\"params\">(<span class=\"type\">double</span> ir)</span></span>;  <span class=\"comment\">// 【3】设置半径方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span></span>;  <span class=\"comment\">// 【4】获取面积方法</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Circle::<span class=\"built_in\">Circle</span>(<span class=\"type\">double</span> ir)&#123; r=ir; &#125;  <span class=\"comment\">// 【5】构造函数参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">3.14</span>*r*r; &#125;  <span class=\"comment\">// 【6】返回类型</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"11-Time类\"><a href=\"#11-Time类\" class=\"headerlink\" title=\"11. Time类\"></a>11. Time类</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Time::<span class=\"built_in\">Time</span>(<span class=\"type\">int</span> h=<span class=\"number\">0</span>, <span class=\"type\">int</span> m=<span class=\"number\">0</span>, <span class=\"type\">int</span> s=<span class=\"number\">0</span>) &#123; <span class=\"built_in\">setTime</span>(h,m,s); &#125;  <span class=\"comment\">// 【1】构造函数默认参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Time::setTime</span><span class=\"params\">(<span class=\"type\">int</span> h,<span class=\"type\">int</span> m,<span class=\"type\">int</span> s)</span> </span>&#123; hour=h; min=m; sec=s; &#125;  <span class=\"comment\">// 【2】类外实现作用域</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Time::getHour</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> hour; &#125;  <span class=\"comment\">// 【3】返回私有成员值</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"常用技巧\"><a href=\"#常用技巧\" class=\"headerlink\" title=\"常用技巧\"></a>常用技巧</h2><h3 id=\"1-连续输出文本\"><a href=\"#1-连续输出文本\" class=\"headerlink\" title=\"1. 连续输出文本\"></a>1. 连续输出文本</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cout &lt;&lt; </span><br><span class=\"line\"><span class=\"string\">&quot;                ********\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;               ************\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;               ####....#.\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;             #..###.....##....\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;            ###.......######              ###            ###\\n&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-浮点数精度控制\"><a href=\"#2-浮点数精度控制\" class=\"headerlink\" title=\"2. 浮点数精度控制\"></a>2. 浮点数精度控制</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">double</span> t;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\">cin &gt;&gt; t &gt;&gt; n;</span><br><span class=\"line\"><span class=\"type\">double</span> perStudent = t / n;</span><br><span class=\"line\">cout &lt;&lt; fixed &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">3</span>) &lt;&lt; perStudent &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-字符串反转\"><a href=\"#3-字符串反转\" class=\"headerlink\" title=\"3. 字符串反转\"></a>3. 字符串反转</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">string a;</span><br><span class=\"line\">cin &gt;&gt; a;</span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(a.<span class=\"built_in\">begin</span>(), a.<span class=\"built_in\">end</span>());  <span class=\"comment\">// 反转字符串</span></span><br><span class=\"line\">cout &lt;&lt; a &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-字符大小写转换\"><a href=\"#4-字符大小写转换\" class=\"headerlink\" title=\"4. 字符大小写转换\"></a>4. 字符大小写转换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法1：ASCII码计算</span></span><br><span class=\"line\"><span class=\"type\">char</span> s;</span><br><span class=\"line\">cin &gt;&gt; s;</span><br><span class=\"line\"><span class=\"type\">char</span> m = s - (<span class=\"string\">&#x27;a&#x27;</span> - <span class=\"string\">&#x27;A&#x27;</span>);  <span class=\"comment\">// 小写转大写</span></span><br><span class=\"line\">cout &lt;&lt; m &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法2：使用函数</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">char</span> c;</span><br><span class=\"line\">cin &gt;&gt; c;</span><br><span class=\"line\">c = <span class=\"built_in\">toupper</span>(c);  <span class=\"comment\">// 转换为大写</span></span><br><span class=\"line\">cout &lt;&lt; c &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-闰年判断\"><a href=\"#5-闰年判断\" class=\"headerlink\" title=\"5. 闰年判断\"></a>5. 闰年判断</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isLeapYear</span><span class=\"params\">(<span class=\"type\">int</span> year)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span>) || (year % <span class=\"number\">400</span> == <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-向上取整\"><a href=\"#6-向上取整\" class=\"headerlink\" title=\"6. 向上取整\"></a>6. 向上取整</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">double</span> v = <span class=\"number\">3.14</span> * r * r * h;</span><br><span class=\"line\"><span class=\"type\">int</span> n = <span class=\"built_in\">ceil</span>(<span class=\"number\">20000.0</span> / v);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-字符串转数字\"><a href=\"#7-字符串转数字\" class=\"headerlink\" title=\"7. 字符串转数字\"></a>7. 字符串转数字</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string s = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"built_in\">stoi</span>(s);  <span class=\"comment\">// 字符串转整数</span></span><br><span class=\"line\"><span class=\"type\">double</span> d = <span class=\"built_in\">stod</span>(s);  <span class=\"comment\">// 字符串转浮点数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-数字转字符串\"><a href=\"#8-数字转字符串\" class=\"headerlink\" title=\"8. 数字转字符串\"></a>8. 数字转字符串</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">123</span>;</span><br><span class=\"line\">string s = <span class=\"built_in\">to_string</span>(num);  <span class=\"comment\">// 数字转字符串</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-数组初始化\"><a href=\"#9-数组初始化\" class=\"headerlink\" title=\"9. 数组初始化\"></a>9. 数组初始化</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一维数组</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;  <span class=\"comment\">// 全部初始化为0</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">vec</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">0</span>)</span></span>;  <span class=\"comment\">// vector初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二维数组</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[<span class=\"number\">3</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">vec</span>(<span class=\"number\">3</span>, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-常用算法函数\"><a href=\"#10-常用算法函数\" class=\"headerlink\" title=\"10. 常用算法函数\"></a>10. 常用算法函数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 排序</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反转</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查找最大最小值</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> max_it = <span class=\"built_in\">max_element</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"><span class=\"keyword\">auto</span> min_it = <span class=\"built_in\">min_element</span>(vec.<span class=\"built_in\">begin</span>(), vec.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交换</span></span><br><span class=\"line\"><span class=\"built_in\">swap</span>(a, b);</span><br></pre></td></tr></table></figure>"},{"title":"洛谷题集-入门","date":"2025-08-04T14:26:51.000Z","_content":"# 洛谷题目集\n\n## 目录\n1. [数组题目](#数组题目)\n2. [字符串题目](#字符串题目)\n3. [循环题目](#循环题目)\n4. [分支题目](#分支题目)\n5. [顺序题目](#顺序题目)\n\n---\n\n## 数组题目\n\n### 神奇的幻方\n\n**题目描述：** 构造一个n×n的幻方，满足每行、每列、两条对角线的和都相等。\n\n**解题思路：** 使用幻方的构造规则，从第一行中间开始，按照特定规则填充数字。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    int a[45][45] = {}; // 幻方数组，初始化为0\n    int k = 1; // 当前要填入的数字\n    int x, y;  // 当前数字的位置\n\n    while (k <= n * n) { // 循环直到填满所有数字\n        if (k == 1) { // 第一个数字放在第一行的中间\n            x = 1;\n            y = n / 2 + 1;\n        } else {\n            // 根据幻方规则移动位置\n            if (x == 1 && y != n) { // 如果在第一行且不在最后一列\n                x = n; // 移动到最后一行\n                y++;   // 列向右移动\n            } else if (y == n && x != 1) { // 如果在最后一列且不在第一行\n                x--;   // 行向上移动\n                y = 1; // 移动到第一列\n            } else if (x == 1 && y == n) { // 如果在第一行最后一列\n                x++;   // 行向下移动\n            } else {\n                if (a[x-1][y+1] != 0) { // 如果右上角已经有数字\n                    x++; // 行向下移动\n                } else {\n                    x--; // 行向上移动\n                    y++; // 列向右移动\n                }\n            }\n        }\n        a[x][y] = k; // 填入数字\n        k++; // 下一个数字\n    }\n\n    // 输出幻方\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            cout << a[i][j] << \" \";\n        }\n        cout << \"\\n\";\n    }\n\n    return 0;\n}\n```\n\n### 杨辉三角\n\n**题目描述：** 输入n，输出前n行的杨辉三角。\n\n**解题思路：** 使用二维数组存储，每个数等于它上方两个数之和。\n\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    vector<vector<int>> yanghui(n);\n\n    for(int i = 0; i < n; i++){\n        yanghui[i].resize(i + 1);  // 每行的元素个数为 i+1\n        yanghui[i][0] = yanghui[i][i] = 1;  // 每行的第一个和最后一个元素为1\n\n        for(int j = 1; j < i; j++){\n            yanghui[i][j] = yanghui[i-1][j-1] + yanghui[i-1][j];\n        }\n    }\n\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j <= i; j++){\n            cout << yanghui[i][j] << \" \";\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n```\n\n**优化版本（仅输出）：**\n```cpp\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n\n    for(int i = 0; i < n; i++){\n        int val = 1;\n        for(int j = 0; j <= i; j++){\n            cout << val << \" \";\n            val = val * (i - j) / (j + 1);  // 计算下一个值\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n```\n\n### 蛇形方阵\n\n**题目描述：** 构造一个n×n的蛇形方阵，数字从1开始按蛇形路径填充。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    int a[100][100] = {};\n    int num = 1;\n    \n    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {  // 偶数行从左到右\n            for (int j = 0; j < n; j++) {\n                a[i][j] = num++;\n            }\n        } else {  // 奇数行从右到左\n            for (int j = n - 1; j >= 0; j--) {\n                a[i][j] = num++;\n            }\n        }\n    }\n    \n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            cout << a[i][j] << \" \";\n        }\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 开灯问题\n\n**题目描述：** 有n盏灯，编号为1到n。第1个人把所有灯都打开，第2个人按下所有编号为2的倍数的开关，第3个人按下所有编号为3的倍数的开关，以此类推。问最后有多少盏灯是亮的。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<bool> lights(n + 1, false);  // false表示灯关闭\n    \n    for (int i = 1; i <= n; i++) {\n        for (int j = i; j <= n; j += i) {\n            lights[j] = !lights[j];  // 翻转灯的状态\n        }\n    }\n    \n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (lights[i]) count++;\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n### 珠心算测验\n\n**题目描述：** 给定n个数，问有多少个数可以表示为其他两个数的和。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> nums(n);\n    vector<bool> canSum(20001, false);  // 标记哪些数可以表示为两数之和\n    \n    for (int i = 0; i < n; i++) {\n        cin >> nums[i];\n    }\n    \n    // 计算所有可能的和\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            canSum[nums[i] + nums[j]] = true;\n        }\n    }\n    \n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (canSum[nums[i]]) count++;\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n---\n\n## 字符串题目\n\n### 数字反转\n\n**题目描述：** 给定一个数，可以是整数、小数、分数或百分数，请将该数各个位上数字反转得到一个新数。\n\n**解题思路：** 根据不同的数字类型分别处理，注意去除前导零和末尾零。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n// 反转字符串，并去除前导零\nstring reverseStr(string s) {\n    reverse(s.begin(), s.end());\n    // 去除前导零\n    s.erase(0, s.find_first_not_of('0'));\n    // 如果全部是0，保留一个0\n    if (s.empty()) s = \"0\";\n    return s;\n}\n\nint main() {\n    string s;\n    cin >> s;\n    \n    // 判断输入类型\n    if (s.find('.') != string::npos) {  // 小数\n        int pos = s.find('.');\n        string intPart = s.substr(0, pos);\n        string decPart = s.substr(pos + 1);\n        // 反转整数部分和小数部分\n        string newInt = reverseStr(intPart);\n        string newDec = reverseStr(decPart);\n        // 去除小数部分末尾的0\n        newDec.erase(newDec.find_last_not_of('0') + 1);\n        if (newDec.empty()) newDec = \"0\";  // 如果小数部分全为0，保留一个0\n        \n        cout << newInt << \".\" << newDec << endl;\n    }\n    else if (s.find('/') != string::npos) {  // 分数\n        int pos = s.find('/');\n        string numerator = s.substr(0, pos);\n        string denominator = s.substr(pos + 1);\n        // 反转分子和分母\n        string newNum = reverseStr(numerator);\n        string newDen = reverseStr(denominator);\n        cout << newNum << \"/\" << newDen << endl;\n    }\n    else if (s.find('%') != string::npos) {  // 百分数\n        string num = s.substr(0, s.length() - 1);\n        string newNum = reverseStr(num);\n        cout << newNum << \"%\" << endl;\n    }\n    else {  // 整数\n        string newNum = reverseStr(s);\n        cout << newNum << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 凯撒密码\n\n**题目描述：** 将字符串中的每个字母向后移动k位，非字母字符保持不变。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    string s;\n    int k;\n    cin >> s >> k;\n    \n    for (char& c : s) {\n        if (isalpha(c)) {\n            char base = isupper(c) ? 'A' : 'a';\n            c = (c - base + k) % 26 + base;\n        }\n    }\n    \n    cout << s << endl;\n    return 0;\n}\n```\n\n### 统计单词数\n\n**题目描述：** 统计一个单词在文本中出现的次数。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    string word, text;\n    getline(cin, word);\n    getline(cin, text);\n    \n    // 转换为小写\n    transform(word.begin(), word.end(), word.begin(), ::tolower);\n    transform(text.begin(), text.end(), text.begin(), ::tolower);\n    \n    stringstream ss(text);\n    string token;\n    int count = 0;\n    int firstPos = -1;\n    int currentPos = 0;\n    \n    while (ss >> token) {\n        if (token == word) {\n            count++;\n            if (firstPos == -1) {\n                firstPos = currentPos;\n            }\n        }\n        currentPos++;\n    }\n    \n    if (count == 0) {\n        cout << -1 << endl;\n    } else {\n        cout << count << \" \" << firstPos << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 大小写转换\n\n**题目描述：** 将字符串中的大写字母转换为小写，小写字母转换为大写。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n    \n    for (char& c : s) {\n        if (isupper(c)) {\n            c = tolower(c);\n        } else if (islower(c)) {\n            c = toupper(c);\n        }\n    }\n    \n    cout << s << endl;\n    return 0;\n}\n```\n\n### 标题统计\n\n**题目描述：** 统计一行文本中字符的个数（不包括空格和换行符）。\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline(cin, s);\n    \n    int count = 0;\n    for (char c : s) {\n        if (c != ' ' && c != '\\n') {\n            count++;\n        }\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n---\n\n## 循环题目\n\n### 冰雹猜想\n\n**题目描述：** 对于任意一个正整数，如果是奇数，则乘3加1；如果是偶数，则除以2。重复这个过程，最终会得到1。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    \n    while (n != 1) {\n        cout << n << \" \";\n        if (n % 2 == 1) {\n            n = n * 3 + 1;\n        } else {\n            n = n / 2;\n        }\n    }\n    cout << 1 << endl;\n    \n    return 0;\n}\n```\n\n### 梦中的统计\n\n**题目描述：** 统计数字0-9在给定范围内出现的次数。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int m, n;\n    cin >> m >> n;\n    \n    vector<int> count(10, 0);\n    \n    for (int i = m; i <= n; i++) {\n        int num = i;\n        while (num > 0) {\n            count[num % 10]++;\n            num /= 10;\n        }\n    }\n    \n    for (int i = 0; i < 10; i++) {\n        cout << count[i] << \" \";\n    }\n    cout << endl;\n    \n    return 0;\n}\n```\n\n### 门外的树\n\n**题目描述：** 有n棵树，编号为1到n。每次砍掉一段连续的树，问最后剩下多少棵树。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    \n    vector<bool> trees(n + 1, true);  // true表示树还在\n    \n    for (int i = 0; i < m; i++) {\n        int l, r;\n        cin >> l >> r;\n        for (int j = l; j <= r; j++) {\n            trees[j] = false;  // 砍掉树\n        }\n    }\n    \n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (trees[i]) count++;\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n---\n\n## 分支题目\n\n### 旗鼓相当的对手\n\n**题目描述：** 给定n个人的成绩，找出成绩相同的人数最多的成绩。\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    \n    vector<int> scores(n);\n    for (int i = 0; i < n; i++) {\n        cin >> scores[i];\n    }\n    \n    sort(scores.begin(), scores.end());\n    \n    int maxCount = 1;\n    int currentCount = 1;\n    int result = scores[0];\n    \n    for (int i = 1; i < n; i++) {\n        if (scores[i] == scores[i-1]) {\n            currentCount++;\n        } else {\n            if (currentCount > maxCount) {\n                maxCount = currentCount;\n                result = scores[i-1];\n            }\n            currentCount = 1;\n        }\n    }\n    \n    // 检查最后一组\n    if (currentCount > maxCount) {\n        maxCount = currentCount;\n        result = scores[n-1];\n    }\n    \n    cout << result << endl;\n    return 0;\n}\n```\n\n### 不知大小\n\n**题目描述：** 给定三个数，输出它们的最大值和最小值。\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int a, b, c;\n    cin >> a >> b >> c;\n    \n    int max_val = max({a, b, c});\n    int min_val = min({a, b, c});\n    \n    cout << max_val << \" \" << min_val << endl;\n    return 0;\n}\n```\n\n### 三个骰子\n\n**题目描述：** 掷三个骰子，计算点数和。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b, c;\n    cin >> a >> b >> c;\n    \n    int sum = a + b + c;\n    cout << sum << endl;\n    \n    return 0;\n}\n```\n\n---\n\n## 顺序题目\n\n### 显示屏\n\n**题目描述：** 模拟数字显示屏，用字符画显示数字。\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string num;\n    cin >> num;\n    \n    // 数字的字符画表示\n    string digits[10][5] = {\n        {\"###\", \"# #\", \"# #\", \"# #\", \"###\"},  // 0\n        {\"  #\", \"  #\", \"  #\", \"  #\", \"  #\"},  // 1\n        {\"###\", \"  #\", \"###\", \"#  \", \"###\"},  // 2\n        {\"###\", \"  #\", \"###\", \"  #\", \"###\"},  // 3\n        {\"# #\", \"# #\", \"###\", \"  #\", \"  #\"},  // 4\n        {\"###\", \"#  \", \"###\", \"  #\", \"###\"},  // 5\n        {\"###\", \"#  \", \"###\", \"# #\", \"###\"},  // 6\n        {\"###\", \"  #\", \"  #\", \"  #\", \"  #\"},  // 7\n        {\"###\", \"# #\", \"###\", \"# #\", \"###\"},  // 8\n        {\"###\", \"# #\", \"###\", \"  #\", \"###\"}   // 9\n    };\n    \n    // 输出每一行\n    for (int row = 0; row < 5; row++) {\n        for (char c : num) {\n            cout << digits[c - '0'][row] << \" \";\n        }\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 彩票\n\n**题目描述：** 模拟彩票开奖，判断中奖情况。\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    vector<int> winning(7);\n    vector<int> ticket(7);\n    \n    // 输入中奖号码\n    for (int i = 0; i < 7; i++) {\n        cin >> winning[i];\n    }\n    \n    // 输入彩票号码\n    for (int i = 0; i < 7; i++) {\n        cin >> ticket[i];\n    }\n    \n    // 统计匹配的号码数\n    int matches = 0;\n    for (int i = 0; i < 7; i++) {\n        if (find(winning.begin(), winning.end(), ticket[i]) != winning.end()) {\n            matches++;\n        }\n    }\n    \n    cout << matches << endl;\n    return 0;\n}\n```\n\n### 工艺品制作\n\n**题目描述：** 计算制作工艺品所需的材料数量。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    \n    int total = n * m * k;\n    cout << total << endl;\n    \n    return 0;\n}\n```\n\n---\n\n## 常用算法模板\n\n### 1. 二分查找\n```cpp\nint binarySearch(vector<int>& arr, int target) {\n    int left = 0, right = arr.size() - 1;\n    while (left <= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] == target) return mid;\n        if (arr[mid] < target) left = mid + 1;\n        else right = mid - 1;\n    }\n    return -1;\n}\n```\n\n### 2. 快速排序\n```cpp\nvoid quickSort(vector<int>& arr, int left, int right) {\n    if (left >= right) return;\n    \n    int pivot = arr[left];\n    int i = left, j = right;\n    \n    while (i < j) {\n        while (i < j && arr[j] >= pivot) j--;\n        while (i < j && arr[i] <= pivot) i++;\n        if (i < j) swap(arr[i], arr[j]);\n    }\n    \n    arr[left] = arr[i];\n    arr[i] = pivot;\n    \n    quickSort(arr, left, i - 1);\n    quickSort(arr, i + 1, right);\n}\n```\n\n### 3. 深度优先搜索\n```cpp\nvoid dfs(vector<vector<int>>& graph, vector<bool>& visited, int node) {\n    visited[node] = true;\n    cout << node << \" \";\n    \n    for (int neighbor : graph[node]) {\n        if (!visited[neighbor]) {\n            dfs(graph, visited, neighbor);\n        }\n    }\n}\n```\n\n### 4. 广度优先搜索\n```cpp\nvoid bfs(vector<vector<int>>& graph, int start) {\n    vector<bool> visited(graph.size(), false);\n    queue<int> q;\n    \n    q.push(start);\n    visited[start] = true;\n    \n    while (!q.empty()) {\n        int node = q.front();\n        q.pop();\n        cout << node << \" \";\n        \n        for (int neighbor : graph[node]) {\n            if (!visited[neighbor]) {\n                visited[neighbor] = true;\n                q.push(neighbor);\n            }\n        }\n    }\n}\n```\n\n### 5. 动态规划 - 斐波那契\n```cpp\nint fibonacci(int n) {\n    if (n <= 1) return n;\n    \n    vector<int> dp(n + 1);\n    dp[0] = 0;\n    dp[1] = 1;\n    \n    for (int i = 2; i <= n; i++) {\n        dp[i] = dp[i-1] + dp[i-2];\n    }\n    \n    return dp[n];\n}\n```\n\n### 6. 字符串匹配\n```cpp\nbool isSubstring(string s, string sub) {\n    return s.find(sub) != string::npos;\n}\n```\n\n### 7. 素数筛法\n```cpp\nvector<bool> sieve(int n) {\n    vector<bool> isPrime(n + 1, true);\n    isPrime[0] = isPrime[1] = false;\n    \n    for (int i = 2; i * i <= n; i++) {\n        if (isPrime[i]) {\n            for (int j = i * i; j <= n; j += i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n    \n    return isPrime;\n}\n```\n\n### 8. 最大公约数和最小公倍数\n```cpp\nint gcd(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\nint lcm(int a, int b) {\n    return a / gcd(a, b) * b;\n}\n```\n\n### 9. 进制转换\n```cpp\nstring decimalToBinary(int n) {\n    if (n == 0) return \"0\";\n    string result = \"\";\n    while (n > 0) {\n        result = char('0' + n % 2) + result;\n        n /= 2;\n    }\n    return result;\n}\n\nint binaryToDecimal(string binary) {\n    int result = 0;\n    for (char c : binary) {\n        result = result * 2 + (c - '0');\n    }\n    return result;\n}\n```\n\n### 10. 排列组合\n```cpp\n// 计算组合数 C(n,m)\nlong long combination(int n, int m) {\n    if (m > n - m) m = n - m;\n    long long result = 1;\n    for (int i = 0; i < m; i++) {\n        result = result * (n - i) / (i + 1);\n    }\n    return result;\n}\n``` ","source":"_posts/洛谷题集.md","raw":"---\ntitle: 洛谷题集-入门\ndate: 2025-08-04 22:26:51\ncategories:\n  - study\ntags:\n  - C++\n  - 洛谷\n---\n# 洛谷题目集\n\n## 目录\n1. [数组题目](#数组题目)\n2. [字符串题目](#字符串题目)\n3. [循环题目](#循环题目)\n4. [分支题目](#分支题目)\n5. [顺序题目](#顺序题目)\n\n---\n\n## 数组题目\n\n### 神奇的幻方\n\n**题目描述：** 构造一个n×n的幻方，满足每行、每列、两条对角线的和都相等。\n\n**解题思路：** 使用幻方的构造规则，从第一行中间开始，按照特定规则填充数字。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    int a[45][45] = {}; // 幻方数组，初始化为0\n    int k = 1; // 当前要填入的数字\n    int x, y;  // 当前数字的位置\n\n    while (k <= n * n) { // 循环直到填满所有数字\n        if (k == 1) { // 第一个数字放在第一行的中间\n            x = 1;\n            y = n / 2 + 1;\n        } else {\n            // 根据幻方规则移动位置\n            if (x == 1 && y != n) { // 如果在第一行且不在最后一列\n                x = n; // 移动到最后一行\n                y++;   // 列向右移动\n            } else if (y == n && x != 1) { // 如果在最后一列且不在第一行\n                x--;   // 行向上移动\n                y = 1; // 移动到第一列\n            } else if (x == 1 && y == n) { // 如果在第一行最后一列\n                x++;   // 行向下移动\n            } else {\n                if (a[x-1][y+1] != 0) { // 如果右上角已经有数字\n                    x++; // 行向下移动\n                } else {\n                    x--; // 行向上移动\n                    y++; // 列向右移动\n                }\n            }\n        }\n        a[x][y] = k; // 填入数字\n        k++; // 下一个数字\n    }\n\n    // 输出幻方\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            cout << a[i][j] << \" \";\n        }\n        cout << \"\\n\";\n    }\n\n    return 0;\n}\n```\n\n### 杨辉三角\n\n**题目描述：** 输入n，输出前n行的杨辉三角。\n\n**解题思路：** 使用二维数组存储，每个数等于它上方两个数之和。\n\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    vector<vector<int>> yanghui(n);\n\n    for(int i = 0; i < n; i++){\n        yanghui[i].resize(i + 1);  // 每行的元素个数为 i+1\n        yanghui[i][0] = yanghui[i][i] = 1;  // 每行的第一个和最后一个元素为1\n\n        for(int j = 1; j < i; j++){\n            yanghui[i][j] = yanghui[i-1][j-1] + yanghui[i-1][j];\n        }\n    }\n\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j <= i; j++){\n            cout << yanghui[i][j] << \" \";\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n```\n\n**优化版本（仅输出）：**\n```cpp\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n\n    for(int i = 0; i < n; i++){\n        int val = 1;\n        for(int j = 0; j <= i; j++){\n            cout << val << \" \";\n            val = val * (i - j) / (j + 1);  // 计算下一个值\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n```\n\n### 蛇形方阵\n\n**题目描述：** 构造一个n×n的蛇形方阵，数字从1开始按蛇形路径填充。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    int a[100][100] = {};\n    int num = 1;\n    \n    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {  // 偶数行从左到右\n            for (int j = 0; j < n; j++) {\n                a[i][j] = num++;\n            }\n        } else {  // 奇数行从右到左\n            for (int j = n - 1; j >= 0; j--) {\n                a[i][j] = num++;\n            }\n        }\n    }\n    \n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            cout << a[i][j] << \" \";\n        }\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 开灯问题\n\n**题目描述：** 有n盏灯，编号为1到n。第1个人把所有灯都打开，第2个人按下所有编号为2的倍数的开关，第3个人按下所有编号为3的倍数的开关，以此类推。问最后有多少盏灯是亮的。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<bool> lights(n + 1, false);  // false表示灯关闭\n    \n    for (int i = 1; i <= n; i++) {\n        for (int j = i; j <= n; j += i) {\n            lights[j] = !lights[j];  // 翻转灯的状态\n        }\n    }\n    \n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (lights[i]) count++;\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n### 珠心算测验\n\n**题目描述：** 给定n个数，问有多少个数可以表示为其他两个数的和。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> nums(n);\n    vector<bool> canSum(20001, false);  // 标记哪些数可以表示为两数之和\n    \n    for (int i = 0; i < n; i++) {\n        cin >> nums[i];\n    }\n    \n    // 计算所有可能的和\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            canSum[nums[i] + nums[j]] = true;\n        }\n    }\n    \n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (canSum[nums[i]]) count++;\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n---\n\n## 字符串题目\n\n### 数字反转\n\n**题目描述：** 给定一个数，可以是整数、小数、分数或百分数，请将该数各个位上数字反转得到一个新数。\n\n**解题思路：** 根据不同的数字类型分别处理，注意去除前导零和末尾零。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n// 反转字符串，并去除前导零\nstring reverseStr(string s) {\n    reverse(s.begin(), s.end());\n    // 去除前导零\n    s.erase(0, s.find_first_not_of('0'));\n    // 如果全部是0，保留一个0\n    if (s.empty()) s = \"0\";\n    return s;\n}\n\nint main() {\n    string s;\n    cin >> s;\n    \n    // 判断输入类型\n    if (s.find('.') != string::npos) {  // 小数\n        int pos = s.find('.');\n        string intPart = s.substr(0, pos);\n        string decPart = s.substr(pos + 1);\n        // 反转整数部分和小数部分\n        string newInt = reverseStr(intPart);\n        string newDec = reverseStr(decPart);\n        // 去除小数部分末尾的0\n        newDec.erase(newDec.find_last_not_of('0') + 1);\n        if (newDec.empty()) newDec = \"0\";  // 如果小数部分全为0，保留一个0\n        \n        cout << newInt << \".\" << newDec << endl;\n    }\n    else if (s.find('/') != string::npos) {  // 分数\n        int pos = s.find('/');\n        string numerator = s.substr(0, pos);\n        string denominator = s.substr(pos + 1);\n        // 反转分子和分母\n        string newNum = reverseStr(numerator);\n        string newDen = reverseStr(denominator);\n        cout << newNum << \"/\" << newDen << endl;\n    }\n    else if (s.find('%') != string::npos) {  // 百分数\n        string num = s.substr(0, s.length() - 1);\n        string newNum = reverseStr(num);\n        cout << newNum << \"%\" << endl;\n    }\n    else {  // 整数\n        string newNum = reverseStr(s);\n        cout << newNum << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 凯撒密码\n\n**题目描述：** 将字符串中的每个字母向后移动k位，非字母字符保持不变。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    string s;\n    int k;\n    cin >> s >> k;\n    \n    for (char& c : s) {\n        if (isalpha(c)) {\n            char base = isupper(c) ? 'A' : 'a';\n            c = (c - base + k) % 26 + base;\n        }\n    }\n    \n    cout << s << endl;\n    return 0;\n}\n```\n\n### 统计单词数\n\n**题目描述：** 统计一个单词在文本中出现的次数。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    string word, text;\n    getline(cin, word);\n    getline(cin, text);\n    \n    // 转换为小写\n    transform(word.begin(), word.end(), word.begin(), ::tolower);\n    transform(text.begin(), text.end(), text.begin(), ::tolower);\n    \n    stringstream ss(text);\n    string token;\n    int count = 0;\n    int firstPos = -1;\n    int currentPos = 0;\n    \n    while (ss >> token) {\n        if (token == word) {\n            count++;\n            if (firstPos == -1) {\n                firstPos = currentPos;\n            }\n        }\n        currentPos++;\n    }\n    \n    if (count == 0) {\n        cout << -1 << endl;\n    } else {\n        cout << count << \" \" << firstPos << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 大小写转换\n\n**题目描述：** 将字符串中的大写字母转换为小写，小写字母转换为大写。\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n    \n    for (char& c : s) {\n        if (isupper(c)) {\n            c = tolower(c);\n        } else if (islower(c)) {\n            c = toupper(c);\n        }\n    }\n    \n    cout << s << endl;\n    return 0;\n}\n```\n\n### 标题统计\n\n**题目描述：** 统计一行文本中字符的个数（不包括空格和换行符）。\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline(cin, s);\n    \n    int count = 0;\n    for (char c : s) {\n        if (c != ' ' && c != '\\n') {\n            count++;\n        }\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n---\n\n## 循环题目\n\n### 冰雹猜想\n\n**题目描述：** 对于任意一个正整数，如果是奇数，则乘3加1；如果是偶数，则除以2。重复这个过程，最终会得到1。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    \n    while (n != 1) {\n        cout << n << \" \";\n        if (n % 2 == 1) {\n            n = n * 3 + 1;\n        } else {\n            n = n / 2;\n        }\n    }\n    cout << 1 << endl;\n    \n    return 0;\n}\n```\n\n### 梦中的统计\n\n**题目描述：** 统计数字0-9在给定范围内出现的次数。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int m, n;\n    cin >> m >> n;\n    \n    vector<int> count(10, 0);\n    \n    for (int i = m; i <= n; i++) {\n        int num = i;\n        while (num > 0) {\n            count[num % 10]++;\n            num /= 10;\n        }\n    }\n    \n    for (int i = 0; i < 10; i++) {\n        cout << count[i] << \" \";\n    }\n    cout << endl;\n    \n    return 0;\n}\n```\n\n### 门外的树\n\n**题目描述：** 有n棵树，编号为1到n。每次砍掉一段连续的树，问最后剩下多少棵树。\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    \n    vector<bool> trees(n + 1, true);  // true表示树还在\n    \n    for (int i = 0; i < m; i++) {\n        int l, r;\n        cin >> l >> r;\n        for (int j = l; j <= r; j++) {\n            trees[j] = false;  // 砍掉树\n        }\n    }\n    \n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (trees[i]) count++;\n    }\n    \n    cout << count << endl;\n    return 0;\n}\n```\n\n---\n\n## 分支题目\n\n### 旗鼓相当的对手\n\n**题目描述：** 给定n个人的成绩，找出成绩相同的人数最多的成绩。\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    \n    vector<int> scores(n);\n    for (int i = 0; i < n; i++) {\n        cin >> scores[i];\n    }\n    \n    sort(scores.begin(), scores.end());\n    \n    int maxCount = 1;\n    int currentCount = 1;\n    int result = scores[0];\n    \n    for (int i = 1; i < n; i++) {\n        if (scores[i] == scores[i-1]) {\n            currentCount++;\n        } else {\n            if (currentCount > maxCount) {\n                maxCount = currentCount;\n                result = scores[i-1];\n            }\n            currentCount = 1;\n        }\n    }\n    \n    // 检查最后一组\n    if (currentCount > maxCount) {\n        maxCount = currentCount;\n        result = scores[n-1];\n    }\n    \n    cout << result << endl;\n    return 0;\n}\n```\n\n### 不知大小\n\n**题目描述：** 给定三个数，输出它们的最大值和最小值。\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int a, b, c;\n    cin >> a >> b >> c;\n    \n    int max_val = max({a, b, c});\n    int min_val = min({a, b, c});\n    \n    cout << max_val << \" \" << min_val << endl;\n    return 0;\n}\n```\n\n### 三个骰子\n\n**题目描述：** 掷三个骰子，计算点数和。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b, c;\n    cin >> a >> b >> c;\n    \n    int sum = a + b + c;\n    cout << sum << endl;\n    \n    return 0;\n}\n```\n\n---\n\n## 顺序题目\n\n### 显示屏\n\n**题目描述：** 模拟数字显示屏，用字符画显示数字。\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string num;\n    cin >> num;\n    \n    // 数字的字符画表示\n    string digits[10][5] = {\n        {\"###\", \"# #\", \"# #\", \"# #\", \"###\"},  // 0\n        {\"  #\", \"  #\", \"  #\", \"  #\", \"  #\"},  // 1\n        {\"###\", \"  #\", \"###\", \"#  \", \"###\"},  // 2\n        {\"###\", \"  #\", \"###\", \"  #\", \"###\"},  // 3\n        {\"# #\", \"# #\", \"###\", \"  #\", \"  #\"},  // 4\n        {\"###\", \"#  \", \"###\", \"  #\", \"###\"},  // 5\n        {\"###\", \"#  \", \"###\", \"# #\", \"###\"},  // 6\n        {\"###\", \"  #\", \"  #\", \"  #\", \"  #\"},  // 7\n        {\"###\", \"# #\", \"###\", \"# #\", \"###\"},  // 8\n        {\"###\", \"# #\", \"###\", \"  #\", \"###\"}   // 9\n    };\n    \n    // 输出每一行\n    for (int row = 0; row < 5; row++) {\n        for (char c : num) {\n            cout << digits[c - '0'][row] << \" \";\n        }\n        cout << endl;\n    }\n    \n    return 0;\n}\n```\n\n### 彩票\n\n**题目描述：** 模拟彩票开奖，判断中奖情况。\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    vector<int> winning(7);\n    vector<int> ticket(7);\n    \n    // 输入中奖号码\n    for (int i = 0; i < 7; i++) {\n        cin >> winning[i];\n    }\n    \n    // 输入彩票号码\n    for (int i = 0; i < 7; i++) {\n        cin >> ticket[i];\n    }\n    \n    // 统计匹配的号码数\n    int matches = 0;\n    for (int i = 0; i < 7; i++) {\n        if (find(winning.begin(), winning.end(), ticket[i]) != winning.end()) {\n            matches++;\n        }\n    }\n    \n    cout << matches << endl;\n    return 0;\n}\n```\n\n### 工艺品制作\n\n**题目描述：** 计算制作工艺品所需的材料数量。\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    \n    int total = n * m * k;\n    cout << total << endl;\n    \n    return 0;\n}\n```\n\n---\n\n## 常用算法模板\n\n### 1. 二分查找\n```cpp\nint binarySearch(vector<int>& arr, int target) {\n    int left = 0, right = arr.size() - 1;\n    while (left <= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] == target) return mid;\n        if (arr[mid] < target) left = mid + 1;\n        else right = mid - 1;\n    }\n    return -1;\n}\n```\n\n### 2. 快速排序\n```cpp\nvoid quickSort(vector<int>& arr, int left, int right) {\n    if (left >= right) return;\n    \n    int pivot = arr[left];\n    int i = left, j = right;\n    \n    while (i < j) {\n        while (i < j && arr[j] >= pivot) j--;\n        while (i < j && arr[i] <= pivot) i++;\n        if (i < j) swap(arr[i], arr[j]);\n    }\n    \n    arr[left] = arr[i];\n    arr[i] = pivot;\n    \n    quickSort(arr, left, i - 1);\n    quickSort(arr, i + 1, right);\n}\n```\n\n### 3. 深度优先搜索\n```cpp\nvoid dfs(vector<vector<int>>& graph, vector<bool>& visited, int node) {\n    visited[node] = true;\n    cout << node << \" \";\n    \n    for (int neighbor : graph[node]) {\n        if (!visited[neighbor]) {\n            dfs(graph, visited, neighbor);\n        }\n    }\n}\n```\n\n### 4. 广度优先搜索\n```cpp\nvoid bfs(vector<vector<int>>& graph, int start) {\n    vector<bool> visited(graph.size(), false);\n    queue<int> q;\n    \n    q.push(start);\n    visited[start] = true;\n    \n    while (!q.empty()) {\n        int node = q.front();\n        q.pop();\n        cout << node << \" \";\n        \n        for (int neighbor : graph[node]) {\n            if (!visited[neighbor]) {\n                visited[neighbor] = true;\n                q.push(neighbor);\n            }\n        }\n    }\n}\n```\n\n### 5. 动态规划 - 斐波那契\n```cpp\nint fibonacci(int n) {\n    if (n <= 1) return n;\n    \n    vector<int> dp(n + 1);\n    dp[0] = 0;\n    dp[1] = 1;\n    \n    for (int i = 2; i <= n; i++) {\n        dp[i] = dp[i-1] + dp[i-2];\n    }\n    \n    return dp[n];\n}\n```\n\n### 6. 字符串匹配\n```cpp\nbool isSubstring(string s, string sub) {\n    return s.find(sub) != string::npos;\n}\n```\n\n### 7. 素数筛法\n```cpp\nvector<bool> sieve(int n) {\n    vector<bool> isPrime(n + 1, true);\n    isPrime[0] = isPrime[1] = false;\n    \n    for (int i = 2; i * i <= n; i++) {\n        if (isPrime[i]) {\n            for (int j = i * i; j <= n; j += i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n    \n    return isPrime;\n}\n```\n\n### 8. 最大公约数和最小公倍数\n```cpp\nint gcd(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\nint lcm(int a, int b) {\n    return a / gcd(a, b) * b;\n}\n```\n\n### 9. 进制转换\n```cpp\nstring decimalToBinary(int n) {\n    if (n == 0) return \"0\";\n    string result = \"\";\n    while (n > 0) {\n        result = char('0' + n % 2) + result;\n        n /= 2;\n    }\n    return result;\n}\n\nint binaryToDecimal(string binary) {\n    int result = 0;\n    for (char c : binary) {\n        result = result * 2 + (c - '0');\n    }\n    return result;\n}\n```\n\n### 10. 排列组合\n```cpp\n// 计算组合数 C(n,m)\nlong long combination(int n, int m) {\n    if (m > n - m) m = n - m;\n    long long result = 1;\n    for (int i = 0; i < m; i++) {\n        result = result * (n - i) / (i + 1);\n    }\n    return result;\n}\n``` ","slug":"洛谷题集","published":1,"updated":"2025-09-10T05:34:05.739Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5cp0000g9c9k8kwb7qm3","content":"<h1 id=\"洛谷题目集\"><a href=\"#洛谷题目集\" class=\"headerlink\" title=\"洛谷题目集\"></a>洛谷题目集</h1><h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#%E6%95%B0%E7%BB%84%E9%A2%98%E7%9B%AE\">数组题目</a></li>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE\">字符串题目</a></li>\n<li><a href=\"#%E5%BE%AA%E7%8E%AF%E9%A2%98%E7%9B%AE\">循环题目</a></li>\n<li><a href=\"#%E5%88%86%E6%94%AF%E9%A2%98%E7%9B%AE\">分支题目</a></li>\n<li><a href=\"#%E9%A1%BA%E5%BA%8F%E9%A2%98%E7%9B%AE\">顺序题目</a></li>\n</ol>\n<hr>\n<h2 id=\"数组题目\"><a href=\"#数组题目\" class=\"headerlink\" title=\"数组题目\"></a>数组题目</h2><h3 id=\"神奇的幻方\"><a href=\"#神奇的幻方\" class=\"headerlink\" title=\"神奇的幻方\"></a>神奇的幻方</h3><p><strong>题目描述：</strong> 构造一个n×n的幻方，满足每行、每列、两条对角线的和都相等。</p>\n<p><strong>解题思路：</strong> 使用幻方的构造规则，从第一行中间开始，按照特定规则填充数字。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">45</span>][<span class=\"number\">45</span>] = &#123;&#125;; <span class=\"comment\">// 幻方数组，初始化为0</span></span><br><span class=\"line\">    <span class=\"type\">int</span> k = <span class=\"number\">1</span>; <span class=\"comment\">// 当前要填入的数字</span></span><br><span class=\"line\">    <span class=\"type\">int</span> x, y;  <span class=\"comment\">// 当前数字的位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (k &lt;= n * n) &#123; <span class=\"comment\">// 循环直到填满所有数字</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k == <span class=\"number\">1</span>) &#123; <span class=\"comment\">// 第一个数字放在第一行的中间</span></span><br><span class=\"line\">            x = <span class=\"number\">1</span>;</span><br><span class=\"line\">            y = n / <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 根据幻方规则移动位置</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == <span class=\"number\">1</span> &amp;&amp; y != n) &#123; <span class=\"comment\">// 如果在第一行且不在最后一列</span></span><br><span class=\"line\">                x = n; <span class=\"comment\">// 移动到最后一行</span></span><br><span class=\"line\">                y++;   <span class=\"comment\">// 列向右移动</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (y == n &amp;&amp; x != <span class=\"number\">1</span>) &#123; <span class=\"comment\">// 如果在最后一列且不在第一行</span></span><br><span class=\"line\">                x--;   <span class=\"comment\">// 行向上移动</span></span><br><span class=\"line\">                y = <span class=\"number\">1</span>; <span class=\"comment\">// 移动到第一列</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x == <span class=\"number\">1</span> &amp;&amp; y == n) &#123; <span class=\"comment\">// 如果在第一行最后一列</span></span><br><span class=\"line\">                x++;   <span class=\"comment\">// 行向下移动</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (a[x<span class=\"number\">-1</span>][y<span class=\"number\">+1</span>] != <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 如果右上角已经有数字</span></span><br><span class=\"line\">                    x++; <span class=\"comment\">// 行向下移动</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    x--; <span class=\"comment\">// 行向上移动</span></span><br><span class=\"line\">                    y++; <span class=\"comment\">// 列向右移动</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a[x][y] = k; <span class=\"comment\">// 填入数字</span></span><br><span class=\"line\">        k++; <span class=\"comment\">// 下一个数字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 输出幻方</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; a[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"杨辉三角\"><a href=\"#杨辉三角\" class=\"headerlink\" title=\"杨辉三角\"></a>杨辉三角</h3><p><strong>题目描述：</strong> 输入n，输出前n行的杨辉三角。</p>\n<p><strong>解题思路：</strong> 使用二维数组存储，每个数等于它上方两个数之和。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">yanghui</span>(n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        yanghui[i].<span class=\"built_in\">resize</span>(i + <span class=\"number\">1</span>);  <span class=\"comment\">// 每行的元素个数为 i+1</span></span><br><span class=\"line\">        yanghui[i][<span class=\"number\">0</span>] = yanghui[i][i] = <span class=\"number\">1</span>;  <span class=\"comment\">// 每行的第一个和最后一个元素为1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; i; j++)&#123;</span><br><span class=\"line\">            yanghui[i][j] = yanghui[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] + yanghui[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++)&#123;</span><br><span class=\"line\">            cout &lt;&lt; yanghui[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>优化版本（仅输出）：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> val = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++)&#123;</span><br><span class=\"line\">            cout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            val = val * (i - j) / (j + <span class=\"number\">1</span>);  <span class=\"comment\">// 计算下一个值</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"蛇形方阵\"><a href=\"#蛇形方阵\" class=\"headerlink\" title=\"蛇形方阵\"></a>蛇形方阵</h3><p><strong>题目描述：</strong> 构造一个n×n的蛇形方阵，数字从1开始按蛇形路径填充。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">100</span>][<span class=\"number\">100</span>] = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;  <span class=\"comment\">// 偶数行从左到右</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                a[i][j] = num++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 奇数行从右到左</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = n - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">                a[i][j] = num++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; a[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开灯问题\"><a href=\"#开灯问题\" class=\"headerlink\" title=\"开灯问题\"></a>开灯问题</h3><p><strong>题目描述：</strong> 有n盏灯，编号为1到n。第1个人把所有灯都打开，第2个人按下所有编号为2的倍数的开关，第3个人按下所有编号为3的倍数的开关，以此类推。问最后有多少盏灯是亮的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">lights</span><span class=\"params\">(n + <span class=\"number\">1</span>, <span class=\"literal\">false</span>)</span></span>;  <span class=\"comment\">// false表示灯关闭</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt;= n; j += i) &#123;</span><br><span class=\"line\">            lights[j] = !lights[j];  <span class=\"comment\">// 翻转灯的状态</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (lights[i]) count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"珠心算测验\"><a href=\"#珠心算测验\" class=\"headerlink\" title=\"珠心算测验\"></a>珠心算测验</h3><p><strong>题目描述：</strong> 给定n个数，问有多少个数可以表示为其他两个数的和。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">nums</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">canSum</span><span class=\"params\">(<span class=\"number\">20001</span>, <span class=\"literal\">false</span>)</span></span>;  <span class=\"comment\">// 标记哪些数可以表示为两数之和</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算所有可能的和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            canSum[nums[i] + nums[j]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (canSum[nums[i]]) count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"字符串题目\"><a href=\"#字符串题目\" class=\"headerlink\" title=\"字符串题目\"></a>字符串题目</h2><h3 id=\"数字反转\"><a href=\"#数字反转\" class=\"headerlink\" title=\"数字反转\"></a>数字反转</h3><p><strong>题目描述：</strong> 给定一个数，可以是整数、小数、分数或百分数，请将该数各个位上数字反转得到一个新数。</p>\n<p><strong>解题思路：</strong> 根据不同的数字类型分别处理，注意去除前导零和末尾零。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反转字符串，并去除前导零</span></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">reverseStr</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(s.<span class=\"built_in\">begin</span>(), s.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"comment\">// 去除前导零</span></span><br><span class=\"line\">    s.<span class=\"built_in\">erase</span>(<span class=\"number\">0</span>, s.<span class=\"built_in\">find_first_not_of</span>(<span class=\"string\">&#x27;0&#x27;</span>));</span><br><span class=\"line\">    <span class=\"comment\">// 如果全部是0，保留一个0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.<span class=\"built_in\">empty</span>()) s = <span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin &gt;&gt; s;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 判断输入类型</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;.&#x27;</span>) != string::npos) &#123;  <span class=\"comment\">// 小数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> pos = s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        string intPart = s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">        string decPart = s.<span class=\"built_in\">substr</span>(pos + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 反转整数部分和小数部分</span></span><br><span class=\"line\">        string newInt = <span class=\"built_in\">reverseStr</span>(intPart);</span><br><span class=\"line\">        string newDec = <span class=\"built_in\">reverseStr</span>(decPart);</span><br><span class=\"line\">        <span class=\"comment\">// 去除小数部分末尾的0</span></span><br><span class=\"line\">        newDec.<span class=\"built_in\">erase</span>(newDec.<span class=\"built_in\">find_last_not_of</span>(<span class=\"string\">&#x27;0&#x27;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newDec.<span class=\"built_in\">empty</span>()) newDec = <span class=\"string\">&quot;0&quot;</span>;  <span class=\"comment\">// 如果小数部分全为0，保留一个0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        cout &lt;&lt; newInt &lt;&lt; <span class=\"string\">&quot;.&quot;</span> &lt;&lt; newDec &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;/&#x27;</span>) != string::npos) &#123;  <span class=\"comment\">// 分数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> pos = s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        string numerator = s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">        string denominator = s.<span class=\"built_in\">substr</span>(pos + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 反转分子和分母</span></span><br><span class=\"line\">        string newNum = <span class=\"built_in\">reverseStr</span>(numerator);</span><br><span class=\"line\">        string newDen = <span class=\"built_in\">reverseStr</span>(denominator);</span><br><span class=\"line\">        cout &lt;&lt; newNum &lt;&lt; <span class=\"string\">&quot;/&quot;</span> &lt;&lt; newDen &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;%&#x27;</span>) != string::npos) &#123;  <span class=\"comment\">// 百分数</span></span><br><span class=\"line\">        string num = s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, s.<span class=\"built_in\">length</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">        string newNum = <span class=\"built_in\">reverseStr</span>(num);</span><br><span class=\"line\">        cout &lt;&lt; newNum &lt;&lt; <span class=\"string\">&quot;%&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 整数</span></span><br><span class=\"line\">        string newNum = <span class=\"built_in\">reverseStr</span>(s);</span><br><span class=\"line\">        cout &lt;&lt; newNum &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"凯撒密码\"><a href=\"#凯撒密码\" class=\"headerlink\" title=\"凯撒密码\"></a>凯撒密码</h3><p><strong>题目描述：</strong> 将字符串中的每个字母向后移动k位，非字母字符保持不变。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    <span class=\"type\">int</span> k;</span><br><span class=\"line\">    cin &gt;&gt; s &gt;&gt; k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span>&amp; c : s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isalpha</span>(c)) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> base = <span class=\"built_in\">isupper</span>(c) ? <span class=\"string\">&#x27;A&#x27;</span> : <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            c = (c - base + k) % <span class=\"number\">26</span> + base;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"统计单词数\"><a href=\"#统计单词数\" class=\"headerlink\" title=\"统计单词数\"></a>统计单词数</h3><p><strong>题目描述：</strong> 统计一个单词在文本中出现的次数。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string word, text;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, word);</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, text);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 转换为小写</span></span><br><span class=\"line\">    <span class=\"built_in\">transform</span>(word.<span class=\"built_in\">begin</span>(), word.<span class=\"built_in\">end</span>(), word.<span class=\"built_in\">begin</span>(), ::tolower);</span><br><span class=\"line\">    <span class=\"built_in\">transform</span>(text.<span class=\"built_in\">begin</span>(), text.<span class=\"built_in\">end</span>(), text.<span class=\"built_in\">begin</span>(), ::tolower);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">stringstream <span class=\"title\">ss</span><span class=\"params\">(text)</span></span>;</span><br><span class=\"line\">    string token;</span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> firstPos = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> currentPos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (ss &gt;&gt; token) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (token == word) &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (firstPos == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                firstPos = currentPos;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        currentPos++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"number\">-1</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; count &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; firstPos &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"大小写转换\"><a href=\"#大小写转换\" class=\"headerlink\" title=\"大小写转换\"></a>大小写转换</h3><p><strong>题目描述：</strong> 将字符串中的大写字母转换为小写，小写字母转换为大写。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin &gt;&gt; s;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span>&amp; c : s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isupper</span>(c)) &#123;</span><br><span class=\"line\">            c = <span class=\"built_in\">tolower</span>(c);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">islower</span>(c)) &#123;</span><br><span class=\"line\">            c = <span class=\"built_in\">toupper</span>(c);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"标题统计\"><a href=\"#标题统计\" class=\"headerlink\" title=\"标题统计\"></a>标题统计</h3><p><strong>题目描述：</strong> 统计一行文本中字符的个数（不包括空格和换行符）。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, s);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> c : s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (c != <span class=\"string\">&#x27; &#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;\\n&#x27;</span>) &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"循环题目\"><a href=\"#循环题目\" class=\"headerlink\" title=\"循环题目\"></a>循环题目</h2><h3 id=\"冰雹猜想\"><a href=\"#冰雹猜想\" class=\"headerlink\" title=\"冰雹猜想\"></a>冰雹猜想</h3><p><strong>题目描述：</strong> 对于任意一个正整数，如果是奇数，则乘3加1；如果是偶数，则除以2。重复这个过程，最终会得到1。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; n &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % <span class=\"number\">2</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            n = n * <span class=\"number\">3</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            n = n / <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"number\">1</span> &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"梦中的统计\"><a href=\"#梦中的统计\" class=\"headerlink\" title=\"梦中的统计\"></a>梦中的统计</h3><p><strong>题目描述：</strong> 统计数字0-9在给定范围内出现的次数。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">count</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = m; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> num = i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (num &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            count[num % <span class=\"number\">10</span>]++;</span><br><span class=\"line\">            num /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">        cout &lt;&lt; count[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"门外的树\"><a href=\"#门外的树\" class=\"headerlink\" title=\"门外的树\"></a>门外的树</h3><p><strong>题目描述：</strong> 有n棵树，编号为1到n。每次砍掉一段连续的树，问最后剩下多少棵树。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">trees</span><span class=\"params\">(n + <span class=\"number\">1</span>, <span class=\"literal\">true</span>)</span></span>;  <span class=\"comment\">// true表示树还在</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = l; j &lt;= r; j++) &#123;</span><br><span class=\"line\">            trees[j] = <span class=\"literal\">false</span>;  <span class=\"comment\">// 砍掉树</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (trees[i]) count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"分支题目\"><a href=\"#分支题目\" class=\"headerlink\" title=\"分支题目\"></a>分支题目</h2><h3 id=\"旗鼓相当的对手\"><a href=\"#旗鼓相当的对手\" class=\"headerlink\" title=\"旗鼓相当的对手\"></a>旗鼓相当的对手</h3><p><strong>题目描述：</strong> 给定n个人的成绩，找出成绩相同的人数最多的成绩。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">scores</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; scores[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(scores.<span class=\"built_in\">begin</span>(), scores.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> maxCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> currentCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> result = scores[<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (scores[i] == scores[i<span class=\"number\">-1</span>]) &#123;</span><br><span class=\"line\">            currentCount++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (currentCount &gt; maxCount) &#123;</span><br><span class=\"line\">                maxCount = currentCount;</span><br><span class=\"line\">                result = scores[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            currentCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 检查最后一组</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (currentCount &gt; maxCount) &#123;</span><br><span class=\"line\">        maxCount = currentCount;</span><br><span class=\"line\">        result = scores[n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; result &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不知大小\"><a href=\"#不知大小\" class=\"headerlink\" title=\"不知大小\"></a>不知大小</h3><p><strong>题目描述：</strong> 给定三个数，输出它们的最大值和最小值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, c;</span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> max_val = <span class=\"built_in\">max</span>(&#123;a, b, c&#125;);</span><br><span class=\"line\">    <span class=\"type\">int</span> min_val = <span class=\"built_in\">min</span>(&#123;a, b, c&#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; max_val &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; min_val &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三个骰子\"><a href=\"#三个骰子\" class=\"headerlink\" title=\"三个骰子\"></a>三个骰子</h3><p><strong>题目描述：</strong> 掷三个骰子，计算点数和。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, c;</span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> sum = a + b + c;</span><br><span class=\"line\">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"顺序题目\"><a href=\"#顺序题目\" class=\"headerlink\" title=\"顺序题目\"></a>顺序题目</h2><h3 id=\"显示屏\"><a href=\"#显示屏\" class=\"headerlink\" title=\"显示屏\"></a>显示屏</h3><p><strong>题目描述：</strong> 模拟数字显示屏，用字符画显示数字。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string num;</span><br><span class=\"line\">    cin &gt;&gt; num;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 数字的字符画表示</span></span><br><span class=\"line\">    string digits[<span class=\"number\">10</span>][<span class=\"number\">5</span>] = &#123;</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 0</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>&#125;,  <span class=\"comment\">// 1</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;#  &quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 2</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 3</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>&#125;,  <span class=\"comment\">// 4</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;#  &quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 5</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;#  &quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 6</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>&#125;,  <span class=\"comment\">// 7</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 8</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;   <span class=\"comment\">// 9</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输出每一行</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> row = <span class=\"number\">0</span>; row &lt; <span class=\"number\">5</span>; row++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">char</span> c : num) &#123;</span><br><span class=\"line\">            cout &lt;&lt; digits[c - <span class=\"string\">&#x27;0&#x27;</span>][row] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"彩票\"><a href=\"#彩票\" class=\"headerlink\" title=\"彩票\"></a>彩票</h3><p><strong>题目描述：</strong> 模拟彩票开奖，判断中奖情况。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">winning</span><span class=\"params\">(<span class=\"number\">7</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">ticket</span><span class=\"params\">(<span class=\"number\">7</span>)</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输入中奖号码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; winning[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输入彩票号码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; ticket[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 统计匹配的号码数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> matches = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">find</span>(winning.<span class=\"built_in\">begin</span>(), winning.<span class=\"built_in\">end</span>(), ticket[i]) != winning.<span class=\"built_in\">end</span>()) &#123;</span><br><span class=\"line\">            matches++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; matches &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"工艺品制作\"><a href=\"#工艺品制作\" class=\"headerlink\" title=\"工艺品制作\"></a>工艺品制作</h3><p><strong>题目描述：</strong> 计算制作工艺品所需的材料数量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m, k;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> total = n * m * k;</span><br><span class=\"line\">    cout &lt;&lt; total &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"常用算法模板\"><a href=\"#常用算法模板\" class=\"headerlink\" title=\"常用算法模板\"></a>常用算法模板</h2><h3 id=\"1-二分查找\"><a href=\"#1-二分查找\" class=\"headerlink\" title=\"1. 二分查找\"></a>1. 二分查找</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">binarySearch</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr, <span class=\"type\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> left = <span class=\"number\">0</span>, right = arr.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt;= right) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> mid = left + (right - left) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[mid] == target) <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[mid] &lt; target) left = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> right = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-快速排序\"><a href=\"#2-快速排序\" class=\"headerlink\" title=\"2. 快速排序\"></a>2. 快速排序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr, <span class=\"type\">int</span> left, <span class=\"type\">int</span> right)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &gt;= right) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> pivot = arr[left];</span><br><span class=\"line\">    <span class=\"type\">int</span> i = left, j = right;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; arr[j] &gt;= pivot) j--;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; arr[i] &lt;= pivot) i++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; j) <span class=\"built_in\">swap</span>(arr[i], arr[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    arr[left] = arr[i];</span><br><span class=\"line\">    arr[i] = pivot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(arr, left, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(arr, i + <span class=\"number\">1</span>, right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-深度优先搜索\"><a href=\"#3-深度优先搜索\" class=\"headerlink\" title=\"3. 深度优先搜索\"></a>3. 深度优先搜索</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; graph, vector&lt;<span class=\"type\">bool</span>&gt;&amp; visited, <span class=\"type\">int</span> node)</span> </span>&#123;</span><br><span class=\"line\">    visited[node] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    cout &lt;&lt; node &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> neighbor : graph[node]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!visited[neighbor]) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">dfs</span>(graph, visited, neighbor);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-广度优先搜索\"><a href=\"#4-广度优先搜索\" class=\"headerlink\" title=\"4. 广度优先搜索\"></a>4. 广度优先搜索</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">bfs</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; graph, <span class=\"type\">int</span> start)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">visited</span><span class=\"params\">(graph.size(), <span class=\"literal\">false</span>)</span></span>;</span><br><span class=\"line\">    queue&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\">    </span><br><span class=\"line\">    q.<span class=\"built_in\">push</span>(start);</span><br><span class=\"line\">    visited[start] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> node = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        cout &lt;&lt; node &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> neighbor : graph[node]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!visited[neighbor]) &#123;</span><br><span class=\"line\">                visited[neighbor] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                q.<span class=\"built_in\">push</span>(neighbor);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-动态规划-斐波那契\"><a href=\"#5-动态规划-斐波那契\" class=\"headerlink\" title=\"5. 动态规划 - 斐波那契\"></a>5. 动态规划 - 斐波那契</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">fibonacci</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dp</span><span class=\"params\">(n + <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        dp[i] = dp[i<span class=\"number\">-1</span>] + dp[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-字符串匹配\"><a href=\"#6-字符串匹配\" class=\"headerlink\" title=\"6. 字符串匹配\"></a>6. 字符串匹配</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isSubstring</span><span class=\"params\">(string s, string sub)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.<span class=\"built_in\">find</span>(sub) != string::npos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-素数筛法\"><a href=\"#7-素数筛法\" class=\"headerlink\" title=\"7. 素数筛法\"></a>7. 素数筛法</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">sieve</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">isPrime</span><span class=\"params\">(n + <span class=\"number\">1</span>, <span class=\"literal\">true</span>)</span></span>;</span><br><span class=\"line\">    isPrime[<span class=\"number\">0</span>] = isPrime[<span class=\"number\">1</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isPrime[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i * i; j &lt;= n; j += i) &#123;</span><br><span class=\"line\">                isPrime[j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> isPrime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-最大公约数和最小公倍数\"><a href=\"#8-最大公约数和最小公倍数\" class=\"headerlink\" title=\"8. 最大公约数和最小公倍数\"></a>8. 最大公约数和最小公倍数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (b != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> temp = b;</span><br><span class=\"line\">        b = a % b;</span><br><span class=\"line\">        a = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lcm</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a / <span class=\"built_in\">gcd</span>(a, b) * b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-进制转换\"><a href=\"#9-进制转换\" class=\"headerlink\" title=\"9. 进制转换\"></a>9. 进制转换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">string <span class=\"title\">decimalToBinary</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">    string result = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        result = <span class=\"built_in\">char</span>(<span class=\"string\">&#x27;0&#x27;</span> + n % <span class=\"number\">2</span>) + result;</span><br><span class=\"line\">        n /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">binaryToDecimal</span><span class=\"params\">(string binary)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> c : binary) &#123;</span><br><span class=\"line\">        result = result * <span class=\"number\">2</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-排列组合\"><a href=\"#10-排列组合\" class=\"headerlink\" title=\"10. 排列组合\"></a>10. 排列组合</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算组合数 C(n,m)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"title\">combination</span><span class=\"params\">(<span class=\"type\">int</span> n, <span class=\"type\">int</span> m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m &gt; n - m) m = n - m;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> result = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        result = result * (n - i) / (i + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"洛谷题目集\"><a href=\"#洛谷题目集\" class=\"headerlink\" title=\"洛谷题目集\"></a>洛谷题目集</h1><h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><a href=\"#%E6%95%B0%E7%BB%84%E9%A2%98%E7%9B%AE\">数组题目</a></li>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE\">字符串题目</a></li>\n<li><a href=\"#%E5%BE%AA%E7%8E%AF%E9%A2%98%E7%9B%AE\">循环题目</a></li>\n<li><a href=\"#%E5%88%86%E6%94%AF%E9%A2%98%E7%9B%AE\">分支题目</a></li>\n<li><a href=\"#%E9%A1%BA%E5%BA%8F%E9%A2%98%E7%9B%AE\">顺序题目</a></li>\n</ol>\n<hr>\n<h2 id=\"数组题目\"><a href=\"#数组题目\" class=\"headerlink\" title=\"数组题目\"></a>数组题目</h2><h3 id=\"神奇的幻方\"><a href=\"#神奇的幻方\" class=\"headerlink\" title=\"神奇的幻方\"></a>神奇的幻方</h3><p><strong>题目描述：</strong> 构造一个n×n的幻方，满足每行、每列、两条对角线的和都相等。</p>\n<p><strong>解题思路：</strong> 使用幻方的构造规则，从第一行中间开始，按照特定规则填充数字。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">45</span>][<span class=\"number\">45</span>] = &#123;&#125;; <span class=\"comment\">// 幻方数组，初始化为0</span></span><br><span class=\"line\">    <span class=\"type\">int</span> k = <span class=\"number\">1</span>; <span class=\"comment\">// 当前要填入的数字</span></span><br><span class=\"line\">    <span class=\"type\">int</span> x, y;  <span class=\"comment\">// 当前数字的位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (k &lt;= n * n) &#123; <span class=\"comment\">// 循环直到填满所有数字</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k == <span class=\"number\">1</span>) &#123; <span class=\"comment\">// 第一个数字放在第一行的中间</span></span><br><span class=\"line\">            x = <span class=\"number\">1</span>;</span><br><span class=\"line\">            y = n / <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 根据幻方规则移动位置</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == <span class=\"number\">1</span> &amp;&amp; y != n) &#123; <span class=\"comment\">// 如果在第一行且不在最后一列</span></span><br><span class=\"line\">                x = n; <span class=\"comment\">// 移动到最后一行</span></span><br><span class=\"line\">                y++;   <span class=\"comment\">// 列向右移动</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (y == n &amp;&amp; x != <span class=\"number\">1</span>) &#123; <span class=\"comment\">// 如果在最后一列且不在第一行</span></span><br><span class=\"line\">                x--;   <span class=\"comment\">// 行向上移动</span></span><br><span class=\"line\">                y = <span class=\"number\">1</span>; <span class=\"comment\">// 移动到第一列</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x == <span class=\"number\">1</span> &amp;&amp; y == n) &#123; <span class=\"comment\">// 如果在第一行最后一列</span></span><br><span class=\"line\">                x++;   <span class=\"comment\">// 行向下移动</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (a[x<span class=\"number\">-1</span>][y<span class=\"number\">+1</span>] != <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 如果右上角已经有数字</span></span><br><span class=\"line\">                    x++; <span class=\"comment\">// 行向下移动</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    x--; <span class=\"comment\">// 行向上移动</span></span><br><span class=\"line\">                    y++; <span class=\"comment\">// 列向右移动</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a[x][y] = k; <span class=\"comment\">// 填入数字</span></span><br><span class=\"line\">        k++; <span class=\"comment\">// 下一个数字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 输出幻方</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; a[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"杨辉三角\"><a href=\"#杨辉三角\" class=\"headerlink\" title=\"杨辉三角\"></a>杨辉三角</h3><p><strong>题目描述：</strong> 输入n，输出前n行的杨辉三角。</p>\n<p><strong>解题思路：</strong> 使用二维数组存储，每个数等于它上方两个数之和。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">yanghui</span>(n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        yanghui[i].<span class=\"built_in\">resize</span>(i + <span class=\"number\">1</span>);  <span class=\"comment\">// 每行的元素个数为 i+1</span></span><br><span class=\"line\">        yanghui[i][<span class=\"number\">0</span>] = yanghui[i][i] = <span class=\"number\">1</span>;  <span class=\"comment\">// 每行的第一个和最后一个元素为1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; i; j++)&#123;</span><br><span class=\"line\">            yanghui[i][j] = yanghui[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] + yanghui[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++)&#123;</span><br><span class=\"line\">            cout &lt;&lt; yanghui[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>优化版本（仅输出）：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> val = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++)&#123;</span><br><span class=\"line\">            cout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            val = val * (i - j) / (j + <span class=\"number\">1</span>);  <span class=\"comment\">// 计算下一个值</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"蛇形方阵\"><a href=\"#蛇形方阵\" class=\"headerlink\" title=\"蛇形方阵\"></a>蛇形方阵</h3><p><strong>题目描述：</strong> 构造一个n×n的蛇形方阵，数字从1开始按蛇形路径填充。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">100</span>][<span class=\"number\">100</span>] = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;  <span class=\"comment\">// 偶数行从左到右</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                a[i][j] = num++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 奇数行从右到左</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = n - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">                a[i][j] = num++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; a[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开灯问题\"><a href=\"#开灯问题\" class=\"headerlink\" title=\"开灯问题\"></a>开灯问题</h3><p><strong>题目描述：</strong> 有n盏灯，编号为1到n。第1个人把所有灯都打开，第2个人按下所有编号为2的倍数的开关，第3个人按下所有编号为3的倍数的开关，以此类推。问最后有多少盏灯是亮的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">lights</span><span class=\"params\">(n + <span class=\"number\">1</span>, <span class=\"literal\">false</span>)</span></span>;  <span class=\"comment\">// false表示灯关闭</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt;= n; j += i) &#123;</span><br><span class=\"line\">            lights[j] = !lights[j];  <span class=\"comment\">// 翻转灯的状态</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (lights[i]) count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"珠心算测验\"><a href=\"#珠心算测验\" class=\"headerlink\" title=\"珠心算测验\"></a>珠心算测验</h3><p><strong>题目描述：</strong> 给定n个数，问有多少个数可以表示为其他两个数的和。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">nums</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">canSum</span><span class=\"params\">(<span class=\"number\">20001</span>, <span class=\"literal\">false</span>)</span></span>;  <span class=\"comment\">// 标记哪些数可以表示为两数之和</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算所有可能的和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            canSum[nums[i] + nums[j]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (canSum[nums[i]]) count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"字符串题目\"><a href=\"#字符串题目\" class=\"headerlink\" title=\"字符串题目\"></a>字符串题目</h2><h3 id=\"数字反转\"><a href=\"#数字反转\" class=\"headerlink\" title=\"数字反转\"></a>数字反转</h3><p><strong>题目描述：</strong> 给定一个数，可以是整数、小数、分数或百分数，请将该数各个位上数字反转得到一个新数。</p>\n<p><strong>解题思路：</strong> 根据不同的数字类型分别处理，注意去除前导零和末尾零。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反转字符串，并去除前导零</span></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">reverseStr</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(s.<span class=\"built_in\">begin</span>(), s.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"comment\">// 去除前导零</span></span><br><span class=\"line\">    s.<span class=\"built_in\">erase</span>(<span class=\"number\">0</span>, s.<span class=\"built_in\">find_first_not_of</span>(<span class=\"string\">&#x27;0&#x27;</span>));</span><br><span class=\"line\">    <span class=\"comment\">// 如果全部是0，保留一个0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.<span class=\"built_in\">empty</span>()) s = <span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin &gt;&gt; s;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 判断输入类型</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;.&#x27;</span>) != string::npos) &#123;  <span class=\"comment\">// 小数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> pos = s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        string intPart = s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">        string decPart = s.<span class=\"built_in\">substr</span>(pos + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 反转整数部分和小数部分</span></span><br><span class=\"line\">        string newInt = <span class=\"built_in\">reverseStr</span>(intPart);</span><br><span class=\"line\">        string newDec = <span class=\"built_in\">reverseStr</span>(decPart);</span><br><span class=\"line\">        <span class=\"comment\">// 去除小数部分末尾的0</span></span><br><span class=\"line\">        newDec.<span class=\"built_in\">erase</span>(newDec.<span class=\"built_in\">find_last_not_of</span>(<span class=\"string\">&#x27;0&#x27;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newDec.<span class=\"built_in\">empty</span>()) newDec = <span class=\"string\">&quot;0&quot;</span>;  <span class=\"comment\">// 如果小数部分全为0，保留一个0</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        cout &lt;&lt; newInt &lt;&lt; <span class=\"string\">&quot;.&quot;</span> &lt;&lt; newDec &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;/&#x27;</span>) != string::npos) &#123;  <span class=\"comment\">// 分数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> pos = s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        string numerator = s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">        string denominator = s.<span class=\"built_in\">substr</span>(pos + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 反转分子和分母</span></span><br><span class=\"line\">        string newNum = <span class=\"built_in\">reverseStr</span>(numerator);</span><br><span class=\"line\">        string newDen = <span class=\"built_in\">reverseStr</span>(denominator);</span><br><span class=\"line\">        cout &lt;&lt; newNum &lt;&lt; <span class=\"string\">&quot;/&quot;</span> &lt;&lt; newDen &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27;%&#x27;</span>) != string::npos) &#123;  <span class=\"comment\">// 百分数</span></span><br><span class=\"line\">        string num = s.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, s.<span class=\"built_in\">length</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">        string newNum = <span class=\"built_in\">reverseStr</span>(num);</span><br><span class=\"line\">        cout &lt;&lt; newNum &lt;&lt; <span class=\"string\">&quot;%&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 整数</span></span><br><span class=\"line\">        string newNum = <span class=\"built_in\">reverseStr</span>(s);</span><br><span class=\"line\">        cout &lt;&lt; newNum &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"凯撒密码\"><a href=\"#凯撒密码\" class=\"headerlink\" title=\"凯撒密码\"></a>凯撒密码</h3><p><strong>题目描述：</strong> 将字符串中的每个字母向后移动k位，非字母字符保持不变。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    <span class=\"type\">int</span> k;</span><br><span class=\"line\">    cin &gt;&gt; s &gt;&gt; k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span>&amp; c : s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isalpha</span>(c)) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> base = <span class=\"built_in\">isupper</span>(c) ? <span class=\"string\">&#x27;A&#x27;</span> : <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            c = (c - base + k) % <span class=\"number\">26</span> + base;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"统计单词数\"><a href=\"#统计单词数\" class=\"headerlink\" title=\"统计单词数\"></a>统计单词数</h3><p><strong>题目描述：</strong> 统计一个单词在文本中出现的次数。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string word, text;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, word);</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, text);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 转换为小写</span></span><br><span class=\"line\">    <span class=\"built_in\">transform</span>(word.<span class=\"built_in\">begin</span>(), word.<span class=\"built_in\">end</span>(), word.<span class=\"built_in\">begin</span>(), ::tolower);</span><br><span class=\"line\">    <span class=\"built_in\">transform</span>(text.<span class=\"built_in\">begin</span>(), text.<span class=\"built_in\">end</span>(), text.<span class=\"built_in\">begin</span>(), ::tolower);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">stringstream <span class=\"title\">ss</span><span class=\"params\">(text)</span></span>;</span><br><span class=\"line\">    string token;</span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> firstPos = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> currentPos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (ss &gt;&gt; token) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (token == word) &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (firstPos == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                firstPos = currentPos;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        currentPos++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"number\">-1</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; count &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; firstPos &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"大小写转换\"><a href=\"#大小写转换\" class=\"headerlink\" title=\"大小写转换\"></a>大小写转换</h3><p><strong>题目描述：</strong> 将字符串中的大写字母转换为小写，小写字母转换为大写。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    cin &gt;&gt; s;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span>&amp; c : s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isupper</span>(c)) &#123;</span><br><span class=\"line\">            c = <span class=\"built_in\">tolower</span>(c);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">islower</span>(c)) &#123;</span><br><span class=\"line\">            c = <span class=\"built_in\">toupper</span>(c);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"标题统计\"><a href=\"#标题统计\" class=\"headerlink\" title=\"标题统计\"></a>标题统计</h3><p><strong>题目描述：</strong> 统计一行文本中字符的个数（不包括空格和换行符）。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string s;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, s);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> c : s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (c != <span class=\"string\">&#x27; &#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;\\n&#x27;</span>) &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"循环题目\"><a href=\"#循环题目\" class=\"headerlink\" title=\"循环题目\"></a>循环题目</h2><h3 id=\"冰雹猜想\"><a href=\"#冰雹猜想\" class=\"headerlink\" title=\"冰雹猜想\"></a>冰雹猜想</h3><p><strong>题目描述：</strong> 对于任意一个正整数，如果是奇数，则乘3加1；如果是偶数，则除以2。重复这个过程，最终会得到1。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; n &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % <span class=\"number\">2</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            n = n * <span class=\"number\">3</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            n = n / <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"number\">1</span> &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"梦中的统计\"><a href=\"#梦中的统计\" class=\"headerlink\" title=\"梦中的统计\"></a>梦中的统计</h3><p><strong>题目描述：</strong> 统计数字0-9在给定范围内出现的次数。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">count</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = m; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> num = i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (num &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            count[num % <span class=\"number\">10</span>]++;</span><br><span class=\"line\">            num /= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">        cout &lt;&lt; count[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"门外的树\"><a href=\"#门外的树\" class=\"headerlink\" title=\"门外的树\"></a>门外的树</h3><p><strong>题目描述：</strong> 有n棵树，编号为1到n。每次砍掉一段连续的树，问最后剩下多少棵树。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">trees</span><span class=\"params\">(n + <span class=\"number\">1</span>, <span class=\"literal\">true</span>)</span></span>;  <span class=\"comment\">// true表示树还在</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = l; j &lt;= r; j++) &#123;</span><br><span class=\"line\">            trees[j] = <span class=\"literal\">false</span>;  <span class=\"comment\">// 砍掉树</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (trees[i]) count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; count &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"分支题目\"><a href=\"#分支题目\" class=\"headerlink\" title=\"分支题目\"></a>分支题目</h2><h3 id=\"旗鼓相当的对手\"><a href=\"#旗鼓相当的对手\" class=\"headerlink\" title=\"旗鼓相当的对手\"></a>旗鼓相当的对手</h3><p><strong>题目描述：</strong> 给定n个人的成绩，找出成绩相同的人数最多的成绩。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">scores</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; scores[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(scores.<span class=\"built_in\">begin</span>(), scores.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> maxCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> currentCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> result = scores[<span class=\"number\">0</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (scores[i] == scores[i<span class=\"number\">-1</span>]) &#123;</span><br><span class=\"line\">            currentCount++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (currentCount &gt; maxCount) &#123;</span><br><span class=\"line\">                maxCount = currentCount;</span><br><span class=\"line\">                result = scores[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            currentCount = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 检查最后一组</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (currentCount &gt; maxCount) &#123;</span><br><span class=\"line\">        maxCount = currentCount;</span><br><span class=\"line\">        result = scores[n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; result &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不知大小\"><a href=\"#不知大小\" class=\"headerlink\" title=\"不知大小\"></a>不知大小</h3><p><strong>题目描述：</strong> 给定三个数，输出它们的最大值和最小值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, c;</span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> max_val = <span class=\"built_in\">max</span>(&#123;a, b, c&#125;);</span><br><span class=\"line\">    <span class=\"type\">int</span> min_val = <span class=\"built_in\">min</span>(&#123;a, b, c&#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; max_val &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; min_val &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三个骰子\"><a href=\"#三个骰子\" class=\"headerlink\" title=\"三个骰子\"></a>三个骰子</h3><p><strong>题目描述：</strong> 掷三个骰子，计算点数和。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, c;</span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> sum = a + b + c;</span><br><span class=\"line\">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"顺序题目\"><a href=\"#顺序题目\" class=\"headerlink\" title=\"顺序题目\"></a>顺序题目</h2><h3 id=\"显示屏\"><a href=\"#显示屏\" class=\"headerlink\" title=\"显示屏\"></a>显示屏</h3><p><strong>题目描述：</strong> 模拟数字显示屏，用字符画显示数字。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string num;</span><br><span class=\"line\">    cin &gt;&gt; num;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 数字的字符画表示</span></span><br><span class=\"line\">    string digits[<span class=\"number\">10</span>][<span class=\"number\">5</span>] = &#123;</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 0</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>&#125;,  <span class=\"comment\">// 1</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;#  &quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 2</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 3</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>&#125;,  <span class=\"comment\">// 4</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;#  &quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 5</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;#  &quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 6</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>&#125;,  <span class=\"comment\">// 7</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;,  <span class=\"comment\">// 8</span></span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;# #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>, <span class=\"string\">&quot;  #&quot;</span>, <span class=\"string\">&quot;###&quot;</span>&#125;   <span class=\"comment\">// 9</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输出每一行</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> row = <span class=\"number\">0</span>; row &lt; <span class=\"number\">5</span>; row++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">char</span> c : num) &#123;</span><br><span class=\"line\">            cout &lt;&lt; digits[c - <span class=\"string\">&#x27;0&#x27;</span>][row] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"彩票\"><a href=\"#彩票\" class=\"headerlink\" title=\"彩票\"></a>彩票</h3><p><strong>题目描述：</strong> 模拟彩票开奖，判断中奖情况。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">winning</span><span class=\"params\">(<span class=\"number\">7</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">ticket</span><span class=\"params\">(<span class=\"number\">7</span>)</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输入中奖号码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; winning[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输入彩票号码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; ticket[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 统计匹配的号码数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> matches = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">find</span>(winning.<span class=\"built_in\">begin</span>(), winning.<span class=\"built_in\">end</span>(), ticket[i]) != winning.<span class=\"built_in\">end</span>()) &#123;</span><br><span class=\"line\">            matches++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; matches &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"工艺品制作\"><a href=\"#工艺品制作\" class=\"headerlink\" title=\"工艺品制作\"></a>工艺品制作</h3><p><strong>题目描述：</strong> 计算制作工艺品所需的材料数量。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m, k;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> total = n * m * k;</span><br><span class=\"line\">    cout &lt;&lt; total &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"常用算法模板\"><a href=\"#常用算法模板\" class=\"headerlink\" title=\"常用算法模板\"></a>常用算法模板</h2><h3 id=\"1-二分查找\"><a href=\"#1-二分查找\" class=\"headerlink\" title=\"1. 二分查找\"></a>1. 二分查找</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">binarySearch</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr, <span class=\"type\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> left = <span class=\"number\">0</span>, right = arr.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt;= right) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> mid = left + (right - left) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[mid] == target) <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[mid] &lt; target) left = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> right = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-快速排序\"><a href=\"#2-快速排序\" class=\"headerlink\" title=\"2. 快速排序\"></a>2. 快速排序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr, <span class=\"type\">int</span> left, <span class=\"type\">int</span> right)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &gt;= right) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> pivot = arr[left];</span><br><span class=\"line\">    <span class=\"type\">int</span> i = left, j = right;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; arr[j] &gt;= pivot) j--;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; arr[i] &lt;= pivot) i++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; j) <span class=\"built_in\">swap</span>(arr[i], arr[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    arr[left] = arr[i];</span><br><span class=\"line\">    arr[i] = pivot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(arr, left, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(arr, i + <span class=\"number\">1</span>, right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-深度优先搜索\"><a href=\"#3-深度优先搜索\" class=\"headerlink\" title=\"3. 深度优先搜索\"></a>3. 深度优先搜索</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; graph, vector&lt;<span class=\"type\">bool</span>&gt;&amp; visited, <span class=\"type\">int</span> node)</span> </span>&#123;</span><br><span class=\"line\">    visited[node] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    cout &lt;&lt; node &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> neighbor : graph[node]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!visited[neighbor]) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">dfs</span>(graph, visited, neighbor);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-广度优先搜索\"><a href=\"#4-广度优先搜索\" class=\"headerlink\" title=\"4. 广度优先搜索\"></a>4. 广度优先搜索</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">bfs</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; graph, <span class=\"type\">int</span> start)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">visited</span><span class=\"params\">(graph.size(), <span class=\"literal\">false</span>)</span></span>;</span><br><span class=\"line\">    queue&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\">    </span><br><span class=\"line\">    q.<span class=\"built_in\">push</span>(start);</span><br><span class=\"line\">    visited[start] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> node = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        cout &lt;&lt; node &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> neighbor : graph[node]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!visited[neighbor]) &#123;</span><br><span class=\"line\">                visited[neighbor] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                q.<span class=\"built_in\">push</span>(neighbor);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-动态规划-斐波那契\"><a href=\"#5-动态规划-斐波那契\" class=\"headerlink\" title=\"5. 动态规划 - 斐波那契\"></a>5. 动态规划 - 斐波那契</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">fibonacci</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dp</span><span class=\"params\">(n + <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        dp[i] = dp[i<span class=\"number\">-1</span>] + dp[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-字符串匹配\"><a href=\"#6-字符串匹配\" class=\"headerlink\" title=\"6. 字符串匹配\"></a>6. 字符串匹配</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isSubstring</span><span class=\"params\">(string s, string sub)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.<span class=\"built_in\">find</span>(sub) != string::npos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-素数筛法\"><a href=\"#7-素数筛法\" class=\"headerlink\" title=\"7. 素数筛法\"></a>7. 素数筛法</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">sieve</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">isPrime</span><span class=\"params\">(n + <span class=\"number\">1</span>, <span class=\"literal\">true</span>)</span></span>;</span><br><span class=\"line\">    isPrime[<span class=\"number\">0</span>] = isPrime[<span class=\"number\">1</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isPrime[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i * i; j &lt;= n; j += i) &#123;</span><br><span class=\"line\">                isPrime[j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> isPrime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-最大公约数和最小公倍数\"><a href=\"#8-最大公约数和最小公倍数\" class=\"headerlink\" title=\"8. 最大公约数和最小公倍数\"></a>8. 最大公约数和最小公倍数</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (b != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> temp = b;</span><br><span class=\"line\">        b = a % b;</span><br><span class=\"line\">        a = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lcm</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a / <span class=\"built_in\">gcd</span>(a, b) * b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-进制转换\"><a href=\"#9-进制转换\" class=\"headerlink\" title=\"9. 进制转换\"></a>9. 进制转换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">string <span class=\"title\">decimalToBinary</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">    string result = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        result = <span class=\"built_in\">char</span>(<span class=\"string\">&#x27;0&#x27;</span> + n % <span class=\"number\">2</span>) + result;</span><br><span class=\"line\">        n /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">binaryToDecimal</span><span class=\"params\">(string binary)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> c : binary) &#123;</span><br><span class=\"line\">        result = result * <span class=\"number\">2</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-排列组合\"><a href=\"#10-排列组合\" class=\"headerlink\" title=\"10. 排列组合\"></a>10. 排列组合</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 计算组合数 C(n,m)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"title\">combination</span><span class=\"params\">(<span class=\"type\">int</span> n, <span class=\"type\">int</span> m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m &gt; n - m) m = n - m;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> result = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        result = result * (n - i) / (i + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"资料汇总","date":"2025-08-04T14:49:10.000Z","_content":"\n\n- 作者blog：[jx's blog](https://jaxon1216.github.io/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n\n---\n- 本文件是除了群文件内容，本人用过的链接形式的资料  \n- 所有售卖行为都与本人无关，如若遇到倒卖行为请联系我 q2392452065  \n- 群文件展示（后续会更新外刊等）q群号1046446925  \n \n\n![](/img/test.png)\n\n\n# English\n- 史上最全 极力推荐！！！\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n---\n\n\n# Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n\n\n# 数学建模这一块\n- **较全的资源**  \n  `链接:` https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef  \n  `提取码:` u7ef  \n  （复制这段内容后打开百度网盘手机App，操作更方便哦）\n\n- **大师兄数学建模**  \n  `链接：`https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA  \n  `提取码：`3xjx\n\n- **清风数学建模**  \n  `论文课件下载链接：`  \n  https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9  \n  `提取码:` jmz9 \n\n- **建模老哥**  \n  `数学建模算法、编程、写作课件`  \n  `链接:` https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020  \n  `提取码:` 1020 \n\n# mathmatics\n- 除了群文件的，本人略有一些成果：  \n  【腾讯文档】高等数学上册思维导图及公式汇总  \n  `链接：`https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind  \n  > 禁二传\n\n- **26张宇基础30讲**  \n  复制整段内容，打开最新版「夸克APP」即可获取  \n  `链接：`https://pan.quark.cn/s/4c425e839d51\n\n- **考研真相**  \n  `链接:` https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA  \n  `提取码:` euas\n\n- **660**\n  `链接：`https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\n  \n# 保研这一块\n\n- 夏令营和预推免通知网站（通知全量实时更新）：  \n  `Github：`  \n  https://github.com/shenyanpai/awesome-summer-camp-2025  \n  `Gitee：`  \n  https://gitee.com/shenyanpai/awesome-summer-camp-2025\n\n","source":"_posts/资料汇总.md","raw":"---\ntitle: 资料汇总\ndate: 2025-08-04 22:49:10\ncategories:\n  - study\ntags:\n  - 资料汇总\n  - 学习资源\n  - 编程\n  - 数学建模\n  - 英语\n  - 保研\n---\n\n\n- 作者blog：[jx's blog](https://jaxon1216.github.io/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n\n---\n- 本文件是除了群文件内容，本人用过的链接形式的资料  \n- 所有售卖行为都与本人无关，如若遇到倒卖行为请联系我 q2392452065  \n- 群文件展示（后续会更新外刊等）q群号1046446925  \n \n\n![](/img/test.png)\n\n\n# English\n- 史上最全 极力推荐！！！\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n---\n\n\n# Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n\n\n# 数学建模这一块\n- **较全的资源**  \n  `链接:` https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef  \n  `提取码:` u7ef  \n  （复制这段内容后打开百度网盘手机App，操作更方便哦）\n\n- **大师兄数学建模**  \n  `链接：`https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA  \n  `提取码：`3xjx\n\n- **清风数学建模**  \n  `论文课件下载链接：`  \n  https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9  \n  `提取码:` jmz9 \n\n- **建模老哥**  \n  `数学建模算法、编程、写作课件`  \n  `链接:` https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020  \n  `提取码:` 1020 \n\n# mathmatics\n- 除了群文件的，本人略有一些成果：  \n  【腾讯文档】高等数学上册思维导图及公式汇总  \n  `链接：`https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind  \n  > 禁二传\n\n- **26张宇基础30讲**  \n  复制整段内容，打开最新版「夸克APP」即可获取  \n  `链接：`https://pan.quark.cn/s/4c425e839d51\n\n- **考研真相**  \n  `链接:` https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA  \n  `提取码:` euas\n\n- **660**\n  `链接：`https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\n  \n# 保研这一块\n\n- 夏令营和预推免通知网站（通知全量实时更新）：  \n  `Github：`  \n  https://github.com/shenyanpai/awesome-summer-camp-2025  \n  `Gitee：`  \n  https://gitee.com/shenyanpai/awesome-summer-camp-2025\n\n","slug":"资料汇总","published":1,"updated":"2025-09-10T05:34:05.739Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5cp1000i9c9k14qn1uq8","content":"<ul>\n<li>作者blog：<a href=\"https://jaxon1216.github.io/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<hr>\n<ul>\n<li>本文件是除了群文件内容，本人用过的链接形式的资料  </li>\n<li>所有售卖行为都与本人无关，如若遇到倒卖行为请联系我 q2392452065  </li>\n<li>群文件展示（后续会更新外刊等）q群号1046446925</li>\n</ul>\n<p><img src=\"/img/test.png\"></p>\n<h1 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h1><ul>\n<li>史上最全 极力推荐！！！<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<hr>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"数学建模这一块\"><a href=\"#数学建模这一块\" class=\"headerlink\" title=\"数学建模这一块\"></a>数学建模这一块</h1><ul>\n<li><p><strong>较全的资源</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef\">https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef</a><br><code>提取码:</code> u7ef<br>（复制这段内容后打开百度网盘手机App，操作更方便哦）</p>\n</li>\n<li><p><strong>大师兄数学建模</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA\">https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA</a><br><code>提取码：</code>3xjx</p>\n</li>\n<li><p><strong>清风数学建模</strong><br><code>论文课件下载链接：</code><br><a href=\"https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9\">https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9</a><br><code>提取码:</code> jmz9 </p>\n</li>\n<li><p><strong>建模老哥</strong><br><code>数学建模算法、编程、写作课件</code><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020\">https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020</a><br><code>提取码:</code> 1020</p>\n</li>\n</ul>\n<h1 id=\"mathmatics\"><a href=\"#mathmatics\" class=\"headerlink\" title=\"mathmatics\"></a>mathmatics</h1><ul>\n<li><p>除了群文件的，本人略有一些成果：<br>【腾讯文档】高等数学上册思维导图及公式汇总<br><code>链接：</code><a href=\"https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind\">https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind</a>  </p>\n<blockquote>\n<p>禁二传</p>\n</blockquote>\n</li>\n<li><p><strong>26张宇基础30讲</strong><br>复制整段内容，打开最新版「夸克APP」即可获取<br><code>链接：</code><a href=\"https://pan.quark.cn/s/4c425e839d51\">https://pan.quark.cn/s/4c425e839d51</a></p>\n</li>\n<li><p><strong>考研真相</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA\">https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA</a><br><code>提取码:</code> euas</p>\n</li>\n<li><p><strong>660</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\">https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr</a></p>\n</li>\n</ul>\n<h1 id=\"保研这一块\"><a href=\"#保研这一块\" class=\"headerlink\" title=\"保研这一块\"></a>保研这一块</h1><ul>\n<li>夏令营和预推免通知网站（通知全量实时更新）：<br><code>Github：</code><br><a href=\"https://github.com/shenyanpai/awesome-summer-camp-2025\">https://github.com/shenyanpai/awesome-summer-camp-2025</a><br><code>Gitee：</code><br><a href=\"https://gitee.com/shenyanpai/awesome-summer-camp-2025\">https://gitee.com/shenyanpai/awesome-summer-camp-2025</a></li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>作者blog：<a href=\"https://jaxon1216.github.io/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<hr>\n<ul>\n<li>本文件是除了群文件内容，本人用过的链接形式的资料  </li>\n<li>所有售卖行为都与本人无关，如若遇到倒卖行为请联系我 q2392452065  </li>\n<li>群文件展示（后续会更新外刊等）q群号1046446925</li>\n</ul>\n<p><img src=\"/img/test.png\"></p>\n<h1 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h1><ul>\n<li>史上最全 极力推荐！！！<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<hr>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"数学建模这一块\"><a href=\"#数学建模这一块\" class=\"headerlink\" title=\"数学建模这一块\"></a>数学建模这一块</h1><ul>\n<li><p><strong>较全的资源</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef\">https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef</a><br><code>提取码:</code> u7ef<br>（复制这段内容后打开百度网盘手机App，操作更方便哦）</p>\n</li>\n<li><p><strong>大师兄数学建模</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA\">https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA</a><br><code>提取码：</code>3xjx</p>\n</li>\n<li><p><strong>清风数学建模</strong><br><code>论文课件下载链接：</code><br><a href=\"https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9\">https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9</a><br><code>提取码:</code> jmz9 </p>\n</li>\n<li><p><strong>建模老哥</strong><br><code>数学建模算法、编程、写作课件</code><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020\">https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020</a><br><code>提取码:</code> 1020</p>\n</li>\n</ul>\n<h1 id=\"mathmatics\"><a href=\"#mathmatics\" class=\"headerlink\" title=\"mathmatics\"></a>mathmatics</h1><ul>\n<li><p>除了群文件的，本人略有一些成果：<br>【腾讯文档】高等数学上册思维导图及公式汇总<br><code>链接：</code><a href=\"https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind\">https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind</a>  </p>\n<blockquote>\n<p>禁二传</p>\n</blockquote>\n</li>\n<li><p><strong>26张宇基础30讲</strong><br>复制整段内容，打开最新版「夸克APP」即可获取<br><code>链接：</code><a href=\"https://pan.quark.cn/s/4c425e839d51\">https://pan.quark.cn/s/4c425e839d51</a></p>\n</li>\n<li><p><strong>考研真相</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA\">https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA</a><br><code>提取码:</code> euas</p>\n</li>\n<li><p><strong>660</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\">https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr</a></p>\n</li>\n</ul>\n<h1 id=\"保研这一块\"><a href=\"#保研这一块\" class=\"headerlink\" title=\"保研这一块\"></a>保研这一块</h1><ul>\n<li>夏令营和预推免通知网站（通知全量实时更新）：<br><code>Github：</code><br><a href=\"https://github.com/shenyanpai/awesome-summer-camp-2025\">https://github.com/shenyanpai/awesome-summer-camp-2025</a><br><code>Gitee：</code><br><a href=\"https://gitee.com/shenyanpai/awesome-summer-camp-2025\">https://gitee.com/shenyanpai/awesome-summer-camp-2025</a></li>\n</ul>\n"},{"title":"confusion","date":"2025-08-28T07:20:10.000Z","_content":"\n## `return`、`break`、`return 0` 一看就懂\n\n### 一句话结论\n\n- 在 `void` 函数里用 `return;` 直接结束函数。\n- `break;` 只退出当前循环/`switch`，函数还会继续往下执行。\n- `return 0;` 是“有返回值的函数”返回整数 0。\n\n### 最小示例\n\n```cpp\nvoid LinkedList::ascinsert(eleType value) {\n    if (size == 0) {\n        insert(0, value);\n        return;                 // 提前结束整个函数\n    }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i) {\n        if (value <= curr->data) {\n            insert(i, value);\n            return;             // 找到位置后直接结束函数\n        }\n        curr = curr->next;\n    }\n    insert(size, value);\n}\n```\n\n### 如果把第二个 `return` 换成 `break` 会怎样？\n\n```cpp\nvoid LinkedList::ascinsert(eleType value){\n    if (size == 0) { insert(0, value); return; }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i){\n        if (value <= curr->data){\n            insert(i, value);\n            break;              // 只跳出 for 循环\n        }\n        curr = curr->next;\n    }\n    insert(size, value);        // 仍会执行 → 造成重复插入\n}\n```\n\n- 核心原因：`break` 只离开循环，函数没有结束；而 `return` 结束整个函数。\n\n### `return;` 和 `return 0;`\n\n- `return 0;`：用于有返回值的函数，返回整数 0。\n- `return;`：用于 `void` 函数，只退出函数，不返回值。\n\n```cpp\nint main() { return 0; }\nint add(int a, int b) { return a + b; }\nvoid ascinsert(eleType v) { /* ... */ return; }\n```\n\n### 速查表\n\n| 语句        | 适用场景           | 作用                    |\n| ----------- | ------------------ | ----------------------- |\n| `break;`    | 循环或 `switch` 内 | 跳出当前循环/`switch`   |\n| `return;`   | `void` 函数        | 立即结束整个函数        |\n| `return 0;` | 返回 `int` 的函数  | 结束函数并返回 `0`      |\n","source":"_posts/遇到的问题.md","raw":"---\ntitle: confusion\ndate: 2025-08-28 15:20:10\ncategories:\n  - study\ntags:\n  - C++\n  - \n---\n\n## `return`、`break`、`return 0` 一看就懂\n\n### 一句话结论\n\n- 在 `void` 函数里用 `return;` 直接结束函数。\n- `break;` 只退出当前循环/`switch`，函数还会继续往下执行。\n- `return 0;` 是“有返回值的函数”返回整数 0。\n\n### 最小示例\n\n```cpp\nvoid LinkedList::ascinsert(eleType value) {\n    if (size == 0) {\n        insert(0, value);\n        return;                 // 提前结束整个函数\n    }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i) {\n        if (value <= curr->data) {\n            insert(i, value);\n            return;             // 找到位置后直接结束函数\n        }\n        curr = curr->next;\n    }\n    insert(size, value);\n}\n```\n\n### 如果把第二个 `return` 换成 `break` 会怎样？\n\n```cpp\nvoid LinkedList::ascinsert(eleType value){\n    if (size == 0) { insert(0, value); return; }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i){\n        if (value <= curr->data){\n            insert(i, value);\n            break;              // 只跳出 for 循环\n        }\n        curr = curr->next;\n    }\n    insert(size, value);        // 仍会执行 → 造成重复插入\n}\n```\n\n- 核心原因：`break` 只离开循环，函数没有结束；而 `return` 结束整个函数。\n\n### `return;` 和 `return 0;`\n\n- `return 0;`：用于有返回值的函数，返回整数 0。\n- `return;`：用于 `void` 函数，只退出函数，不返回值。\n\n```cpp\nint main() { return 0; }\nint add(int a, int b) { return a + b; }\nvoid ascinsert(eleType v) { /* ... */ return; }\n```\n\n### 速查表\n\n| 语句        | 适用场景           | 作用                    |\n| ----------- | ------------------ | ----------------------- |\n| `break;`    | 循环或 `switch` 内 | 跳出当前循环/`switch`   |\n| `return;`   | `void` 函数        | 立即结束整个函数        |\n| `return 0;` | 返回 `int` 的函数  | 结束函数并返回 `0`      |\n","slug":"遇到的问题","published":1,"updated":"2025-09-10T05:34:05.740Z","comments":1,"layout":"post","photos":[],"_id":"cmfdk5cp3000n9c9kfc3x7shc","content":"<h2 id=\"return、break、return-0-一看就懂\"><a href=\"#return、break、return-0-一看就懂\" class=\"headerlink\" title=\"return、break、return 0 一看就懂\"></a><code>return</code>、<code>break</code>、<code>return 0</code> 一看就懂</h2><h3 id=\"一句话结论\"><a href=\"#一句话结论\" class=\"headerlink\" title=\"一句话结论\"></a>一句话结论</h3><ul>\n<li>在 <code>void</code> 函数里用 <code>return;</code> 直接结束函数。</li>\n<li><code>break;</code> 只退出当前循环&#x2F;<code>switch</code>，函数还会继续往下执行。</li>\n<li><code>return 0;</code> 是“有返回值的函数”返回整数 0。</li>\n</ul>\n<h3 id=\"最小示例\"><a href=\"#最小示例\" class=\"headerlink\" title=\"最小示例\"></a>最小示例</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;                 <span class=\"comment\">// 提前结束整个函数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;             <span class=\"comment\">// 找到位置后直接结束函数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果把第二个-return-换成-break-会怎样？\"><a href=\"#如果把第二个-return-换成-break-会怎样？\" class=\"headerlink\" title=\"如果把第二个 return 换成 break 会怎样？\"></a>如果把第二个 <code>return</code> 换成 <code>break</code> 会怎样？</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123; <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;              <span class=\"comment\">// 只跳出 for 循环</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);        <span class=\"comment\">// 仍会执行 → 造成重复插入</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>核心原因：<code>break</code> 只离开循环，函数没有结束；而 <code>return</code> 结束整个函数。</li>\n</ul>\n<h3 id=\"return-和-return-0\"><a href=\"#return-和-return-0\" class=\"headerlink\" title=\"return; 和 return 0;\"></a><code>return;</code> 和 <code>return 0;</code></h3><ul>\n<li><code>return 0;</code>：用于有返回值的函数，返回整数 0。</li>\n<li><code>return;</code>：用于 <code>void</code> 函数，只退出函数，不返回值。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ascinsert</span><span class=\"params\">(eleType v)</span> </span>&#123; <span class=\"comment\">/* ... */</span> <span class=\"keyword\">return</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"速查表\"><a href=\"#速查表\" class=\"headerlink\" title=\"速查表\"></a>速查表</h3><table>\n<thead>\n<tr>\n<th>语句</th>\n<th>适用场景</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>break;</code></td>\n<td>循环或 <code>switch</code> 内</td>\n<td>跳出当前循环&#x2F;<code>switch</code></td>\n</tr>\n<tr>\n<td><code>return;</code></td>\n<td><code>void</code> 函数</td>\n<td>立即结束整个函数</td>\n</tr>\n<tr>\n<td><code>return 0;</code></td>\n<td>返回 <code>int</code> 的函数</td>\n<td>结束函数并返回 <code>0</code></td>\n</tr>\n</tbody></table>\n","excerpt":"","more":"<h2 id=\"return、break、return-0-一看就懂\"><a href=\"#return、break、return-0-一看就懂\" class=\"headerlink\" title=\"return、break、return 0 一看就懂\"></a><code>return</code>、<code>break</code>、<code>return 0</code> 一看就懂</h2><h3 id=\"一句话结论\"><a href=\"#一句话结论\" class=\"headerlink\" title=\"一句话结论\"></a>一句话结论</h3><ul>\n<li>在 <code>void</code> 函数里用 <code>return;</code> 直接结束函数。</li>\n<li><code>break;</code> 只退出当前循环&#x2F;<code>switch</code>，函数还会继续往下执行。</li>\n<li><code>return 0;</code> 是“有返回值的函数”返回整数 0。</li>\n</ul>\n<h3 id=\"最小示例\"><a href=\"#最小示例\" class=\"headerlink\" title=\"最小示例\"></a>最小示例</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;                 <span class=\"comment\">// 提前结束整个函数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;             <span class=\"comment\">// 找到位置后直接结束函数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果把第二个-return-换成-break-会怎样？\"><a href=\"#如果把第二个-return-换成-break-会怎样？\" class=\"headerlink\" title=\"如果把第二个 return 换成 break 会怎样？\"></a>如果把第二个 <code>return</code> 换成 <code>break</code> 会怎样？</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123; <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;              <span class=\"comment\">// 只跳出 for 循环</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);        <span class=\"comment\">// 仍会执行 → 造成重复插入</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>核心原因：<code>break</code> 只离开循环，函数没有结束；而 <code>return</code> 结束整个函数。</li>\n</ul>\n<h3 id=\"return-和-return-0\"><a href=\"#return-和-return-0\" class=\"headerlink\" title=\"return; 和 return 0;\"></a><code>return;</code> 和 <code>return 0;</code></h3><ul>\n<li><code>return 0;</code>：用于有返回值的函数，返回整数 0。</li>\n<li><code>return;</code>：用于 <code>void</code> 函数，只退出函数，不返回值。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ascinsert</span><span class=\"params\">(eleType v)</span> </span>&#123; <span class=\"comment\">/* ... */</span> <span class=\"keyword\">return</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"速查表\"><a href=\"#速查表\" class=\"headerlink\" title=\"速查表\"></a>速查表</h3><table>\n<thead>\n<tr>\n<th>语句</th>\n<th>适用场景</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>break;</code></td>\n<td>循环或 <code>switch</code> 内</td>\n<td>跳出当前循环&#x2F;<code>switch</code></td>\n</tr>\n<tr>\n<td><code>return;</code></td>\n<td><code>void</code> 函数</td>\n<td>立即结束整个函数</td>\n</tr>\n<tr>\n<td><code>return 0;</code></td>\n<td>返回 <code>int</code> 的函数</td>\n<td>结束函数并返回 <code>0</code></td>\n</tr>\n</tbody></table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmfdk5coi00019c9k1kg2eo2t","category_id":"cmfdk5coq00049c9k9irg69ef","_id":"cmfdk5cp2000k9c9k383m57c6"},{"post_id":"cmfdk5com00039c9k74hd00dm","category_id":"cmfdk5coq00049c9k9irg69ef","_id":"cmfdk5cp9000o9c9k20yh18ur"},{"post_id":"cmfdk5cp3000n9c9kfc3x7shc","category_id":"cmfdk5cp2000j9c9k4y0o9za3","_id":"cmfdk5cpa000t9c9kbuah5s4j"},{"post_id":"cmfdk5cou00079c9khruw569x","category_id":"cmfdk5cp2000j9c9k4y0o9za3","_id":"cmfdk5cpb000w9c9k5upu677l"},{"post_id":"cmfdk5cov00099c9kgu48b6ve","category_id":"cmfdk5cp2000j9c9k4y0o9za3","_id":"cmfdk5cpb000z9c9kgaoub0uj"},{"post_id":"cmfdk5cox000b9c9k7o03802g","category_id":"cmfdk5cp2000j9c9k4y0o9za3","_id":"cmfdk5cpc00129c9kdo5g4agi"},{"post_id":"cmfdk5cp0000g9c9k8kwb7qm3","category_id":"cmfdk5cp2000j9c9k4y0o9za3","_id":"cmfdk5cpc00159c9k1qa34bqv"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","category_id":"cmfdk5cp2000j9c9k4y0o9za3","_id":"cmfdk5cpd00189c9k6txc0u0b"}],"PostTag":[{"post_id":"cmfdk5coi00019c9k1kg2eo2t","tag_id":"cmfdk5cot00059c9k4fwgaswb","_id":"cmfdk5coz000e9c9k8s0v844e"},{"post_id":"cmfdk5com00039c9k74hd00dm","tag_id":"cmfdk5cot00059c9k4fwgaswb","_id":"cmfdk5cp3000m9c9k0p3egdns"},{"post_id":"cmfdk5cp3000n9c9kfc3x7shc","tag_id":"cmfdk5cp2000l9c9kdvxh11ea","_id":"cmfdk5cpa000r9c9k5lkq111q"},{"post_id":"cmfdk5cou00079c9khruw569x","tag_id":"cmfdk5cp2000l9c9kdvxh11ea","_id":"cmfdk5cpa000s9c9kctgn87qp"},{"post_id":"cmfdk5cov00099c9kgu48b6ve","tag_id":"cmfdk5cp9000q9c9kd3didvcr","_id":"cmfdk5cpb000x9c9khatd84q0"},{"post_id":"cmfdk5cox000b9c9k7o03802g","tag_id":"cmfdk5cp2000l9c9kdvxh11ea","_id":"cmfdk5cpc00149c9k48nc964o"},{"post_id":"cmfdk5cox000b9c9k7o03802g","tag_id":"cmfdk5cpb00109c9k2k467ppp","_id":"cmfdk5cpc00169c9k0cu8a3xy"},{"post_id":"cmfdk5cp0000g9c9k8kwb7qm3","tag_id":"cmfdk5cp2000l9c9kdvxh11ea","_id":"cmfdk5cpd001a9c9k2wsk7362"},{"post_id":"cmfdk5cp0000g9c9k8kwb7qm3","tag_id":"cmfdk5cpc00179c9k7xqi60qh","_id":"cmfdk5cpd001b9c9k9clqcqv4"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","tag_id":"cmfdk5cpd00199c9kfjxy66bq","_id":"cmfdk5cpf001h9c9k20rmb7e6"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","tag_id":"cmfdk5cpd001c9c9k7n8x4ssv","_id":"cmfdk5cpf001i9c9k69a29bt9"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","tag_id":"cmfdk5cpe001d9c9k2ien8hua","_id":"cmfdk5cpf001j9c9k8lsr969j"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","tag_id":"cmfdk5cpe001e9c9kfk12htw4","_id":"cmfdk5cpf001k9c9k41xwggc5"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","tag_id":"cmfdk5cpe001f9c9k5ff1bn3q","_id":"cmfdk5cpf001l9c9k0lfk8og1"},{"post_id":"cmfdk5cp1000i9c9k14qn1uq8","tag_id":"cmfdk5cpe001g9c9kgjqc77rc","_id":"cmfdk5cpf001m9c9k2rhybp9a"}],"Tag":[{"name":"学习记录","_id":"cmfdk5cot00059c9k4fwgaswb"},{"name":"C++","_id":"cmfdk5cp2000l9c9kdvxh11ea"},{"name":"资料","_id":"cmfdk5cp9000q9c9kd3didvcr"},{"name":"题目集","_id":"cmfdk5cpb00109c9k2k467ppp"},{"name":"洛谷","_id":"cmfdk5cpc00179c9k7xqi60qh"},{"name":"资料汇总","_id":"cmfdk5cpd00199c9kfjxy66bq"},{"name":"学习资源","_id":"cmfdk5cpd001c9c9k7n8x4ssv"},{"name":"编程","_id":"cmfdk5cpe001d9c9k2ien8hua"},{"name":"数学建模","_id":"cmfdk5cpe001e9c9kfk12htw4"},{"name":"英语","_id":"cmfdk5cpe001f9c9k5ff1bn3q"},{"name":"保研","_id":"cmfdk5cpe001g9c9kgjqc77rc"}]}}