{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":0},{"_id":"source/img/math.png","path":"img/math.png","modified":0,"renderable":0},{"_id":"source/img/test.png","path":"img/test.png","modified":0,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"source/img/linkformatbf.png","path":"img/linkformatbf.png","modified":0,"renderable":0},{"_id":"source/img/linkformataf.png","path":"img/linkformataf.png","modified":0,"renderable":0},{"_id":"source/img/SJTUmanual.png","path":"img/SJTUmanual.png","modified":0,"renderable":0},{"_id":"source/img/gaflowchart.png","path":"img/gaflowchart.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/Sophomore 1st Sem.md","hash":"96af92ce3b86df0689c5ed4764d80a270407de07","modified":1760103598096},{"_id":"source/_posts/vercel-hexo-github-auto-deploy.md","hash":"69ad25b42e79fa47043e1309500dd76efb4f436c","modified":1759070854556},{"_id":"source/_posts/confusion.md","hash":"4cf187bad496e863671c971b7220dfefb235abea","modified":1758261459666},{"_id":"source/_posts/tools.md","hash":"0fddb9d9e1761d6b34b68a0f48d7d2b8a75275fd","modified":1760021451911},{"_id":"source/about/index.md","hash":"04121a5f997612414133e43fadacfe763f34d464","modified":1757563388436},{"_id":"source/books/index.md","hash":"ea659e47c3bdf4deafa957e17472848cbe009759","modified":1757482445742},{"_id":"source/_posts/study-materials.md","hash":"b8332ecd087f02d68fd474b5c98ce361f65fae3d","modified":1760075416640},{"_id":"source/links/index.md","hash":"d8ffbb159db78f088da96f2a689052e84d57c78a","modified":1757482445807},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1757564914110},{"_id":"source/archives/index.md","hash":"63644c52b6b6282cc9c881674403b69cab4832eb","modified":1757482445741},{"_id":"source/tags/index.md","hash":"539ac4465f170bee4418eb813beeff978ffc69c1","modified":1757482445810},{"_id":"source/categories/index.md","hash":"8a3af0700db0610249988f28c1fc15a9e71559dd","modified":1757482445743},{"_id":"source/_posts/.vercel-hexo-github-auto-deploy.pdf.md5","hash":"9289c75d3367ffb033ae20038c3de52562655440","modified":1758454569266},{"_id":"source/_posts/August.md","hash":"c6a59888d7ef5dadc71d16a38471dcd299700ee6","modified":1757482445735},{"_id":"source/img/test.png","hash":"4a24fa814071da9a6799a423dee8891acbd2cf49","modified":1757482445805},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1757482446364},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1757482446364},{"_id":"themes/pure/README.cn.md","hash":"ddf15a1feb7a2630210aae0528df3504fca23b5e","modified":1757482446365},{"_id":"themes/pure/_config.yml","hash":"6f4114ea3af07675fec0f26b1de5ac9d84f01934","modified":1760267622727},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1757482446366},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1757482446367},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1757482446417},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1757482446372},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1757482446372},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1757482446373},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1757482446373},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1757482446411},{"_id":"themes/pure/layout/archive.ejs","hash":"0e9e67a82202ca3971be59579744d43ec6696bbf","modified":1757482446411},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1757482446412},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1757482446414},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1757482446414},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1757482446414},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1757482446412},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1757482446413},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1757482446415},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1757482446416},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1757482446416},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1757482446413},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1757482446415},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1757482446447},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1757482446452},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1757482446368},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1757482446367},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1757482446368},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1757482446363},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1757482446362},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1757482446369},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1757482446370},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1757482446363},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1757482446369},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1757482446371},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1757482446371},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1757482446375},{"_id":"themes/pure/layout/_common/header.ejs","hash":"5c1c3461f6781018e87abfde264c1164413625f2","modified":1757482446376},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"4e4c7e93ac39545a34134228b463658516f28eb7","modified":1757482446374},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1757482446376},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1757482446371},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1757482446378},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1757482446378},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a9ef77165f459ecdf2dcd3397ca04abbeb560d1f","modified":1757482446377},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1757482446379},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"1081974f182e8e1ce452d701b8f6575b6dc45b0c","modified":1757482446379},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1757482446381},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1757482446382},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"3464682ae0359ba23034ac40e8153699c37fb7be","modified":1757482446380},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1757482446380},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1757482446382},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1757482446381},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"c792537723b59f437967262c9575a20fac02e911","modified":1757482446383},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"46da1ee327b8af107335146bd8fc131eee6c9c4f","modified":1757482446391},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"2f3790257d6ad07fdad2043b27950842c9011daa","modified":1757482446383},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"fa9e2041c4a6e03f566545db1385c5ae1a80f879","modified":1757482446391},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1757482446404},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1757482446392},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1757482446407},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1757482446405},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1757482446405},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1757482446406},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1757482446408},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1757482446409},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1757482446406},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1757482446407},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1757482446409},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1757482446400},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1757482446410},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1757482446403},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"ee21c4e7ccac26ff2ab6d1d178447fd11fea4d7e","modified":1757482446401},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1757482446401},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1757482446404},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"32f0ac36fa68d8786506957338e552661f2f809c","modified":1757482446403},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1757482446452},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1757482446453},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1757482446402},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1757482446468},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1757482446469},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1757482446458},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1757482446469},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1757482446457},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1757482446402},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1757482446384},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1757482446385},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1757482446386},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1757482446386},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1757482446387},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"15f86fb01e64e784f27dfa2671a9db7c107f1633","modified":1757482446385},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"fcbe3695ae9b164a4a2d27a66a6827dcf3ee76f1","modified":1757482446387},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1757482446389},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1757482446388},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1757482446390},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1757482446389},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1757482446388},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1757482446394},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1757482446392},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"d1379e4ef5863dcc6ed133579c1f0cd254f374ce","modified":1758185295224},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1757482446395},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1757482446393},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"de4c43d3056825c14283fe426b8cc677dea59617","modified":1757482446395},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1757482446396},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1757482446396},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1757482446397},{"_id":"themes/pure/layout/_script/_repository/gitee.ejs","hash":"0e1ecabe809f149ebe3ce3ac393f6e6155dd6780","modified":1757482446398},{"_id":"themes/pure/layout/_script/_repository/github.ejs","hash":"a4762135de6816c85156e85886f50fb32b0adc89","modified":1757482446398},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1757482446400},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1757482446399},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1757482446466},{"_id":"themes/pure/layout/_script/_repository/legacy.ejs","hash":"b5e5c666e89550abb5004e35c7ef165c6edab62d","modified":1757482446399},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1757482446464},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1757482446465},{"_id":"source/img/math.png","hash":"49654576ea90732f89ba1e09f6609033722bca57","modified":1757482445801},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1757482446466},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1757482446467},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1757482446419},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1757482446422},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1757482446420},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1757482446424},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1757482446426},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1757482446473},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1757482446471},{"_id":"themes/pure/source/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1757482446449},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1757482446477},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1757482446475},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1757482446456},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1757482446451},{"_id":"source/_posts/vercel-hexo-github-auto-deploy.pdf","hash":"670793ee02efdfe09cd38081bf1f567c64c2b557","modified":1758164457877},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1757482446446},{"_id":"source/img/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757482445795},{"_id":"themes/pure/source/images/avatar.png","hash":"41c2f8050ed9651c95fb8653bc1eed95c2cdc932","modified":1757482446462},{"_id":"source/_posts/Nature-of-University.md","hash":"71cc78b63c142cb7e9cca8b81d8c2927cc065596","modified":1759570361677},{"_id":"source/_posts/blog-stuff.md","hash":"8bb0e7022486f90902e763f71813852ee4bab7c5","modified":1760266952935},{"_id":"source/.DS_Store","hash":"a358284b3db12f2266799053ce385eb189fdaf0a","modified":1759646195111},{"_id":"source/img/linkformatbf.png","hash":"ab25f35083ac37af65c7de5866c58f46689805a3","modified":1759478276320},{"_id":"source/img/linkformataf.png","hash":"ab43d004cf0e32df4d76a869a916966991dc8f06","modified":1759484260051},{"_id":"source/img/SJTUmanual.png","hash":"3f2ce16b8adb99acbc7c43bc4e23201b2c9ba938","modified":1759487790006},{"_id":"source/img/gaflowchart.png","hash":"23db3ac9461f79cdd278c935fa730fbb655d2687","modified":1759646152093},{"_id":"source/img/.DS_Store","hash":"6adb20d85d39ff394160843e528a4eda92d49eb8","modified":1759646289525}],"Category":[{"name":"diary","_id":"cmg0gdxzj0004k49k0cef7nyv"},{"name":"study","_id":"cmg0gdy02000ck49k54lzegbr"},{"name":"技术","_id":"cmg0gdy0i000ok49kf44f57u0"}],"Data":[],"Page":[{"title":"about","date":"2025-08-03T12:40:48.000Z","_content":"欢迎来到我的博客！","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-08-03 20:40:48\n---\n欢迎来到我的博客！","updated":"2025-09-11T04:03:08.436Z","path":"about/index.html","comments":1,"layout":"page","_id":"cmg0gdxyv0000k49kcncaejyc","content":"<p>欢迎来到我的博客！</p>\n","excerpt":"","more":"<p>欢迎来到我的博客！</p>\n"},{"title":"Books","date":"2024-12-31T16:00:00.000Z","type":"books","_content":" \n\n## 📚 我的书单推荐\n\n### 个人成长\n- **[High Agency](https://www.highagency.com/)** - 21世纪最重要的思维模式：高主动性思维，教你如何成为\"发生在生活中\"而非\"被生活发生\"的人\n\n\n### 数学类\n- **考研数学你真的掌握了吗全套** - 张杨文博士匠心之作\n\n\n### 技术类书籍\n- 暂无\n\n\n\n---\n*最后更新：2025年8月*\n","source":"books/index.md","raw":"---\ntitle: Books\ndate: 2025-01-01 00:00:00\ntype: books\n--- \n\n## 📚 我的书单推荐\n\n### 个人成长\n- **[High Agency](https://www.highagency.com/)** - 21世纪最重要的思维模式：高主动性思维，教你如何成为\"发生在生活中\"而非\"被生活发生\"的人\n\n\n### 数学类\n- **考研数学你真的掌握了吗全套** - 张杨文博士匠心之作\n\n\n### 技术类书籍\n- 暂无\n\n\n\n---\n*最后更新：2025年8月*\n","updated":"2025-09-10T05:34:05.742Z","path":"books/index.html","comments":1,"layout":"page","_id":"cmg0gdxzd0002k49kgyui2zgq","content":"<h2 id=\"📚-我的书单推荐\"><a href=\"#📚-我的书单推荐\" class=\"headerlink\" title=\"📚 我的书单推荐\"></a>📚 我的书单推荐</h2><h3 id=\"个人成长\"><a href=\"#个人成长\" class=\"headerlink\" title=\"个人成长\"></a>个人成长</h3><ul>\n<li><strong><a href=\"https://www.highagency.com/\">High Agency</a></strong> - 21世纪最重要的思维模式：高主动性思维，教你如何成为”发生在生活中”而非”被生活发生”的人</li>\n</ul>\n<h3 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h3><ul>\n<li><strong>考研数学你真的掌握了吗全套</strong> - 张杨文博士匠心之作</li>\n</ul>\n<h3 id=\"技术类书籍\"><a href=\"#技术类书籍\" class=\"headerlink\" title=\"技术类书籍\"></a>技术类书籍</h3><ul>\n<li>暂无</li>\n</ul>\n<hr>\n<p><em>最后更新：2025年8月</em></p>\n","excerpt":"","more":"<h2 id=\"📚-我的书单推荐\"><a href=\"#📚-我的书单推荐\" class=\"headerlink\" title=\"📚 我的书单推荐\"></a>📚 我的书单推荐</h2><h3 id=\"个人成长\"><a href=\"#个人成长\" class=\"headerlink\" title=\"个人成长\"></a>个人成长</h3><ul>\n<li><strong><a href=\"https://www.highagency.com/\">High Agency</a></strong> - 21世纪最重要的思维模式：高主动性思维，教你如何成为”发生在生活中”而非”被生活发生”的人</li>\n</ul>\n<h3 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h3><ul>\n<li><strong>考研数学你真的掌握了吗全套</strong> - 张杨文博士匠心之作</li>\n</ul>\n<h3 id=\"技术类书籍\"><a href=\"#技术类书籍\" class=\"headerlink\" title=\"技术类书籍\"></a>技术类书籍</h3><ul>\n<li>暂无</li>\n</ul>\n<hr>\n<p><em>最后更新：2025年8月</em></p>\n"},{"title":"Archives","date":"2024-12-31T16:00:00.000Z","type":"archives","_content":"\n\n","source":"archives/index.md","raw":"---\ntitle: Archives\ndate: 2025-01-01 00:00:00\ntype: archives\n---\n\n\n","updated":"2025-09-10T05:34:05.741Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cmg0gdxzl0006k49k7pnpd85x","content":"","excerpt":"","more":""},{"title":"Links","date":"2024-12-31T16:00:00.000Z","type":"links","_content":" ","source":"links/index.md","raw":"---\ntitle: Links\ndate: 2025-01-01 00:00:00\ntype: links\n--- ","updated":"2025-09-10T05:34:05.807Z","path":"links/index.html","comments":1,"layout":"page","_id":"cmg0gdxzs0008k49k9s6g1yzg","content":"","excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2025-09-11T04:28:34.110Z","updated":"2025-09-11T04:28:34.110Z","path":"repository/index.html","_id":"cmg0gdy00000ak49k7rd7egtx","content":"","excerpt":"","more":""},{"title":"Tags","date":"2024-12-31T16:00:00.000Z","type":"tags","_content":" ","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2025-01-01 00:00:00\ntype: tags\n--- ","updated":"2025-09-10T05:34:05.810Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cmg0gdy0b000fk49k9riua8tz","content":"","excerpt":"","more":""},{"title":"Categories","date":"2024-12-31T16:00:00.000Z","type":"categories","_content":" \n \n","source":"categories/index.md","raw":"---\ntitle: Categories\ndate: 2025-01-01 00:00:00\ntype: categories\n--- \n \n","updated":"2025-09-10T05:34:05.743Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cmg0gdy0c000gk49kfse17e29","content":"","excerpt":"","more":""}],"Post":[{"title":"Sophomore 1st Sem","date":"2025-09-26T11:30:32.000Z","_content":"\n## 目录\n\n- [小目标](#Goals)\n- [十月记录](#October)\n- [九月记录](#september)\n\n\n# Goals:\n- 数据结构英雄课程过一遍，。\n- 按照雅思强度准备六级，包括口语。\n- 数学竞赛。\n- 11月六级 http://cet-bm.neea.edu.cn\n- 11月转专业https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\n\n\n\n# October\n\n| Date | Day | Math | Code | English | Outdoor | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-10-01 | Wednesday |2h 函数结束|1h 串源码复现理解|每日25min扇贝单词| | |\n| 2025-10-02 | Thursday |1.5h 数列结束|30min 串源码答疑/10min几个Linux命令/30min Google analysis，html学习材料准备|每日25min扇贝单词|没咋出宿舍| |\n| 2025-10-03 | Friday |2h 导数|2h link-format|每日25min扇贝单词|晚上散步30nin| |\n| 2025-10-04 | Saturday | |3h ga|每日25min扇贝单词|晚上出去跟室友搓了一顿| |\n| 2025-10-05 | Sunday |1.5h 三十讲|45min blog|每日25min扇贝单词| | |\n| 2025-10-06 | Monday |1.5h 三十讲| |每日25min扇贝单词| | |\n| 2025-10-07 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-08 | Wednesday | | |每日25min扇贝单词|1h 游泳| |\n| 2025-10-09 | Thursday |1h 三十讲| |每日25min扇贝单词| | |\n| 2025-10-10 | Friday |1.5h 一元微分，40min线代|2h 复杂度刷题，线性表看书 |每日25min扇贝单词| | |\n| 2025-10-11 | Saturday | | |每日25min扇贝单词| | |\n| 2025-10-12 | Sunday | | |每日25min扇贝单词| | |\n| 2025-10-13 | Monday | | |每日25min扇贝单词| | |\n| 2025-10-14 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-15 | Wednesday | | |每日25min扇贝单词| | |\n| 2025-10-16 | Thursday | | |每日25min扇贝单词| | |\n| 2025-10-17 | Friday | | |每日25min扇贝单词| | |\n| 2025-10-18 | Saturday | | |每日25min扇贝单词| | |\n| 2025-10-19 | Sunday | | |每日25min扇贝单词| | |\n| 2025-10-20 | Monday | | |每日25min扇贝单词| | |\n| 2025-10-21 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-22 | Wednesday | | |每日25min扇贝单词| | |\n| 2025-10-23 | Thursday | | |每日25min扇贝单词| | |\n| 2025-10-24 | Friday | | |每日25min扇贝单词| | |\n| 2025-10-25 | Saturday | | |每日25min扇贝单词| | |\n| 2025-10-26 | Sunday | | |每日25min扇贝单词| | |\n| 2025-10-27 | Monday | | |每日25min扇贝单词| | |\n| 2025-10-28 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-29 | Wednesday | | |每日25min扇贝单词| | |\n| 2025-10-30 | Thursday | | |每日25min扇贝单词| | |\n| 2025-10-31 | Friday | | |每日25min扇贝单词| | |\n\n\n# September\n\n| Date | Day | Math | Code | English | Outdoor | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-09-01 | Monday | 3h 线性表示，线性相关无关及其秩| | | 1.5h 游泳，还是没学会换气| |\n| 2025-09-02 | Tuesday | 3h 做题，线性方程组解的性质和判定| | 20min英语趣配音| 2h 俯卧撑100个，跑步4km| 明天一定早早起|\n| 2025-09-07 | Sunday | 3h 同解，特征值特征向量| | |游泳1.5h | |\n| 2025-09-08 | Monday | | |30min 英语单词 | | 做规划，学习如何利用Apple日历|\n| 2025-09-09 | Tuesday | | 3h 线性代数特征值特征向量| | 120 俯卧撑 60 臂力棒弯举| |\n| 2025-09-10 | Wednesday |1.5h 二次型| 5h pages迁移| 15min 单词| 60 深蹲 60弓步蹲 40 桥式| |\n| 2025-09-11 | Thursday | |3h 数据结构刷题|20min 单词|28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩| 要注意时间的利用率|\n| 2025-09-12 | Friday |40min 660| 4.5h 单向链表刷题| 记单词 跟读一集youtube| 1.5h 游泳 |要想弄明白什么是递归，那就先弄明白什么是递归|\n| 2025-09-13 | Saturday |1.3h 660|1.5h 栈模版代码|20min单词 20min YouTube跟读 | | |\n| 2025-09-15 | Monday |2h 660|1.5h 栈刷题| | | |\n| 2025-09-16 | Tuesday | | | | |全天课|\n| 2025-09-17 | Wednesday |1.3h 660|3.5h data structures|30min YouTube 15min 单词 | 20min jogging 60x深蹲 60x弓步蹲| 开始旷课|\n| 2025-09-18 | Thursday |40min 660 1.3h 30讲|3h 队列题|30min YouTube 15min 单词| |优化做题习惯|\n| 2025-09-19 | Friday |2h 30讲 |1.5h 数据结构| |5km 慢跑 | |\n| 2025-09-20 | Saturday | | | |1.5h 游泳| |\n| 2025-09-26 | Friday |1h 基础三十讲 |25min blog相关|24min 六级单词|4km 6分配| |\n| 2025-09-27 | Saturday | |25min blog |1h 英语配音 20min 单词 30min youtube| |昨晚宿舍集体熬夜早上起不来|\n| 2025-09-28 | Sunday |1.5h 基础30讲|30min blog 50min 串源码理解|30min单词 | | |\n| 2025-09-29 | Monday |2h 三十讲| 30min 串的存储结构，复杂度|30min 配音| | |\n| 2025-09-30 | Tuesday | 1.5h 三十讲| | | | |\n","source":"_posts/Sophomore 1st Sem.md","raw":"---\ntitle: Sophomore 1st Sem\ndate: 2025-09-26 19:30:32\ncategories: \n- diary\ntags:\n- 学习记录\n---\n\n## 目录\n\n- [小目标](#Goals)\n- [十月记录](#October)\n- [九月记录](#september)\n\n\n# Goals:\n- 数据结构英雄课程过一遍，。\n- 按照雅思强度准备六级，包括口语。\n- 数学竞赛。\n- 11月六级 http://cet-bm.neea.edu.cn\n- 11月转专业https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\n\n\n\n# October\n\n| Date | Day | Math | Code | English | Outdoor | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-10-01 | Wednesday |2h 函数结束|1h 串源码复现理解|每日25min扇贝单词| | |\n| 2025-10-02 | Thursday |1.5h 数列结束|30min 串源码答疑/10min几个Linux命令/30min Google analysis，html学习材料准备|每日25min扇贝单词|没咋出宿舍| |\n| 2025-10-03 | Friday |2h 导数|2h link-format|每日25min扇贝单词|晚上散步30nin| |\n| 2025-10-04 | Saturday | |3h ga|每日25min扇贝单词|晚上出去跟室友搓了一顿| |\n| 2025-10-05 | Sunday |1.5h 三十讲|45min blog|每日25min扇贝单词| | |\n| 2025-10-06 | Monday |1.5h 三十讲| |每日25min扇贝单词| | |\n| 2025-10-07 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-08 | Wednesday | | |每日25min扇贝单词|1h 游泳| |\n| 2025-10-09 | Thursday |1h 三十讲| |每日25min扇贝单词| | |\n| 2025-10-10 | Friday |1.5h 一元微分，40min线代|2h 复杂度刷题，线性表看书 |每日25min扇贝单词| | |\n| 2025-10-11 | Saturday | | |每日25min扇贝单词| | |\n| 2025-10-12 | Sunday | | |每日25min扇贝单词| | |\n| 2025-10-13 | Monday | | |每日25min扇贝单词| | |\n| 2025-10-14 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-15 | Wednesday | | |每日25min扇贝单词| | |\n| 2025-10-16 | Thursday | | |每日25min扇贝单词| | |\n| 2025-10-17 | Friday | | |每日25min扇贝单词| | |\n| 2025-10-18 | Saturday | | |每日25min扇贝单词| | |\n| 2025-10-19 | Sunday | | |每日25min扇贝单词| | |\n| 2025-10-20 | Monday | | |每日25min扇贝单词| | |\n| 2025-10-21 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-22 | Wednesday | | |每日25min扇贝单词| | |\n| 2025-10-23 | Thursday | | |每日25min扇贝单词| | |\n| 2025-10-24 | Friday | | |每日25min扇贝单词| | |\n| 2025-10-25 | Saturday | | |每日25min扇贝单词| | |\n| 2025-10-26 | Sunday | | |每日25min扇贝单词| | |\n| 2025-10-27 | Monday | | |每日25min扇贝单词| | |\n| 2025-10-28 | Tuesday | | |每日25min扇贝单词| | |\n| 2025-10-29 | Wednesday | | |每日25min扇贝单词| | |\n| 2025-10-30 | Thursday | | |每日25min扇贝单词| | |\n| 2025-10-31 | Friday | | |每日25min扇贝单词| | |\n\n\n# September\n\n| Date | Day | Math | Code | English | Outdoor | Note |\n|------|-----|------|------|---------|----------|------|\n| 2025-09-01 | Monday | 3h 线性表示，线性相关无关及其秩| | | 1.5h 游泳，还是没学会换气| |\n| 2025-09-02 | Tuesday | 3h 做题，线性方程组解的性质和判定| | 20min英语趣配音| 2h 俯卧撑100个，跑步4km| 明天一定早早起|\n| 2025-09-07 | Sunday | 3h 同解，特征值特征向量| | |游泳1.5h | |\n| 2025-09-08 | Monday | | |30min 英语单词 | | 做规划，学习如何利用Apple日历|\n| 2025-09-09 | Tuesday | | 3h 线性代数特征值特征向量| | 120 俯卧撑 60 臂力棒弯举| |\n| 2025-09-10 | Wednesday |1.5h 二次型| 5h pages迁移| 15min 单词| 60 深蹲 60弓步蹲 40 桥式| |\n| 2025-09-11 | Thursday | |3h 数据结构刷题|20min 单词|28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩| 要注意时间的利用率|\n| 2025-09-12 | Friday |40min 660| 4.5h 单向链表刷题| 记单词 跟读一集youtube| 1.5h 游泳 |要想弄明白什么是递归，那就先弄明白什么是递归|\n| 2025-09-13 | Saturday |1.3h 660|1.5h 栈模版代码|20min单词 20min YouTube跟读 | | |\n| 2025-09-15 | Monday |2h 660|1.5h 栈刷题| | | |\n| 2025-09-16 | Tuesday | | | | |全天课|\n| 2025-09-17 | Wednesday |1.3h 660|3.5h data structures|30min YouTube 15min 单词 | 20min jogging 60x深蹲 60x弓步蹲| 开始旷课|\n| 2025-09-18 | Thursday |40min 660 1.3h 30讲|3h 队列题|30min YouTube 15min 单词| |优化做题习惯|\n| 2025-09-19 | Friday |2h 30讲 |1.5h 数据结构| |5km 慢跑 | |\n| 2025-09-20 | Saturday | | | |1.5h 游泳| |\n| 2025-09-26 | Friday |1h 基础三十讲 |25min blog相关|24min 六级单词|4km 6分配| |\n| 2025-09-27 | Saturday | |25min blog |1h 英语配音 20min 单词 30min youtube| |昨晚宿舍集体熬夜早上起不来|\n| 2025-09-28 | Sunday |1.5h 基础30讲|30min blog 50min 串源码理解|30min单词 | | |\n| 2025-09-29 | Monday |2h 三十讲| 30min 串的存储结构，复杂度|30min 配音| | |\n| 2025-09-30 | Tuesday | 1.5h 三十讲| | | | |\n","slug":"Sophomore 1st Sem","published":1,"updated":"2025-10-10T13:39:58.096Z","_id":"cmg0gdxyy0001k49k2rdn2gbp","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#Goals\">小目标</a></li>\n<li><a href=\"#October\">十月记录</a></li>\n<li><a href=\"#september\">九月记录</a></li>\n</ul>\n<h1 id=\"Goals\"><a href=\"#Goals\" class=\"headerlink\" title=\"Goals:\"></a>Goals:</h1><ul>\n<li>数据结构英雄课程过一遍，。</li>\n<li>按照雅思强度准备六级，包括口语。</li>\n<li>数学竞赛。</li>\n<li>11月六级 <a href=\"http://cet-bm.neea.edu.cn/\">http://cet-bm.neea.edu.cn</a></li>\n<li>11月转专业<a href=\"https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\">https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml</a></li>\n</ul>\n<h1 id=\"October\"><a href=\"#October\" class=\"headerlink\" title=\"October\"></a>October</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Outdoor</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-10-01</td>\n<td>Wednesday</td>\n<td>2h 函数结束</td>\n<td>1h 串源码复现理解</td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-02</td>\n<td>Thursday</td>\n<td>1.5h 数列结束</td>\n<td>30min 串源码答疑&#x2F;10min几个Linux命令&#x2F;30min Google analysis，html学习材料准备</td>\n<td>每日25min扇贝单词</td>\n<td>没咋出宿舍</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-03</td>\n<td>Friday</td>\n<td>2h 导数</td>\n<td>2h link-format</td>\n<td>每日25min扇贝单词</td>\n<td>晚上散步30nin</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-04</td>\n<td>Saturday</td>\n<td></td>\n<td>3h ga</td>\n<td>每日25min扇贝单词</td>\n<td>晚上出去跟室友搓了一顿</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-05</td>\n<td>Sunday</td>\n<td>1.5h 三十讲</td>\n<td>45min blog</td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-06</td>\n<td>Monday</td>\n<td>1.5h 三十讲</td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-07</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-08</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td>1h 游泳</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-09</td>\n<td>Thursday</td>\n<td>1h 三十讲</td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-10</td>\n<td>Friday</td>\n<td>1.5h 一元微分，40min线代</td>\n<td>2h 复杂度刷题，线性表看书</td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-11</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-12</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-13</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-14</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-15</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-16</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-17</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-18</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-19</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-20</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-21</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-22</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-23</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-24</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-25</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-26</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-27</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-28</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-29</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-30</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-31</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"September\"><a href=\"#September\" class=\"headerlink\" title=\"September\"></a>September</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Outdoor</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-09-01</td>\n<td>Monday</td>\n<td>3h 线性表示，线性相关无关及其秩</td>\n<td></td>\n<td></td>\n<td>1.5h 游泳，还是没学会换气</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-02</td>\n<td>Tuesday</td>\n<td>3h 做题，线性方程组解的性质和判定</td>\n<td></td>\n<td>20min英语趣配音</td>\n<td>2h 俯卧撑100个，跑步4km</td>\n<td>明天一定早早起</td>\n</tr>\n<tr>\n<td>2025-09-07</td>\n<td>Sunday</td>\n<td>3h 同解，特征值特征向量</td>\n<td></td>\n<td></td>\n<td>游泳1.5h</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-08</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>30min 英语单词</td>\n<td></td>\n<td>做规划，学习如何利用Apple日历</td>\n</tr>\n<tr>\n<td>2025-09-09</td>\n<td>Tuesday</td>\n<td></td>\n<td>3h 线性代数特征值特征向量</td>\n<td></td>\n<td>120 俯卧撑 60 臂力棒弯举</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-10</td>\n<td>Wednesday</td>\n<td>1.5h 二次型</td>\n<td>5h pages迁移</td>\n<td>15min 单词</td>\n<td>60 深蹲 60弓步蹲 40 桥式</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-11</td>\n<td>Thursday</td>\n<td></td>\n<td>3h 数据结构刷题</td>\n<td>20min 单词</td>\n<td>28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩</td>\n<td>要注意时间的利用率</td>\n</tr>\n<tr>\n<td>2025-09-12</td>\n<td>Friday</td>\n<td>40min 660</td>\n<td>4.5h 单向链表刷题</td>\n<td>记单词 跟读一集youtube</td>\n<td>1.5h 游泳</td>\n<td>要想弄明白什么是递归，那就先弄明白什么是递归</td>\n</tr>\n<tr>\n<td>2025-09-13</td>\n<td>Saturday</td>\n<td>1.3h 660</td>\n<td>1.5h 栈模版代码</td>\n<td>20min单词 20min YouTube跟读</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-15</td>\n<td>Monday</td>\n<td>2h 660</td>\n<td>1.5h 栈刷题</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-16</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>全天课</td>\n</tr>\n<tr>\n<td>2025-09-17</td>\n<td>Wednesday</td>\n<td>1.3h 660</td>\n<td>3.5h data structures</td>\n<td>30min YouTube 15min 单词</td>\n<td>20min jogging 60x深蹲 60x弓步蹲</td>\n<td>开始旷课</td>\n</tr>\n<tr>\n<td>2025-09-18</td>\n<td>Thursday</td>\n<td>40min 660 1.3h 30讲</td>\n<td>3h 队列题</td>\n<td>30min YouTube 15min 单词</td>\n<td></td>\n<td>优化做题习惯</td>\n</tr>\n<tr>\n<td>2025-09-19</td>\n<td>Friday</td>\n<td>2h 30讲</td>\n<td>1.5h 数据结构</td>\n<td></td>\n<td>5km 慢跑</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-20</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td>1.5h 游泳</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-26</td>\n<td>Friday</td>\n<td>1h 基础三十讲</td>\n<td>25min blog相关</td>\n<td>24min 六级单词</td>\n<td>4km 6分配</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-27</td>\n<td>Saturday</td>\n<td></td>\n<td>25min blog</td>\n<td>1h 英语配音 20min 单词 30min youtube</td>\n<td></td>\n<td>昨晚宿舍集体熬夜早上起不来</td>\n</tr>\n<tr>\n<td>2025-09-28</td>\n<td>Sunday</td>\n<td>1.5h 基础30讲</td>\n<td>30min blog 50min 串源码理解</td>\n<td>30min单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-29</td>\n<td>Monday</td>\n<td>2h 三十讲</td>\n<td>30min 串的存储结构，复杂度</td>\n<td>30min 配音</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-30</td>\n<td>Tuesday</td>\n<td>1.5h 三十讲</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n","excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#Goals\">小目标</a></li>\n<li><a href=\"#October\">十月记录</a></li>\n<li><a href=\"#september\">九月记录</a></li>\n</ul>\n<h1 id=\"Goals\"><a href=\"#Goals\" class=\"headerlink\" title=\"Goals:\"></a>Goals:</h1><ul>\n<li>数据结构英雄课程过一遍，。</li>\n<li>按照雅思强度准备六级，包括口语。</li>\n<li>数学竞赛。</li>\n<li>11月六级 <a href=\"http://cet-bm.neea.edu.cn/\">http://cet-bm.neea.edu.cn</a></li>\n<li>11月转专业<a href=\"https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml\">https://jwc.cugb.edu.cn/c/2024-10-29/812158.shtml</a></li>\n</ul>\n<h1 id=\"October\"><a href=\"#October\" class=\"headerlink\" title=\"October\"></a>October</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Outdoor</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-10-01</td>\n<td>Wednesday</td>\n<td>2h 函数结束</td>\n<td>1h 串源码复现理解</td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-02</td>\n<td>Thursday</td>\n<td>1.5h 数列结束</td>\n<td>30min 串源码答疑&#x2F;10min几个Linux命令&#x2F;30min Google analysis，html学习材料准备</td>\n<td>每日25min扇贝单词</td>\n<td>没咋出宿舍</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-03</td>\n<td>Friday</td>\n<td>2h 导数</td>\n<td>2h link-format</td>\n<td>每日25min扇贝单词</td>\n<td>晚上散步30nin</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-04</td>\n<td>Saturday</td>\n<td></td>\n<td>3h ga</td>\n<td>每日25min扇贝单词</td>\n<td>晚上出去跟室友搓了一顿</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-05</td>\n<td>Sunday</td>\n<td>1.5h 三十讲</td>\n<td>45min blog</td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-06</td>\n<td>Monday</td>\n<td>1.5h 三十讲</td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-07</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-08</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td>1h 游泳</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-09</td>\n<td>Thursday</td>\n<td>1h 三十讲</td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-10</td>\n<td>Friday</td>\n<td>1.5h 一元微分，40min线代</td>\n<td>2h 复杂度刷题，线性表看书</td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-11</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-12</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-13</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-14</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-15</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-16</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-17</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-18</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-19</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-20</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-21</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-22</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-23</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-24</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-25</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-26</td>\n<td>Sunday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-27</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-28</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-29</td>\n<td>Wednesday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-30</td>\n<td>Thursday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-10-31</td>\n<td>Friday</td>\n<td></td>\n<td></td>\n<td>每日25min扇贝单词</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"September\"><a href=\"#September\" class=\"headerlink\" title=\"September\"></a>September</h1><table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Day</th>\n<th>Math</th>\n<th>Code</th>\n<th>English</th>\n<th>Outdoor</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2025-09-01</td>\n<td>Monday</td>\n<td>3h 线性表示，线性相关无关及其秩</td>\n<td></td>\n<td></td>\n<td>1.5h 游泳，还是没学会换气</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-02</td>\n<td>Tuesday</td>\n<td>3h 做题，线性方程组解的性质和判定</td>\n<td></td>\n<td>20min英语趣配音</td>\n<td>2h 俯卧撑100个，跑步4km</td>\n<td>明天一定早早起</td>\n</tr>\n<tr>\n<td>2025-09-07</td>\n<td>Sunday</td>\n<td>3h 同解，特征值特征向量</td>\n<td></td>\n<td></td>\n<td>游泳1.5h</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-08</td>\n<td>Monday</td>\n<td></td>\n<td></td>\n<td>30min 英语单词</td>\n<td></td>\n<td>做规划，学习如何利用Apple日历</td>\n</tr>\n<tr>\n<td>2025-09-09</td>\n<td>Tuesday</td>\n<td></td>\n<td>3h 线性代数特征值特征向量</td>\n<td></td>\n<td>120 俯卧撑 60 臂力棒弯举</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-10</td>\n<td>Wednesday</td>\n<td>1.5h 二次型</td>\n<td>5h pages迁移</td>\n<td>15min 单词</td>\n<td>60 深蹲 60弓步蹲 40 桥式</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-11</td>\n<td>Thursday</td>\n<td></td>\n<td>3h 数据结构刷题</td>\n<td>20min 单词</td>\n<td>28min 有氧慢跑 60 俯卧撑 60 臂力棒弯矩</td>\n<td>要注意时间的利用率</td>\n</tr>\n<tr>\n<td>2025-09-12</td>\n<td>Friday</td>\n<td>40min 660</td>\n<td>4.5h 单向链表刷题</td>\n<td>记单词 跟读一集youtube</td>\n<td>1.5h 游泳</td>\n<td>要想弄明白什么是递归，那就先弄明白什么是递归</td>\n</tr>\n<tr>\n<td>2025-09-13</td>\n<td>Saturday</td>\n<td>1.3h 660</td>\n<td>1.5h 栈模版代码</td>\n<td>20min单词 20min YouTube跟读</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-15</td>\n<td>Monday</td>\n<td>2h 660</td>\n<td>1.5h 栈刷题</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-16</td>\n<td>Tuesday</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>全天课</td>\n</tr>\n<tr>\n<td>2025-09-17</td>\n<td>Wednesday</td>\n<td>1.3h 660</td>\n<td>3.5h data structures</td>\n<td>30min YouTube 15min 单词</td>\n<td>20min jogging 60x深蹲 60x弓步蹲</td>\n<td>开始旷课</td>\n</tr>\n<tr>\n<td>2025-09-18</td>\n<td>Thursday</td>\n<td>40min 660 1.3h 30讲</td>\n<td>3h 队列题</td>\n<td>30min YouTube 15min 单词</td>\n<td></td>\n<td>优化做题习惯</td>\n</tr>\n<tr>\n<td>2025-09-19</td>\n<td>Friday</td>\n<td>2h 30讲</td>\n<td>1.5h 数据结构</td>\n<td></td>\n<td>5km 慢跑</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-20</td>\n<td>Saturday</td>\n<td></td>\n<td></td>\n<td></td>\n<td>1.5h 游泳</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-26</td>\n<td>Friday</td>\n<td>1h 基础三十讲</td>\n<td>25min blog相关</td>\n<td>24min 六级单词</td>\n<td>4km 6分配</td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-27</td>\n<td>Saturday</td>\n<td></td>\n<td>25min blog</td>\n<td>1h 英语配音 20min 单词 30min youtube</td>\n<td></td>\n<td>昨晚宿舍集体熬夜早上起不来</td>\n</tr>\n<tr>\n<td>2025-09-28</td>\n<td>Sunday</td>\n<td>1.5h 基础30讲</td>\n<td>30min blog 50min 串源码理解</td>\n<td>30min单词</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-29</td>\n<td>Monday</td>\n<td>2h 三十讲</td>\n<td>30min 串的存储结构，复杂度</td>\n<td>30min 配音</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2025-09-30</td>\n<td>Tuesday</td>\n<td>1.5h 三十讲</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n"},{"title":"confusion","date":"2025-09-17T07:20:10.000Z","_content":"# 常识性\n### index.md无内容但侧边栏显示仓库\n- index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的`projects`和`repository`部分，非Markdown文件内容决定。\n\n#### Hexo中repository/index.md与主题配置的关系\n在Hexo博客系统中，`source/repository/index.md`文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：\n\n1. **index.md文件的作用**：\n   - 这个文件主要是创建一个名为\"Repositories\"的页面路由（/repository/）\n   - 它包含前置信息（Front Matter）定义了页面标题、布局等基本属性\n   - 文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的\n\n2. **主题配置中的仓库设置**：\n   - 在`themes/pure/_config.yml`文件中，仓库信息通过两个部分配置：\n     ```yaml\n     repository:\n       platform: github # 托管平台（github | gitee）\n       username: Jaxon1216 # 用户名\n     ```\n     和\n     ```yaml\n     projects:\n       cofess/hexo-theme-pure: https://github.com/cofess/hexo-theme-pure\n     ```\n   - `repository`部分定义了平台和用户名\n   - `projects`部分直接列出了要显示的特定仓库\n\n3. **工作原理**：\n   - 当访问`/repository/`页面时，Hexo使用`layout: repository`指定的布局模板\n   - 该模板会读取主题配置文件中的`repository`和`projects`部分\n   - 即使`index.md`文件中没有内容，模板也会根据配置信息渲染出仓库列表\n\n这就是为什么即使`source/repository/index.md`文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。\n\n---\n\n# 知识性\n### `return`、`break`、`return 0` \n\n### 一句话结论\n\n- 在 `void` 函数里用 `return;` 直接结束函数。\n- `break;` 只退出当前循环/`switch`，函数还会继续往下执行。\n- `return 0;` 是“有返回值的函数”返回整数 0。\n\n#### 最小示例\n\n```cpp\nvoid LinkedList::ascinsert(eleType value) {\n    if (size == 0) {\n        insert(0, value);\n        return;                 // 提前结束整个函数\n    }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i) {\n        if (value <= curr->data) {\n            insert(i, value);\n            return;             // 找到位置后直接结束函数\n        }\n        curr = curr->next;\n    }\n    insert(size, value);\n}\n```\n\n#### 如果把第二个 `return` 换成 `break` 会怎样？\n\n```cpp\nvoid LinkedList::ascinsert(eleType value){\n    if (size == 0) { insert(0, value); return; }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i){\n        if (value <= curr->data){\n            insert(i, value);\n            break;              // 只跳出 for 循环\n        }\n        curr = curr->next;\n    }\n    insert(size, value);        // 仍会执行 → 造成重复插入\n}\n```\n\n- 核心原因：`break` 只离开循环，函数没有结束；而 `return` 结束整个函数。\n\n####  `return;` 和 `return 0;`\n\n- `return 0;`：用于有返回值的函数，返回整数 0。\n- `return;`：用于 `void` 函数，只退出函数，不返回值。\n\n```cpp\nint main() { return 0; }\nint add(int a, int b) { return a + b; }\nvoid ascinsert(eleType v) { /* ... */ return; }\n```\n\n#### 速查表\n\n| 语句        | 适用场景           | 作用                    |\n| ----------- | ------------------ | ----------------------- |\n| `break;`    | 循环或 `switch` 内 | 跳出当前循环/`switch`   |\n| `return;`   | `void` 函数        | 立即结束整个函数        |\n| `return 0;` | 返回 `int` 的函数  | 结束函数并返回 `0`      |\n\n### delete\n\n#### delete\n\n```cpp\nint* p = new int(5);    // 单个对象\ndelete p;               // 正确：不需要[]\n\nint* arr = new int[10]; // 数组\ndelete[] arr;           // 必须加[]\n\n// 错误示范\nint* wrong = new int[10];\ndelete wrong;           // 未使用[] → 内存泄漏/未定义行为\n```\n\n- 不需要加`[]`的情况：\n  1. 释放**单个对象**时用`delete`\n  2. 当指针是`nullptr`时（`delete nullptr`安全但无意义）\n\n- 必须加`[]`的情况：\n  - 释放数组时用`delete[]`\n  - 与`new[]`严格配对使用\n\n- 核心原则：`new`和`delete`形式必须匹配\n\n---\n\n### c中的打印\n```c\nif(x >= 10) \n    printf(\"%c\", 'A' + x - 10);\nelse \n    printf(\"%d\", x);\n```\n\n`printf` 是 C 语言中用于格式化输出的标准函数。格式说明符以 `%` 开头，指定如何显示后续参数。\n\n在上面的代码中：\n- `%c` 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。`'A' + x - 10` 计算出 A-F 对应的字符。\n- `%d` 是十进制整数格式说明符，直接输出数字。\n\n其他常见的格式说明符：\n- `%s`: 字符串\n- `%f`: 浮点数\n- `%x`: 十六进制数（小写 a-f）\n- `%X`: 十六进制数（大写 A-F）\n- `%p`: 指针地址\n\nC++ 中通常使用 `cout` 进行输出：\n```cpp\nif(x >= 10) \n    cout << static_cast<char>('A' + x - 10);\nelse \n    cout << x;\n```\nC 的 `printf` 需要手动指定格式，而 C++ 的 `cout` 会根据变量类型自动选择格式。\n\n\n---\n### 易混括号\n\n#### `Type name[N]` - 数组声明\n```cpp\nQueue<int> q[1001];  // 创建1001个队列对象 ❗易错点\nvector<int> v[5];    // 创建5个vector对象\n```\n**特点：** 创建N个独立的Type对象  \n**坑点：** 这不是1个大小为N的队列，而是N个独立的队列！\n#### `Type name(N)` - 带参构造\n```cpp\nvector<int> v(100);  // 1个vector，含100个元素\nstring s(5, 'a');    // 1个string，5个'a'\n```\n**特点：** 创建1个对象，初始化N个内容\n#### `Type name{N}` - 列表初始化\n```cpp\nvector<int> v{1,2,3}; // 1个vector，元素为1,2,3\nint arr[]{1,2,3};     // 3个int的数组\n```\n**特点：** 使用花括号指定初始值\n##### 快速记忆\n- `[N]` → 多个对象（N个Type）\n- `(N)` → 单个对象，N个内容  \n- `{N}` → 初始化值为N\n\n\n\n","source":"_posts/confusion.md","raw":"---\ntitle: confusion\ndate: 2025-09-17 15:20:10\ncategories:\n  - study\ntags:\n  - C++\n  - \n---\n# 常识性\n### index.md无内容但侧边栏显示仓库\n- index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的`projects`和`repository`部分，非Markdown文件内容决定。\n\n#### Hexo中repository/index.md与主题配置的关系\n在Hexo博客系统中，`source/repository/index.md`文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：\n\n1. **index.md文件的作用**：\n   - 这个文件主要是创建一个名为\"Repositories\"的页面路由（/repository/）\n   - 它包含前置信息（Front Matter）定义了页面标题、布局等基本属性\n   - 文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的\n\n2. **主题配置中的仓库设置**：\n   - 在`themes/pure/_config.yml`文件中，仓库信息通过两个部分配置：\n     ```yaml\n     repository:\n       platform: github # 托管平台（github | gitee）\n       username: Jaxon1216 # 用户名\n     ```\n     和\n     ```yaml\n     projects:\n       cofess/hexo-theme-pure: https://github.com/cofess/hexo-theme-pure\n     ```\n   - `repository`部分定义了平台和用户名\n   - `projects`部分直接列出了要显示的特定仓库\n\n3. **工作原理**：\n   - 当访问`/repository/`页面时，Hexo使用`layout: repository`指定的布局模板\n   - 该模板会读取主题配置文件中的`repository`和`projects`部分\n   - 即使`index.md`文件中没有内容，模板也会根据配置信息渲染出仓库列表\n\n这就是为什么即使`source/repository/index.md`文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。\n\n---\n\n# 知识性\n### `return`、`break`、`return 0` \n\n### 一句话结论\n\n- 在 `void` 函数里用 `return;` 直接结束函数。\n- `break;` 只退出当前循环/`switch`，函数还会继续往下执行。\n- `return 0;` 是“有返回值的函数”返回整数 0。\n\n#### 最小示例\n\n```cpp\nvoid LinkedList::ascinsert(eleType value) {\n    if (size == 0) {\n        insert(0, value);\n        return;                 // 提前结束整个函数\n    }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i) {\n        if (value <= curr->data) {\n            insert(i, value);\n            return;             // 找到位置后直接结束函数\n        }\n        curr = curr->next;\n    }\n    insert(size, value);\n}\n```\n\n#### 如果把第二个 `return` 换成 `break` 会怎样？\n\n```cpp\nvoid LinkedList::ascinsert(eleType value){\n    if (size == 0) { insert(0, value); return; }\n    ListNode* curr = head;\n    for (int i = 0; i < size; ++i){\n        if (value <= curr->data){\n            insert(i, value);\n            break;              // 只跳出 for 循环\n        }\n        curr = curr->next;\n    }\n    insert(size, value);        // 仍会执行 → 造成重复插入\n}\n```\n\n- 核心原因：`break` 只离开循环，函数没有结束；而 `return` 结束整个函数。\n\n####  `return;` 和 `return 0;`\n\n- `return 0;`：用于有返回值的函数，返回整数 0。\n- `return;`：用于 `void` 函数，只退出函数，不返回值。\n\n```cpp\nint main() { return 0; }\nint add(int a, int b) { return a + b; }\nvoid ascinsert(eleType v) { /* ... */ return; }\n```\n\n#### 速查表\n\n| 语句        | 适用场景           | 作用                    |\n| ----------- | ------------------ | ----------------------- |\n| `break;`    | 循环或 `switch` 内 | 跳出当前循环/`switch`   |\n| `return;`   | `void` 函数        | 立即结束整个函数        |\n| `return 0;` | 返回 `int` 的函数  | 结束函数并返回 `0`      |\n\n### delete\n\n#### delete\n\n```cpp\nint* p = new int(5);    // 单个对象\ndelete p;               // 正确：不需要[]\n\nint* arr = new int[10]; // 数组\ndelete[] arr;           // 必须加[]\n\n// 错误示范\nint* wrong = new int[10];\ndelete wrong;           // 未使用[] → 内存泄漏/未定义行为\n```\n\n- 不需要加`[]`的情况：\n  1. 释放**单个对象**时用`delete`\n  2. 当指针是`nullptr`时（`delete nullptr`安全但无意义）\n\n- 必须加`[]`的情况：\n  - 释放数组时用`delete[]`\n  - 与`new[]`严格配对使用\n\n- 核心原则：`new`和`delete`形式必须匹配\n\n---\n\n### c中的打印\n```c\nif(x >= 10) \n    printf(\"%c\", 'A' + x - 10);\nelse \n    printf(\"%d\", x);\n```\n\n`printf` 是 C 语言中用于格式化输出的标准函数。格式说明符以 `%` 开头，指定如何显示后续参数。\n\n在上面的代码中：\n- `%c` 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。`'A' + x - 10` 计算出 A-F 对应的字符。\n- `%d` 是十进制整数格式说明符，直接输出数字。\n\n其他常见的格式说明符：\n- `%s`: 字符串\n- `%f`: 浮点数\n- `%x`: 十六进制数（小写 a-f）\n- `%X`: 十六进制数（大写 A-F）\n- `%p`: 指针地址\n\nC++ 中通常使用 `cout` 进行输出：\n```cpp\nif(x >= 10) \n    cout << static_cast<char>('A' + x - 10);\nelse \n    cout << x;\n```\nC 的 `printf` 需要手动指定格式，而 C++ 的 `cout` 会根据变量类型自动选择格式。\n\n\n---\n### 易混括号\n\n#### `Type name[N]` - 数组声明\n```cpp\nQueue<int> q[1001];  // 创建1001个队列对象 ❗易错点\nvector<int> v[5];    // 创建5个vector对象\n```\n**特点：** 创建N个独立的Type对象  \n**坑点：** 这不是1个大小为N的队列，而是N个独立的队列！\n#### `Type name(N)` - 带参构造\n```cpp\nvector<int> v(100);  // 1个vector，含100个元素\nstring s(5, 'a');    // 1个string，5个'a'\n```\n**特点：** 创建1个对象，初始化N个内容\n#### `Type name{N}` - 列表初始化\n```cpp\nvector<int> v{1,2,3}; // 1个vector，元素为1,2,3\nint arr[]{1,2,3};     // 3个int的数组\n```\n**特点：** 使用花括号指定初始值\n##### 快速记忆\n- `[N]` → 多个对象（N个Type）\n- `(N)` → 单个对象，N个内容  \n- `{N}` → 初始化值为N\n\n\n\n","slug":"confusion","published":1,"updated":"2025-09-19T05:57:39.666Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdxze0003k49k1lgp8rel","content":"<h1 id=\"常识性\"><a href=\"#常识性\" class=\"headerlink\" title=\"常识性\"></a>常识性</h1><h3 id=\"index-md无内容但侧边栏显示仓库\"><a href=\"#index-md无内容但侧边栏显示仓库\" class=\"headerlink\" title=\"index.md无内容但侧边栏显示仓库\"></a>index.md无内容但侧边栏显示仓库</h3><ul>\n<li>index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的<code>projects</code>和<code>repository</code>部分，非Markdown文件内容决定。</li>\n</ul>\n<h4 id=\"Hexo中repository-index-md与主题配置的关系\"><a href=\"#Hexo中repository-index-md与主题配置的关系\" class=\"headerlink\" title=\"Hexo中repository&#x2F;index.md与主题配置的关系\"></a>Hexo中repository&#x2F;index.md与主题配置的关系</h4><p>在Hexo博客系统中，<code>source/repository/index.md</code>文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：</p>\n<ol>\n<li><p><strong>index.md文件的作用</strong>：</p>\n<ul>\n<li>这个文件主要是创建一个名为”Repositories”的页面路由（&#x2F;repository&#x2F;）</li>\n<li>它包含前置信息（Front Matter）定义了页面标题、布局等基本属性</li>\n<li>文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的</li>\n</ul>\n</li>\n<li><p><strong>主题配置中的仓库设置</strong>：</p>\n<ul>\n<li>在<code>themes/pure/_config.yml</code>文件中，仓库信息通过两个部分配置：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">repository:</span></span><br><span class=\"line\">  <span class=\"attr\">platform:</span> <span class=\"string\">github</span> <span class=\"comment\"># 托管平台（github | gitee）</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">Jaxon1216</span> <span class=\"comment\"># 用户名</span></span><br></pre></td></tr></table></figure>\n和<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">projects:</span></span><br><span class=\"line\">  <span class=\"attr\">cofess/hexo-theme-pure:</span> <span class=\"string\">https://github.com/cofess/hexo-theme-pure</span></span><br></pre></td></tr></table></figure></li>\n<li><code>repository</code>部分定义了平台和用户名</li>\n<li><code>projects</code>部分直接列出了要显示的特定仓库</li>\n</ul>\n</li>\n<li><p><strong>工作原理</strong>：</p>\n<ul>\n<li>当访问<code>/repository/</code>页面时，Hexo使用<code>layout: repository</code>指定的布局模板</li>\n<li>该模板会读取主题配置文件中的<code>repository</code>和<code>projects</code>部分</li>\n<li>即使<code>index.md</code>文件中没有内容，模板也会根据配置信息渲染出仓库列表</li>\n</ul>\n</li>\n</ol>\n<p>这就是为什么即使<code>source/repository/index.md</code>文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。</p>\n<hr>\n<h1 id=\"知识性\"><a href=\"#知识性\" class=\"headerlink\" title=\"知识性\"></a>知识性</h1><h3 id=\"return、break、return-0\"><a href=\"#return、break、return-0\" class=\"headerlink\" title=\"return、break、return 0\"></a><code>return</code>、<code>break</code>、<code>return 0</code></h3><h3 id=\"一句话结论\"><a href=\"#一句话结论\" class=\"headerlink\" title=\"一句话结论\"></a>一句话结论</h3><ul>\n<li>在 <code>void</code> 函数里用 <code>return;</code> 直接结束函数。</li>\n<li><code>break;</code> 只退出当前循环&#x2F;<code>switch</code>，函数还会继续往下执行。</li>\n<li><code>return 0;</code> 是“有返回值的函数”返回整数 0。</li>\n</ul>\n<h4 id=\"最小示例\"><a href=\"#最小示例\" class=\"headerlink\" title=\"最小示例\"></a>最小示例</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;                 <span class=\"comment\">// 提前结束整个函数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;             <span class=\"comment\">// 找到位置后直接结束函数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"如果把第二个-return-换成-break-会怎样？\"><a href=\"#如果把第二个-return-换成-break-会怎样？\" class=\"headerlink\" title=\"如果把第二个 return 换成 break 会怎样？\"></a>如果把第二个 <code>return</code> 换成 <code>break</code> 会怎样？</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123; <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;              <span class=\"comment\">// 只跳出 for 循环</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);        <span class=\"comment\">// 仍会执行 → 造成重复插入</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>核心原因：<code>break</code> 只离开循环，函数没有结束；而 <code>return</code> 结束整个函数。</li>\n</ul>\n<h4 id=\"return-和-return-0\"><a href=\"#return-和-return-0\" class=\"headerlink\" title=\"return; 和 return 0;\"></a><code>return;</code> 和 <code>return 0;</code></h4><ul>\n<li><code>return 0;</code>：用于有返回值的函数，返回整数 0。</li>\n<li><code>return;</code>：用于 <code>void</code> 函数，只退出函数，不返回值。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ascinsert</span><span class=\"params\">(eleType v)</span> </span>&#123; <span class=\"comment\">/* ... */</span> <span class=\"keyword\">return</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"速查表\"><a href=\"#速查表\" class=\"headerlink\" title=\"速查表\"></a>速查表</h4><table>\n<thead>\n<tr>\n<th>语句</th>\n<th>适用场景</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>break;</code></td>\n<td>循环或 <code>switch</code> 内</td>\n<td>跳出当前循环&#x2F;<code>switch</code></td>\n</tr>\n<tr>\n<td><code>return;</code></td>\n<td><code>void</code> 函数</td>\n<td>立即结束整个函数</td>\n</tr>\n<tr>\n<td><code>return 0;</code></td>\n<td>返回 <code>int</code> 的函数</td>\n<td>结束函数并返回 <code>0</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><h4 id=\"delete-1\"><a href=\"#delete-1\" class=\"headerlink\" title=\"delete\"></a>delete</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* p = <span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">5</span>);    <span class=\"comment\">// 单个对象</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> p;               <span class=\"comment\">// 正确：不需要[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>* arr = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>]; <span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span>[] arr;           <span class=\"comment\">// 必须加[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误示范</span></span><br><span class=\"line\"><span class=\"type\">int</span>* wrong = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">delete</span> wrong;           <span class=\"comment\">// 未使用[] → 内存泄漏/未定义行为</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>不需要加<code>[]</code>的情况：</p>\n<ol>\n<li>释放<strong>单个对象</strong>时用<code>delete</code></li>\n<li>当指针是<code>nullptr</code>时（<code>delete nullptr</code>安全但无意义）</li>\n</ol>\n</li>\n<li><p>必须加<code>[]</code>的情况：</p>\n<ul>\n<li>释放数组时用<code>delete[]</code></li>\n<li>与<code>new[]</code>严格配对使用</li>\n</ul>\n</li>\n<li><p>核心原则：<code>new</code>和<code>delete</code>形式必须匹配</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"c中的打印\"><a href=\"#c中的打印\" class=\"headerlink\" title=\"c中的打印\"></a>c中的打印</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, <span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, x);</span><br></pre></td></tr></table></figure>\n\n<p><code>printf</code> 是 C 语言中用于格式化输出的标准函数。格式说明符以 <code>%</code> 开头，指定如何显示后续参数。</p>\n<p>在上面的代码中：</p>\n<ul>\n<li><code>%c</code> 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。<code>&#39;A&#39; + x - 10</code> 计算出 A-F 对应的字符。</li>\n<li><code>%d</code> 是十进制整数格式说明符，直接输出数字。</li>\n</ul>\n<p>其他常见的格式说明符：</p>\n<ul>\n<li><code>%s</code>: 字符串</li>\n<li><code>%f</code>: 浮点数</li>\n<li><code>%x</code>: 十六进制数（小写 a-f）</li>\n<li><code>%X</code>: 十六进制数（大写 A-F）</li>\n<li><code>%p</code>: 指针地址</li>\n</ul>\n<p>C++ 中通常使用 <code>cout</code> 进行输出：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">char</span>&gt;(<span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    cout &lt;&lt; x;</span><br></pre></td></tr></table></figure>\n<p>C 的 <code>printf</code> 需要手动指定格式，而 C++ 的 <code>cout</code> 会根据变量类型自动选择格式。</p>\n<hr>\n<h3 id=\"易混括号\"><a href=\"#易混括号\" class=\"headerlink\" title=\"易混括号\"></a>易混括号</h3><h4 id=\"Type-name-N-数组声明\"><a href=\"#Type-name-N-数组声明\" class=\"headerlink\" title=\"Type name[N] - 数组声明\"></a><code>Type name[N]</code> - 数组声明</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;<span class=\"type\">int</span>&gt; q[<span class=\"number\">1001</span>];  <span class=\"comment\">// 创建1001个队列对象 ❗易错点</span></span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v[<span class=\"number\">5</span>];    <span class=\"comment\">// 创建5个vector对象</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建N个独立的Type对象<br><strong>坑点：</strong> 这不是1个大小为N的队列，而是N个独立的队列！</p>\n<h4 id=\"Type-name-N-带参构造\"><a href=\"#Type-name-N-带参构造\" class=\"headerlink\" title=\"Type name(N) - 带参构造\"></a><code>Type name(N)</code> - 带参构造</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v</span><span class=\"params\">(<span class=\"number\">100</span>)</span></span>;  <span class=\"comment\">// 1个vector，含100个元素</span></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">s</span><span class=\"params\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;    <span class=\"comment\">// 1个string，5个&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建1个对象，初始化N个内容</p>\n<h4 id=\"Type-name-N-列表初始化\"><a href=\"#Type-name-N-列表初始化\" class=\"headerlink\" title=\"Type name{N} - 列表初始化\"></a><code>Type name&#123;N&#125;</code> - 列表初始化</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;; <span class=\"comment\">// 1个vector，元素为1,2,3</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;     <span class=\"comment\">// 3个int的数组</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 使用花括号指定初始值</p>\n<h5 id=\"快速记忆\"><a href=\"#快速记忆\" class=\"headerlink\" title=\"快速记忆\"></a>快速记忆</h5><ul>\n<li><code>[N]</code> → 多个对象（N个Type）</li>\n<li><code>(N)</code> → 单个对象，N个内容  </li>\n<li><code>&#123;N&#125;</code> → 初始化值为N</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"常识性\"><a href=\"#常识性\" class=\"headerlink\" title=\"常识性\"></a>常识性</h1><h3 id=\"index-md无内容但侧边栏显示仓库\"><a href=\"#index-md无内容但侧边栏显示仓库\" class=\"headerlink\" title=\"index.md无内容但侧边栏显示仓库\"></a>index.md无内容但侧边栏显示仓库</h3><ul>\n<li>index.md只有前置信息无实际内容，侧边栏仓库信息配置在主题配置文件的<code>projects</code>和<code>repository</code>部分，非Markdown文件内容决定。</li>\n</ul>\n<h4 id=\"Hexo中repository-index-md与主题配置的关系\"><a href=\"#Hexo中repository-index-md与主题配置的关系\" class=\"headerlink\" title=\"Hexo中repository&#x2F;index.md与主题配置的关系\"></a>Hexo中repository&#x2F;index.md与主题配置的关系</h4><p>在Hexo博客系统中，<code>source/repository/index.md</code>文件与侧边栏显示的GitHub仓库列表之间存在一种特殊的关系：</p>\n<ol>\n<li><p><strong>index.md文件的作用</strong>：</p>\n<ul>\n<li>这个文件主要是创建一个名为”Repositories”的页面路由（&#x2F;repository&#x2F;）</li>\n<li>它包含前置信息（Front Matter）定义了页面标题、布局等基本属性</li>\n<li>文件本身可以不包含任何内容，因为实际显示的仓库信息是从主题配置中获取的</li>\n</ul>\n</li>\n<li><p><strong>主题配置中的仓库设置</strong>：</p>\n<ul>\n<li>在<code>themes/pure/_config.yml</code>文件中，仓库信息通过两个部分配置：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">repository:</span></span><br><span class=\"line\">  <span class=\"attr\">platform:</span> <span class=\"string\">github</span> <span class=\"comment\"># 托管平台（github | gitee）</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">Jaxon1216</span> <span class=\"comment\"># 用户名</span></span><br></pre></td></tr></table></figure>\n和<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">projects:</span></span><br><span class=\"line\">  <span class=\"attr\">cofess/hexo-theme-pure:</span> <span class=\"string\">https://github.com/cofess/hexo-theme-pure</span></span><br></pre></td></tr></table></figure></li>\n<li><code>repository</code>部分定义了平台和用户名</li>\n<li><code>projects</code>部分直接列出了要显示的特定仓库</li>\n</ul>\n</li>\n<li><p><strong>工作原理</strong>：</p>\n<ul>\n<li>当访问<code>/repository/</code>页面时，Hexo使用<code>layout: repository</code>指定的布局模板</li>\n<li>该模板会读取主题配置文件中的<code>repository</code>和<code>projects</code>部分</li>\n<li>即使<code>index.md</code>文件中没有内容，模板也会根据配置信息渲染出仓库列表</li>\n</ul>\n</li>\n</ol>\n<p>这就是为什么即使<code>source/repository/index.md</code>文件中没有任何内容，侧边栏仍然能够显示GitHub仓库的原因。修改仓库显示需要编辑主题配置文件，而不是修改index.md文件。</p>\n<hr>\n<h1 id=\"知识性\"><a href=\"#知识性\" class=\"headerlink\" title=\"知识性\"></a>知识性</h1><h3 id=\"return、break、return-0\"><a href=\"#return、break、return-0\" class=\"headerlink\" title=\"return、break、return 0\"></a><code>return</code>、<code>break</code>、<code>return 0</code></h3><h3 id=\"一句话结论\"><a href=\"#一句话结论\" class=\"headerlink\" title=\"一句话结论\"></a>一句话结论</h3><ul>\n<li>在 <code>void</code> 函数里用 <code>return;</code> 直接结束函数。</li>\n<li><code>break;</code> 只退出当前循环&#x2F;<code>switch</code>，函数还会继续往下执行。</li>\n<li><code>return 0;</code> 是“有返回值的函数”返回整数 0。</li>\n</ul>\n<h4 id=\"最小示例\"><a href=\"#最小示例\" class=\"headerlink\" title=\"最小示例\"></a>最小示例</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;                 <span class=\"comment\">// 提前结束整个函数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;             <span class=\"comment\">// 找到位置后直接结束函数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"如果把第二个-return-换成-break-会怎样？\"><a href=\"#如果把第二个-return-换成-break-会怎样？\" class=\"headerlink\" title=\"如果把第二个 return 换成 break 会怎样？\"></a>如果把第二个 <code>return</code> 换成 <code>break</code> 会怎样？</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LinkedList::ascinsert</span><span class=\"params\">(eleType value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (size == <span class=\"number\">0</span>) &#123; <span class=\"built_in\">insert</span>(<span class=\"number\">0</span>, value); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ListNode* curr = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; ++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value &lt;= curr-&gt;data)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i, value);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;              <span class=\"comment\">// 只跳出 for 循环</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curr = curr-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(size, value);        <span class=\"comment\">// 仍会执行 → 造成重复插入</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>核心原因：<code>break</code> 只离开循环，函数没有结束；而 <code>return</code> 结束整个函数。</li>\n</ul>\n<h4 id=\"return-和-return-0\"><a href=\"#return-和-return-0\" class=\"headerlink\" title=\"return; 和 return 0;\"></a><code>return;</code> 和 <code>return 0;</code></h4><ul>\n<li><code>return 0;</code>：用于有返回值的函数，返回整数 0。</li>\n<li><code>return;</code>：用于 <code>void</code> 函数，只退出函数，不返回值。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> </span>&#123; <span class=\"keyword\">return</span> a + b; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ascinsert</span><span class=\"params\">(eleType v)</span> </span>&#123; <span class=\"comment\">/* ... */</span> <span class=\"keyword\">return</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"速查表\"><a href=\"#速查表\" class=\"headerlink\" title=\"速查表\"></a>速查表</h4><table>\n<thead>\n<tr>\n<th>语句</th>\n<th>适用场景</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>break;</code></td>\n<td>循环或 <code>switch</code> 内</td>\n<td>跳出当前循环&#x2F;<code>switch</code></td>\n</tr>\n<tr>\n<td><code>return;</code></td>\n<td><code>void</code> 函数</td>\n<td>立即结束整个函数</td>\n</tr>\n<tr>\n<td><code>return 0;</code></td>\n<td>返回 <code>int</code> 的函数</td>\n<td>结束函数并返回 <code>0</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><h4 id=\"delete-1\"><a href=\"#delete-1\" class=\"headerlink\" title=\"delete\"></a>delete</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>* p = <span class=\"keyword\">new</span> <span class=\"built_in\">int</span>(<span class=\"number\">5</span>);    <span class=\"comment\">// 单个对象</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> p;               <span class=\"comment\">// 正确：不需要[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>* arr = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>]; <span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span>[] arr;           <span class=\"comment\">// 必须加[]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误示范</span></span><br><span class=\"line\"><span class=\"type\">int</span>* wrong = <span class=\"keyword\">new</span> <span class=\"type\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">delete</span> wrong;           <span class=\"comment\">// 未使用[] → 内存泄漏/未定义行为</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>不需要加<code>[]</code>的情况：</p>\n<ol>\n<li>释放<strong>单个对象</strong>时用<code>delete</code></li>\n<li>当指针是<code>nullptr</code>时（<code>delete nullptr</code>安全但无意义）</li>\n</ol>\n</li>\n<li><p>必须加<code>[]</code>的情况：</p>\n<ul>\n<li>释放数组时用<code>delete[]</code></li>\n<li>与<code>new[]</code>严格配对使用</li>\n</ul>\n</li>\n<li><p>核心原则：<code>new</code>和<code>delete</code>形式必须匹配</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"c中的打印\"><a href=\"#c中的打印\" class=\"headerlink\" title=\"c中的打印\"></a>c中的打印</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, <span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, x);</span><br></pre></td></tr></table></figure>\n\n<p><code>printf</code> 是 C 语言中用于格式化输出的标准函数。格式说明符以 <code>%</code> 开头，指定如何显示后续参数。</p>\n<p>在上面的代码中：</p>\n<ul>\n<li><code>%c</code> 是字符格式说明符，它将整数值转换为对应的 ASCII 字符。<code>&#39;A&#39; + x - 10</code> 计算出 A-F 对应的字符。</li>\n<li><code>%d</code> 是十进制整数格式说明符，直接输出数字。</li>\n</ul>\n<p>其他常见的格式说明符：</p>\n<ul>\n<li><code>%s</code>: 字符串</li>\n<li><code>%f</code>: 浮点数</li>\n<li><code>%x</code>: 十六进制数（小写 a-f）</li>\n<li><code>%X</code>: 十六进制数（大写 A-F）</li>\n<li><code>%p</code>: 指针地址</li>\n</ul>\n<p>C++ 中通常使用 <code>cout</code> 进行输出：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(x &gt;= <span class=\"number\">10</span>) </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">char</span>&gt;(<span class=\"string\">&#x27;A&#x27;</span> + x - <span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    cout &lt;&lt; x;</span><br></pre></td></tr></table></figure>\n<p>C 的 <code>printf</code> 需要手动指定格式，而 C++ 的 <code>cout</code> 会根据变量类型自动选择格式。</p>\n<hr>\n<h3 id=\"易混括号\"><a href=\"#易混括号\" class=\"headerlink\" title=\"易混括号\"></a>易混括号</h3><h4 id=\"Type-name-N-数组声明\"><a href=\"#Type-name-N-数组声明\" class=\"headerlink\" title=\"Type name[N] - 数组声明\"></a><code>Type name[N]</code> - 数组声明</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;<span class=\"type\">int</span>&gt; q[<span class=\"number\">1001</span>];  <span class=\"comment\">// 创建1001个队列对象 ❗易错点</span></span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v[<span class=\"number\">5</span>];    <span class=\"comment\">// 创建5个vector对象</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建N个独立的Type对象<br><strong>坑点：</strong> 这不是1个大小为N的队列，而是N个独立的队列！</p>\n<h4 id=\"Type-name-N-带参构造\"><a href=\"#Type-name-N-带参构造\" class=\"headerlink\" title=\"Type name(N) - 带参构造\"></a><code>Type name(N)</code> - 带参构造</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v</span><span class=\"params\">(<span class=\"number\">100</span>)</span></span>;  <span class=\"comment\">// 1个vector，含100个元素</span></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">s</span><span class=\"params\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;    <span class=\"comment\">// 1个string，5个&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 创建1个对象，初始化N个内容</p>\n<h4 id=\"Type-name-N-列表初始化\"><a href=\"#Type-name-N-列表初始化\" class=\"headerlink\" title=\"Type name{N} - 列表初始化\"></a><code>Type name&#123;N&#125;</code> - 列表初始化</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;; <span class=\"comment\">// 1个vector，元素为1,2,3</span></span><br><span class=\"line\"><span class=\"type\">int</span> arr[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;     <span class=\"comment\">// 3个int的数组</span></span><br></pre></td></tr></table></figure>\n<p><strong>特点：</strong> 使用花括号指定初始值</p>\n<h5 id=\"快速记忆\"><a href=\"#快速记忆\" class=\"headerlink\" title=\"快速记忆\"></a>快速记忆</h5><ul>\n<li><code>[N]</code> → 多个对象（N个Type）</li>\n<li><code>(N)</code> → 单个对象，N个内容  </li>\n<li><code>&#123;N&#125;</code> → 初始化值为N</li>\n</ul>\n"},{"title":"tools","date":"2025-10-01T07:20:10.000Z","_content":"## 目录\n\n- [git](#git)\n  - [修改远程仓库地址](#修改远程仓库地址)\n  - [正确删除文件](#正确删除文件)\n  - [Git 分支配置与远程仓库URL不匹配](#git-分支配置与远程仓库-url-不匹配)\n- [md](#md)\n  - [插入链接](#插入链接)\n  - [插入图片](#插入图片)\n  - [导出为pdf](#导出为pdf)\n  - [写目录](#写目录)\n- [Linux](#linux)\n- [hexo](#Hexo)\n- [快捷键](#快捷键)\n- [流程图](#流程图)\n\n# git \n### 修改远程仓库地址\n- 查看远程仓库指向\ngit remote -v\n\n### 正确删除文件\n- git rm -r name //remove, recursive递归, 定位到根目录，name直接从下一级开始。\n### Git 分支配置与远程仓库 URL 不匹配\n- 当看到推送目标与预期不符时，检查 git config branch.<分支名>.remote 配置\n- 确保分支的远程仓库配置与 git remote -v 显示的 URL 一致\n- 使用 git config --list | grep branch 可以快速查看所有分支配置\n\n\n# md\n### 插入链接\n- 作者：``[jx's blog]``+``(https://jiangxu.net/ \"个人博客\")``\n\n### 插入图片\n- 将图片放到 `source/img/`（发布后路径为 `/img/`）\n- 桌面图片复制到项目：\n```bash\ncp ~/Desktop/screenshot.png /Users/jiangxu/Documents/code/myblog/source/img/\n```\n> 也可以在访达直接拖拽吧\n- 在 Markdown 中引用：\n```markdown\n![截图说明](/img/screenshot.png)\n```\n- 需要控制大小（可选）：\n```html\n<img src=\"/img/screenshot.png\" alt=\"截图说明\" width=\"600\">\n```\n- 文件名尽量用英文与连字符，避免空格。\n\n### 导出为pdf\n- 在md文件页面 ```cmd+Shift+P```\n\n### 写目录\n- ```- [显示在目录中的文字](#实际标题的锚点格式)```\n- 锚点格式为：去掉标题中所有标点（含数字后的点），空格换为连字符`-`，保留中文和数字，不区分大小写。\n\n# Linux\n- pwd 查看当前路径\n- rm -d name/directory 删除空目录\n- rm -r //recursive递归，删除非空目录\n- rm -f //force\n- rm -rf //-r和-f一起\n# Hexo\n- hexo new \"postname\",\n# 快捷键\n- 撤销 ```cmd``` + ```z```\n- 左移 ```cmd``` + ```[```\n\n# 流程图\n\n### 连线与布局\n| 主题 | 建议/操作 |\n| --- | --- |\n| 连线类型 | 使用正交连线（Orthogonal）保持直角转折、减少视觉噪音 |\n| 连接点与拐点 | 悬停形状边缘蓝点连线；双击连线加拐点；拖动黄色手柄统一连线间距 |\n| 线条标注 | 选中连线直接输入文字；在判断分支线上标注“是/否” |\n| 对齐与分布 | Arrange → Align/Distribute；Tidy up 一键整理网格化布局 |\n| 网格与吸附 | View → Grid、Snap to Grid 打开更易对齐 |\n| 分组与图层 | Cmd+G 分组、Cmd+Shift+G 取消；右键锁定；View → Layers 分离背景/说明/主流程 |\n| 样式统一 | 右侧 Format 面板统一线条粗细（如 1.5–2px）、箭头、字体、颜色 |\n\n### 导出与协作\n| 项目 | 建议 |\n| --- | --- |\n| 保存 | 使用 .drawio 或 .drawio.png（含可编辑元数据）便于后续编辑 |\n| 导出 | File → Export as → PNG / SVG / PDF |\n| 背景 | 勾选 Transparent Background（透明背景） |\n| 使用场景 | SVG：网页；PNG：博客；PDF：打印 |\n| 版本/备份 | 本地或云端（Git、Google Drive、OneDrive），必要时使用版本历史 |\n\n### 小技巧（draw.io）\n| 动作 | 快捷/用法 |\n| --- | --- |\n| 快速连线 | 拖动形状四角蓝箭头，自动连线并生成新节点 |\n| 复制/对齐 | Option(Alt) 拖拽复制；Cmd+D 复制；按住 Shift 拖动保持水平/垂直 |\n| 多页图 | 底部 Pages 管理，将子流程放到独立页面并从子流程符号跳转 |\n| 页面设置 | File → Page Setup 调整页面、边距，或开启自适应内容 |\n| 搜索图形 | 左侧 Shapes 搜索“flowchart/uml”，或 + More Shapes 启用更多库 |\n| 文案规范 | 步骤用动宾短语；判断为可判定条件；分支出口清晰不交叉 |\n","source":"_posts/tools.md","raw":"---\ntitle: tools\ndate: 2025-10-01 15:20:10\ncategories:\n  - study\ntags:\n  - git\n  - md\n---\n## 目录\n\n- [git](#git)\n  - [修改远程仓库地址](#修改远程仓库地址)\n  - [正确删除文件](#正确删除文件)\n  - [Git 分支配置与远程仓库URL不匹配](#git-分支配置与远程仓库-url-不匹配)\n- [md](#md)\n  - [插入链接](#插入链接)\n  - [插入图片](#插入图片)\n  - [导出为pdf](#导出为pdf)\n  - [写目录](#写目录)\n- [Linux](#linux)\n- [hexo](#Hexo)\n- [快捷键](#快捷键)\n- [流程图](#流程图)\n\n# git \n### 修改远程仓库地址\n- 查看远程仓库指向\ngit remote -v\n\n### 正确删除文件\n- git rm -r name //remove, recursive递归, 定位到根目录，name直接从下一级开始。\n### Git 分支配置与远程仓库 URL 不匹配\n- 当看到推送目标与预期不符时，检查 git config branch.<分支名>.remote 配置\n- 确保分支的远程仓库配置与 git remote -v 显示的 URL 一致\n- 使用 git config --list | grep branch 可以快速查看所有分支配置\n\n\n# md\n### 插入链接\n- 作者：``[jx's blog]``+``(https://jiangxu.net/ \"个人博客\")``\n\n### 插入图片\n- 将图片放到 `source/img/`（发布后路径为 `/img/`）\n- 桌面图片复制到项目：\n```bash\ncp ~/Desktop/screenshot.png /Users/jiangxu/Documents/code/myblog/source/img/\n```\n> 也可以在访达直接拖拽吧\n- 在 Markdown 中引用：\n```markdown\n![截图说明](/img/screenshot.png)\n```\n- 需要控制大小（可选）：\n```html\n<img src=\"/img/screenshot.png\" alt=\"截图说明\" width=\"600\">\n```\n- 文件名尽量用英文与连字符，避免空格。\n\n### 导出为pdf\n- 在md文件页面 ```cmd+Shift+P```\n\n### 写目录\n- ```- [显示在目录中的文字](#实际标题的锚点格式)```\n- 锚点格式为：去掉标题中所有标点（含数字后的点），空格换为连字符`-`，保留中文和数字，不区分大小写。\n\n# Linux\n- pwd 查看当前路径\n- rm -d name/directory 删除空目录\n- rm -r //recursive递归，删除非空目录\n- rm -f //force\n- rm -rf //-r和-f一起\n# Hexo\n- hexo new \"postname\",\n# 快捷键\n- 撤销 ```cmd``` + ```z```\n- 左移 ```cmd``` + ```[```\n\n# 流程图\n\n### 连线与布局\n| 主题 | 建议/操作 |\n| --- | --- |\n| 连线类型 | 使用正交连线（Orthogonal）保持直角转折、减少视觉噪音 |\n| 连接点与拐点 | 悬停形状边缘蓝点连线；双击连线加拐点；拖动黄色手柄统一连线间距 |\n| 线条标注 | 选中连线直接输入文字；在判断分支线上标注“是/否” |\n| 对齐与分布 | Arrange → Align/Distribute；Tidy up 一键整理网格化布局 |\n| 网格与吸附 | View → Grid、Snap to Grid 打开更易对齐 |\n| 分组与图层 | Cmd+G 分组、Cmd+Shift+G 取消；右键锁定；View → Layers 分离背景/说明/主流程 |\n| 样式统一 | 右侧 Format 面板统一线条粗细（如 1.5–2px）、箭头、字体、颜色 |\n\n### 导出与协作\n| 项目 | 建议 |\n| --- | --- |\n| 保存 | 使用 .drawio 或 .drawio.png（含可编辑元数据）便于后续编辑 |\n| 导出 | File → Export as → PNG / SVG / PDF |\n| 背景 | 勾选 Transparent Background（透明背景） |\n| 使用场景 | SVG：网页；PNG：博客；PDF：打印 |\n| 版本/备份 | 本地或云端（Git、Google Drive、OneDrive），必要时使用版本历史 |\n\n### 小技巧（draw.io）\n| 动作 | 快捷/用法 |\n| --- | --- |\n| 快速连线 | 拖动形状四角蓝箭头，自动连线并生成新节点 |\n| 复制/对齐 | Option(Alt) 拖拽复制；Cmd+D 复制；按住 Shift 拖动保持水平/垂直 |\n| 多页图 | 底部 Pages 管理，将子流程放到独立页面并从子流程符号跳转 |\n| 页面设置 | File → Page Setup 调整页面、边距，或开启自适应内容 |\n| 搜索图形 | 左侧 Shapes 搜索“flowchart/uml”，或 + More Shapes 启用更多库 |\n| 文案规范 | 步骤用动宾短语；判断为可判定条件；分支出口清晰不交叉 |\n","slug":"tools","published":1,"updated":"2025-10-09T14:50:51.911Z","_id":"cmg0gdxzm0007k49k97mv0uu2","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#git\">git</a><ul>\n<li><a href=\"#%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80\">修改远程仓库地址</a></li>\n<li><a href=\"#%E6%AD%A3%E7%A1%AE%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6\">正确删除文件</a></li>\n<li><a href=\"#git-%E5%88%86%E6%94%AF%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-url-%E4%B8%8D%E5%8C%B9%E9%85%8D\">Git 分支配置与远程仓库URL不匹配</a></li>\n</ul>\n</li>\n<li><a href=\"#md\">md</a><ul>\n<li><a href=\"#%E6%8F%92%E5%85%A5%E9%93%BE%E6%8E%A5\">插入链接</a></li>\n<li><a href=\"#%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87\">插入图片</a></li>\n<li><a href=\"#%E5%AF%BC%E5%87%BA%E4%B8%BApdf\">导出为pdf</a></li>\n<li><a href=\"#%E5%86%99%E7%9B%AE%E5%BD%95\">写目录</a></li>\n</ul>\n</li>\n<li><a href=\"#linux\">Linux</a></li>\n<li><a href=\"#Hexo\">hexo</a></li>\n<li><a href=\"#%E5%BF%AB%E6%8D%B7%E9%94%AE\">快捷键</a></li>\n<li><a href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\">流程图</a></li>\n</ul>\n<h1 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h1><h3 id=\"修改远程仓库地址\"><a href=\"#修改远程仓库地址\" class=\"headerlink\" title=\"修改远程仓库地址\"></a>修改远程仓库地址</h3><ul>\n<li>查看远程仓库指向<br>git remote -v</li>\n</ul>\n<h3 id=\"正确删除文件\"><a href=\"#正确删除文件\" class=\"headerlink\" title=\"正确删除文件\"></a>正确删除文件</h3><ul>\n<li>git rm -r name &#x2F;&#x2F;remove, recursive递归, 定位到根目录，name直接从下一级开始。</li>\n</ul>\n<h3 id=\"Git-分支配置与远程仓库-URL-不匹配\"><a href=\"#Git-分支配置与远程仓库-URL-不匹配\" class=\"headerlink\" title=\"Git 分支配置与远程仓库 URL 不匹配\"></a>Git 分支配置与远程仓库 URL 不匹配</h3><ul>\n<li>当看到推送目标与预期不符时，检查 git config branch.&lt;分支名&gt;.remote 配置</li>\n<li>确保分支的远程仓库配置与 git remote -v 显示的 URL 一致</li>\n<li>使用 git config –list | grep branch 可以快速查看所有分支配置</li>\n</ul>\n<h1 id=\"md\"><a href=\"#md\" class=\"headerlink\" title=\"md\"></a>md</h1><h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><ul>\n<li>作者：<code>[jx&#39;s blog]</code>+<code>(https://jiangxu.net/ &quot;个人博客&quot;)</code></li>\n</ul>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><ul>\n<li>将图片放到 <code>source/img/</code>（发布后路径为 <code>/img/</code>）</li>\n<li>桌面图片复制到项目：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> ~/Desktop/screenshot.png /Users/jiangxu/Documents/code/myblog/source/img/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>也可以在访达直接拖拽吧</p>\n</blockquote>\n<ul>\n<li>在 Markdown 中引用：</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">截图说明</span>](<span class=\"link\">/img/screenshot.png</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>需要控制大小（可选）：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/img/screenshot.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;截图说明&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>文件名尽量用英文与连字符，避免空格。</li>\n</ul>\n<h3 id=\"导出为pdf\"><a href=\"#导出为pdf\" class=\"headerlink\" title=\"导出为pdf\"></a>导出为pdf</h3><ul>\n<li>在md文件页面 <code>cmd+Shift+P</code></li>\n</ul>\n<h3 id=\"写目录\"><a href=\"#写目录\" class=\"headerlink\" title=\"写目录\"></a>写目录</h3><ul>\n<li><code>- [显示在目录中的文字](#实际标题的锚点格式)</code></li>\n<li>锚点格式为：去掉标题中所有标点（含数字后的点），空格换为连字符<code>-</code>，保留中文和数字，不区分大小写。</li>\n</ul>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><ul>\n<li>pwd 查看当前路径</li>\n<li>rm -d name&#x2F;directory 删除空目录</li>\n<li>rm -r &#x2F;&#x2F;recursive递归，删除非空目录</li>\n<li>rm -f &#x2F;&#x2F;force</li>\n<li>rm -rf &#x2F;&#x2F;-r和-f一起</li>\n</ul>\n<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><ul>\n<li>hexo new “postname”,</li>\n</ul>\n<h1 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h1><ul>\n<li>撤销 <code>cmd</code> + <code>z</code></li>\n<li>左移 <code>cmd</code> + <code>[</code></li>\n</ul>\n<h1 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h1><h3 id=\"连线与布局\"><a href=\"#连线与布局\" class=\"headerlink\" title=\"连线与布局\"></a>连线与布局</h3><table>\n<thead>\n<tr>\n<th>主题</th>\n<th>建议&#x2F;操作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>连线类型</td>\n<td>使用正交连线（Orthogonal）保持直角转折、减少视觉噪音</td>\n</tr>\n<tr>\n<td>连接点与拐点</td>\n<td>悬停形状边缘蓝点连线；双击连线加拐点；拖动黄色手柄统一连线间距</td>\n</tr>\n<tr>\n<td>线条标注</td>\n<td>选中连线直接输入文字；在判断分支线上标注“是&#x2F;否”</td>\n</tr>\n<tr>\n<td>对齐与分布</td>\n<td>Arrange → Align&#x2F;Distribute；Tidy up 一键整理网格化布局</td>\n</tr>\n<tr>\n<td>网格与吸附</td>\n<td>View → Grid、Snap to Grid 打开更易对齐</td>\n</tr>\n<tr>\n<td>分组与图层</td>\n<td>Cmd+G 分组、Cmd+Shift+G 取消；右键锁定；View → Layers 分离背景&#x2F;说明&#x2F;主流程</td>\n</tr>\n<tr>\n<td>样式统一</td>\n<td>右侧 Format 面板统一线条粗细（如 1.5–2px）、箭头、字体、颜色</td>\n</tr>\n</tbody></table>\n<h3 id=\"导出与协作\"><a href=\"#导出与协作\" class=\"headerlink\" title=\"导出与协作\"></a>导出与协作</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th>建议</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>保存</td>\n<td>使用 .drawio 或 .drawio.png（含可编辑元数据）便于后续编辑</td>\n</tr>\n<tr>\n<td>导出</td>\n<td>File → Export as → PNG &#x2F; SVG &#x2F; PDF</td>\n</tr>\n<tr>\n<td>背景</td>\n<td>勾选 Transparent Background（透明背景）</td>\n</tr>\n<tr>\n<td>使用场景</td>\n<td>SVG：网页；PNG：博客；PDF：打印</td>\n</tr>\n<tr>\n<td>版本&#x2F;备份</td>\n<td>本地或云端（Git、Google Drive、OneDrive），必要时使用版本历史</td>\n</tr>\n</tbody></table>\n<h3 id=\"小技巧（draw-io）\"><a href=\"#小技巧（draw-io）\" class=\"headerlink\" title=\"小技巧（draw.io）\"></a>小技巧（draw.io）</h3><table>\n<thead>\n<tr>\n<th>动作</th>\n<th>快捷&#x2F;用法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>快速连线</td>\n<td>拖动形状四角蓝箭头，自动连线并生成新节点</td>\n</tr>\n<tr>\n<td>复制&#x2F;对齐</td>\n<td>Option(Alt) 拖拽复制；Cmd+D 复制；按住 Shift 拖动保持水平&#x2F;垂直</td>\n</tr>\n<tr>\n<td>多页图</td>\n<td>底部 Pages 管理，将子流程放到独立页面并从子流程符号跳转</td>\n</tr>\n<tr>\n<td>页面设置</td>\n<td>File → Page Setup 调整页面、边距，或开启自适应内容</td>\n</tr>\n<tr>\n<td>搜索图形</td>\n<td>左侧 Shapes 搜索“flowchart&#x2F;uml”，或 + More Shapes 启用更多库</td>\n</tr>\n<tr>\n<td>文案规范</td>\n<td>步骤用动宾短语；判断为可判定条件；分支出口清晰不交叉</td>\n</tr>\n</tbody></table>\n","excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#git\">git</a><ul>\n<li><a href=\"#%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80\">修改远程仓库地址</a></li>\n<li><a href=\"#%E6%AD%A3%E7%A1%AE%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6\">正确删除文件</a></li>\n<li><a href=\"#git-%E5%88%86%E6%94%AF%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-url-%E4%B8%8D%E5%8C%B9%E9%85%8D\">Git 分支配置与远程仓库URL不匹配</a></li>\n</ul>\n</li>\n<li><a href=\"#md\">md</a><ul>\n<li><a href=\"#%E6%8F%92%E5%85%A5%E9%93%BE%E6%8E%A5\">插入链接</a></li>\n<li><a href=\"#%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87\">插入图片</a></li>\n<li><a href=\"#%E5%AF%BC%E5%87%BA%E4%B8%BApdf\">导出为pdf</a></li>\n<li><a href=\"#%E5%86%99%E7%9B%AE%E5%BD%95\">写目录</a></li>\n</ul>\n</li>\n<li><a href=\"#linux\">Linux</a></li>\n<li><a href=\"#Hexo\">hexo</a></li>\n<li><a href=\"#%E5%BF%AB%E6%8D%B7%E9%94%AE\">快捷键</a></li>\n<li><a href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\">流程图</a></li>\n</ul>\n<h1 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h1><h3 id=\"修改远程仓库地址\"><a href=\"#修改远程仓库地址\" class=\"headerlink\" title=\"修改远程仓库地址\"></a>修改远程仓库地址</h3><ul>\n<li>查看远程仓库指向<br>git remote -v</li>\n</ul>\n<h3 id=\"正确删除文件\"><a href=\"#正确删除文件\" class=\"headerlink\" title=\"正确删除文件\"></a>正确删除文件</h3><ul>\n<li>git rm -r name &#x2F;&#x2F;remove, recursive递归, 定位到根目录，name直接从下一级开始。</li>\n</ul>\n<h3 id=\"Git-分支配置与远程仓库-URL-不匹配\"><a href=\"#Git-分支配置与远程仓库-URL-不匹配\" class=\"headerlink\" title=\"Git 分支配置与远程仓库 URL 不匹配\"></a>Git 分支配置与远程仓库 URL 不匹配</h3><ul>\n<li>当看到推送目标与预期不符时，检查 git config branch.&lt;分支名&gt;.remote 配置</li>\n<li>确保分支的远程仓库配置与 git remote -v 显示的 URL 一致</li>\n<li>使用 git config –list | grep branch 可以快速查看所有分支配置</li>\n</ul>\n<h1 id=\"md\"><a href=\"#md\" class=\"headerlink\" title=\"md\"></a>md</h1><h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><ul>\n<li>作者：<code>[jx&#39;s blog]</code>+<code>(https://jiangxu.net/ &quot;个人博客&quot;)</code></li>\n</ul>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><ul>\n<li>将图片放到 <code>source/img/</code>（发布后路径为 <code>/img/</code>）</li>\n<li>桌面图片复制到项目：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> ~/Desktop/screenshot.png /Users/jiangxu/Documents/code/myblog/source/img/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>也可以在访达直接拖拽吧</p>\n</blockquote>\n<ul>\n<li>在 Markdown 中引用：</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">截图说明</span>](<span class=\"link\">/img/screenshot.png</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>需要控制大小（可选）：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/img/screenshot.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;截图说明&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>文件名尽量用英文与连字符，避免空格。</li>\n</ul>\n<h3 id=\"导出为pdf\"><a href=\"#导出为pdf\" class=\"headerlink\" title=\"导出为pdf\"></a>导出为pdf</h3><ul>\n<li>在md文件页面 <code>cmd+Shift+P</code></li>\n</ul>\n<h3 id=\"写目录\"><a href=\"#写目录\" class=\"headerlink\" title=\"写目录\"></a>写目录</h3><ul>\n<li><code>- [显示在目录中的文字](#实际标题的锚点格式)</code></li>\n<li>锚点格式为：去掉标题中所有标点（含数字后的点），空格换为连字符<code>-</code>，保留中文和数字，不区分大小写。</li>\n</ul>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><ul>\n<li>pwd 查看当前路径</li>\n<li>rm -d name&#x2F;directory 删除空目录</li>\n<li>rm -r &#x2F;&#x2F;recursive递归，删除非空目录</li>\n<li>rm -f &#x2F;&#x2F;force</li>\n<li>rm -rf &#x2F;&#x2F;-r和-f一起</li>\n</ul>\n<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><ul>\n<li>hexo new “postname”,</li>\n</ul>\n<h1 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h1><ul>\n<li>撤销 <code>cmd</code> + <code>z</code></li>\n<li>左移 <code>cmd</code> + <code>[</code></li>\n</ul>\n<h1 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h1><h3 id=\"连线与布局\"><a href=\"#连线与布局\" class=\"headerlink\" title=\"连线与布局\"></a>连线与布局</h3><table>\n<thead>\n<tr>\n<th>主题</th>\n<th>建议&#x2F;操作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>连线类型</td>\n<td>使用正交连线（Orthogonal）保持直角转折、减少视觉噪音</td>\n</tr>\n<tr>\n<td>连接点与拐点</td>\n<td>悬停形状边缘蓝点连线；双击连线加拐点；拖动黄色手柄统一连线间距</td>\n</tr>\n<tr>\n<td>线条标注</td>\n<td>选中连线直接输入文字；在判断分支线上标注“是&#x2F;否”</td>\n</tr>\n<tr>\n<td>对齐与分布</td>\n<td>Arrange → Align&#x2F;Distribute；Tidy up 一键整理网格化布局</td>\n</tr>\n<tr>\n<td>网格与吸附</td>\n<td>View → Grid、Snap to Grid 打开更易对齐</td>\n</tr>\n<tr>\n<td>分组与图层</td>\n<td>Cmd+G 分组、Cmd+Shift+G 取消；右键锁定；View → Layers 分离背景&#x2F;说明&#x2F;主流程</td>\n</tr>\n<tr>\n<td>样式统一</td>\n<td>右侧 Format 面板统一线条粗细（如 1.5–2px）、箭头、字体、颜色</td>\n</tr>\n</tbody></table>\n<h3 id=\"导出与协作\"><a href=\"#导出与协作\" class=\"headerlink\" title=\"导出与协作\"></a>导出与协作</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th>建议</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>保存</td>\n<td>使用 .drawio 或 .drawio.png（含可编辑元数据）便于后续编辑</td>\n</tr>\n<tr>\n<td>导出</td>\n<td>File → Export as → PNG &#x2F; SVG &#x2F; PDF</td>\n</tr>\n<tr>\n<td>背景</td>\n<td>勾选 Transparent Background（透明背景）</td>\n</tr>\n<tr>\n<td>使用场景</td>\n<td>SVG：网页；PNG：博客；PDF：打印</td>\n</tr>\n<tr>\n<td>版本&#x2F;备份</td>\n<td>本地或云端（Git、Google Drive、OneDrive），必要时使用版本历史</td>\n</tr>\n</tbody></table>\n<h3 id=\"小技巧（draw-io）\"><a href=\"#小技巧（draw-io）\" class=\"headerlink\" title=\"小技巧（draw.io）\"></a>小技巧（draw.io）</h3><table>\n<thead>\n<tr>\n<th>动作</th>\n<th>快捷&#x2F;用法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>快速连线</td>\n<td>拖动形状四角蓝箭头，自动连线并生成新节点</td>\n</tr>\n<tr>\n<td>复制&#x2F;对齐</td>\n<td>Option(Alt) 拖拽复制；Cmd+D 复制；按住 Shift 拖动保持水平&#x2F;垂直</td>\n</tr>\n<tr>\n<td>多页图</td>\n<td>底部 Pages 管理，将子流程放到独立页面并从子流程符号跳转</td>\n</tr>\n<tr>\n<td>页面设置</td>\n<td>File → Page Setup 调整页面、边距，或开启自适应内容</td>\n</tr>\n<tr>\n<td>搜索图形</td>\n<td>左侧 Shapes 搜索“flowchart&#x2F;uml”，或 + More Shapes 启用更多库</td>\n</tr>\n<tr>\n<td>文案规范</td>\n<td>步骤用动宾短语；判断为可判定条件；分支出口清晰不交叉</td>\n</tr>\n</tbody></table>\n"},{"title":"learning materials","date":"2025-08-14T06:02:13.000Z","_content":"\n- 作者blog：[jx's blog](https://jianxgu.net/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n\n## 目录\n\n- [考研最全汇总](#考研最全汇总)\n  - [公共课(数学英语政治)](#公共课数学英语政治)\n  - [专业课](#专业课)\n- [English](#english)\n- [Code](#code)\n- [Mathematics](#mathmatics)\n- [数学建模这一块](#数学建模这一块)\n- [保研这一块](#保研这一块)\n\n---\n> 若失效请联系q3465192960\n\n\n### 考研最全汇总\n- 公共课(数学英语政治)\n`链接:`https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\n\n- 专业课\n`链接:`https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn \n> 提取码: hvjn \n![](/img/math.png)\n\n### English\n- summarize 极力推荐\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n\n### Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n\n\n# mathmatics\n- 除了群文件的，本人略有一些成果：  \n  【腾讯文档】高等数学上册思维导图及公式汇总  \n  `链接：`https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind  \n  > 禁二传\n\n- **26张宇基础30讲**  \n  复制整段内容，打开最新版「夸克APP」即可获取  \n  `链接：`https://pan.quark.cn/s/4c425e839d51\n\n- **考研真相**  \n  `链接:` https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA  \n  `提取码:` euas\n\n- **660**\n  `链接：`https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\n\n# 数学建模这一块\n- **较全的资源**  \n  `链接:` https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef  \n  `提取码:` u7ef  \n  （复制这段内容后打开百度网盘手机App，操作更方便哦）\n\n- **大师兄数学建模**  \n  `链接：`https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA  \n  `提取码：`3xjx\n\n- **清风数学建模**  \n  `论文课件下载链接：`  \n  https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9  \n  `提取码:` jmz9 \n\n- **建模老哥**  \n  `数学建模算法、编程、写作课件`  \n  `链接:` https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020  \n  `提取码:` 1020 \n\n\n  \n# 保研这一块\n\n- 夏令营和预推免通知网站（通知全量实时更新）：  \n  `Github：`  \n  https://github.com/shenyanpai/awesome-summer-camp-2025  \n  `Gitee：`  \n  https://gitee.com/shenyanpai/awesome-summer-camp-2025\n\n","source":"_posts/study-materials.md","raw":"---\ntitle: learning materials\ndate: 2025-08-14 14:02:13\ncategories:\n  - study\ntags:\n  - 资料\n---\n\n- 作者blog：[jx's blog](https://jianxgu.net/ \"个人博客\")\n- github地址：[cpp-notes](https://github.com/Jaxon1216/cpp-notes)\n\n## 目录\n\n- [考研最全汇总](#考研最全汇总)\n  - [公共课(数学英语政治)](#公共课数学英语政治)\n  - [专业课](#专业课)\n- [English](#english)\n- [Code](#code)\n- [Mathematics](#mathmatics)\n- [数学建模这一块](#数学建模这一块)\n- [保研这一块](#保研这一块)\n\n---\n> 若失效请联系q3465192960\n\n\n### 考研最全汇总\n- 公共课(数学英语政治)\n`链接:`https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\n\n- 专业课\n`链接:`https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn \n> 提取码: hvjn \n![](/img/math.png)\n\n### English\n- summarize 极力推荐\n`链接:`https://kdocs.cn/l/cnddY5m0PNQw\n\n### Code\n\n- 抖音英雄\n`链接:`https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5 \n\n- c++primer\n`链接:`https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\n\n- 数据结构严蔚敏\n`链接:`https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg \n> 提取码: bjsg \n\n\n# mathmatics\n- 除了群文件的，本人略有一些成果：  \n  【腾讯文档】高等数学上册思维导图及公式汇总  \n  `链接：`https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind  \n  > 禁二传\n\n- **26张宇基础30讲**  \n  复制整段内容，打开最新版「夸克APP」即可获取  \n  `链接：`https://pan.quark.cn/s/4c425e839d51\n\n- **考研真相**  \n  `链接:` https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA  \n  `提取码:` euas\n\n- **660**\n  `链接：`https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\n\n# 数学建模这一块\n- **较全的资源**  \n  `链接:` https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef  \n  `提取码:` u7ef  \n  （复制这段内容后打开百度网盘手机App，操作更方便哦）\n\n- **大师兄数学建模**  \n  `链接：`https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA  \n  `提取码：`3xjx\n\n- **清风数学建模**  \n  `论文课件下载链接：`  \n  https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9  \n  `提取码:` jmz9 \n\n- **建模老哥**  \n  `数学建模算法、编程、写作课件`  \n  `链接:` https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020  \n  `提取码:` 1020 \n\n\n  \n# 保研这一块\n\n- 夏令营和预推免通知网站（通知全量实时更新）：  \n  `Github：`  \n  https://github.com/shenyanpai/awesome-summer-camp-2025  \n  `Gitee：`  \n  https://gitee.com/shenyanpai/awesome-summer-camp-2025\n\n","slug":"study-materials","published":1,"updated":"2025-10-10T05:50:16.640Z","_id":"cmg0gdxzt0009k49k3iwi2vh2","comments":1,"layout":"post","photos":[],"content":"<ul>\n<li>作者blog：<a href=\"https://jianxgu.net/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#%E8%80%83%E7%A0%94%E6%9C%80%E5%85%A8%E6%B1%87%E6%80%BB\">考研最全汇总</a><ul>\n<li><a href=\"#%E5%85%AC%E5%85%B1%E8%AF%BE%E6%95%B0%E5%AD%A6%E8%8B%B1%E8%AF%AD%E6%94%BF%E6%B2%BB\">公共课(数学英语政治)</a></li>\n<li><a href=\"#%E4%B8%93%E4%B8%9A%E8%AF%BE\">专业课</a></li>\n</ul>\n</li>\n<li><a href=\"#english\">English</a></li>\n<li><a href=\"#code\">Code</a></li>\n<li><a href=\"#mathmatics\">Mathematics</a></li>\n<li><a href=\"#%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%BF%99%E4%B8%80%E5%9D%97\">数学建模这一块</a></li>\n<li><a href=\"#%E4%BF%9D%E7%A0%94%E8%BF%99%E4%B8%80%E5%9D%97\">保研这一块</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>若失效请联系q3465192960</p>\n</blockquote>\n<h3 id=\"考研最全汇总\"><a href=\"#考研最全汇总\" class=\"headerlink\" title=\"考研最全汇总\"></a>考研最全汇总</h3><ul>\n<li><p>公共课(数学英语政治)<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\">https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666</a></p>\n</li>\n<li><p>专业课<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn\">https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn</a> </p>\n<blockquote>\n<p>提取码: hvjn<br><img src=\"/img/math.png\"></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><ul>\n<li>summarize 极力推荐<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"mathmatics\"><a href=\"#mathmatics\" class=\"headerlink\" title=\"mathmatics\"></a>mathmatics</h1><ul>\n<li><p>除了群文件的，本人略有一些成果：<br>【腾讯文档】高等数学上册思维导图及公式汇总<br><code>链接：</code><a href=\"https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind\">https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind</a>  </p>\n<blockquote>\n<p>禁二传</p>\n</blockquote>\n</li>\n<li><p><strong>26张宇基础30讲</strong><br>复制整段内容，打开最新版「夸克APP」即可获取<br><code>链接：</code><a href=\"https://pan.quark.cn/s/4c425e839d51\">https://pan.quark.cn/s/4c425e839d51</a></p>\n</li>\n<li><p><strong>考研真相</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA\">https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA</a><br><code>提取码:</code> euas</p>\n</li>\n<li><p><strong>660</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\">https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr</a></p>\n</li>\n</ul>\n<h1 id=\"数学建模这一块\"><a href=\"#数学建模这一块\" class=\"headerlink\" title=\"数学建模这一块\"></a>数学建模这一块</h1><ul>\n<li><p><strong>较全的资源</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef\">https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef</a><br><code>提取码:</code> u7ef<br>（复制这段内容后打开百度网盘手机App，操作更方便哦）</p>\n</li>\n<li><p><strong>大师兄数学建模</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA\">https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA</a><br><code>提取码：</code>3xjx</p>\n</li>\n<li><p><strong>清风数学建模</strong><br><code>论文课件下载链接：</code><br><a href=\"https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9\">https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9</a><br><code>提取码:</code> jmz9 </p>\n</li>\n<li><p><strong>建模老哥</strong><br><code>数学建模算法、编程、写作课件</code><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020\">https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020</a><br><code>提取码:</code> 1020</p>\n</li>\n</ul>\n<h1 id=\"保研这一块\"><a href=\"#保研这一块\" class=\"headerlink\" title=\"保研这一块\"></a>保研这一块</h1><ul>\n<li>夏令营和预推免通知网站（通知全量实时更新）：<br><code>Github：</code><br><a href=\"https://github.com/shenyanpai/awesome-summer-camp-2025\">https://github.com/shenyanpai/awesome-summer-camp-2025</a><br><code>Gitee：</code><br><a href=\"https://gitee.com/shenyanpai/awesome-summer-camp-2025\">https://gitee.com/shenyanpai/awesome-summer-camp-2025</a></li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>作者blog：<a href=\"https://jianxgu.net/\" title=\"个人博客\">jx’s blog</a></li>\n<li>github地址：<a href=\"https://github.com/Jaxon1216/cpp-notes\">cpp-notes</a></li>\n</ul>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#%E8%80%83%E7%A0%94%E6%9C%80%E5%85%A8%E6%B1%87%E6%80%BB\">考研最全汇总</a><ul>\n<li><a href=\"#%E5%85%AC%E5%85%B1%E8%AF%BE%E6%95%B0%E5%AD%A6%E8%8B%B1%E8%AF%AD%E6%94%BF%E6%B2%BB\">公共课(数学英语政治)</a></li>\n<li><a href=\"#%E4%B8%93%E4%B8%9A%E8%AF%BE\">专业课</a></li>\n</ul>\n</li>\n<li><a href=\"#english\">English</a></li>\n<li><a href=\"#code\">Code</a></li>\n<li><a href=\"#mathmatics\">Mathematics</a></li>\n<li><a href=\"#%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%BF%99%E4%B8%80%E5%9D%97\">数学建模这一块</a></li>\n<li><a href=\"#%E4%BF%9D%E7%A0%94%E8%BF%99%E4%B8%80%E5%9D%97\">保研这一块</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>若失效请联系q3465192960</p>\n</blockquote>\n<h3 id=\"考研最全汇总\"><a href=\"#考研最全汇总\" class=\"headerlink\" title=\"考研最全汇总\"></a>考研最全汇总</h3><ul>\n<li><p>公共课(数学英语政治)<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666\">https://pan.baidu.com/s/1zgpGTRLMNmOZdvWCP0cEYQ?pwd=6666</a></p>\n</li>\n<li><p>专业课<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn\">https://pan.baidu.com/s/1lEggoQwjXgxpLEdtBK1kuw?pwd=hvjn</a> </p>\n<blockquote>\n<p>提取码: hvjn<br><img src=\"/img/math.png\"></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><ul>\n<li>summarize 极力推荐<br><code>链接:</code><a href=\"https://kdocs.cn/l/cnddY5m0PNQw\">https://kdocs.cn/l/cnddY5m0PNQw</a></li>\n</ul>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><ul>\n<li><p>抖音英雄<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5\">https://pan.baidu.com/s/1F79nOTr-lSiADpp8n5AhrQ?pwd=mkd5</a> </p>\n</li>\n<li><p>c++primer<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq\">https://pan.baidu.com/s/1t39Cc-P5L6QxCmbqqgAF9A?pwd=m0rq</a></p>\n</li>\n<li><p>数据结构严蔚敏<br><code>链接:</code><a href=\"https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg\">https://pan.baidu.com/s/1wG_6mUkq0fZdXZvoBV3pTg?pwd=bjsg</a> </p>\n<blockquote>\n<p>提取码: bjsg</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"mathmatics\"><a href=\"#mathmatics\" class=\"headerlink\" title=\"mathmatics\"></a>mathmatics</h1><ul>\n<li><p>除了群文件的，本人略有一些成果：<br>【腾讯文档】高等数学上册思维导图及公式汇总<br><code>链接：</code><a href=\"https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind\">https://docs.qq.com/mind/DRnROeGNxTVFPdndK?mode=mind</a>  </p>\n<blockquote>\n<p>禁二传</p>\n</blockquote>\n</li>\n<li><p><strong>26张宇基础30讲</strong><br>复制整段内容，打开最新版「夸克APP」即可获取<br><code>链接：</code><a href=\"https://pan.quark.cn/s/4c425e839d51\">https://pan.quark.cn/s/4c425e839d51</a></p>\n</li>\n<li><p><strong>考研真相</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA\">https://pan.baidu.com/s/1mmp2vJbaR3gpBObRAIquqA</a><br><code>提取码:</code> euas</p>\n</li>\n<li><p><strong>660</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr\">https://pan.baidu.com/s/1hm8vY1rgw6cA0Ve4OSWa6A?pwd=2tcr</a></p>\n</li>\n</ul>\n<h1 id=\"数学建模这一块\"><a href=\"#数学建模这一块\" class=\"headerlink\" title=\"数学建模这一块\"></a>数学建模这一块</h1><ul>\n<li><p><strong>较全的资源</strong><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef\">https://pan.baidu.com/s/11dGFB_eFxmmhOgeUBDNJ1w?pwd=u7ef</a><br><code>提取码:</code> u7ef<br>（复制这段内容后打开百度网盘手机App，操作更方便哦）</p>\n</li>\n<li><p><strong>大师兄数学建模</strong><br><code>链接：</code><a href=\"https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA\">https://pan.baidu.com/s/13b756L-IxbSkVxFBHY12GA</a><br><code>提取码：</code>3xjx</p>\n</li>\n<li><p><strong>清风数学建模</strong><br><code>论文课件下载链接：</code><br><a href=\"https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9\">https://pan.baidu.com/s/1H5nULaZip_kUuEMI07R0Pg?pwd=jmz9</a><br><code>提取码:</code> jmz9 </p>\n</li>\n<li><p><strong>建模老哥</strong><br><code>数学建模算法、编程、写作课件</code><br><code>链接:</code> <a href=\"https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020\">https://pan.baidu.com/s/1hWrNSUobVV8vI8zc7381Rg?pwd=1020</a><br><code>提取码:</code> 1020</p>\n</li>\n</ul>\n<h1 id=\"保研这一块\"><a href=\"#保研这一块\" class=\"headerlink\" title=\"保研这一块\"></a>保研这一块</h1><ul>\n<li>夏令营和预推免通知网站（通知全量实时更新）：<br><code>Github：</code><br><a href=\"https://github.com/shenyanpai/awesome-summer-camp-2025\">https://github.com/shenyanpai/awesome-summer-camp-2025</a><br><code>Gitee：</code><br><a href=\"https://gitee.com/shenyanpai/awesome-summer-camp-2025\">https://gitee.com/shenyanpai/awesome-summer-camp-2025</a></li>\n</ul>\n"},{"title":"用 Vercel + Hexo + GitHub 打造自动更新发布的个人网站（以 jiangxu.net 为例）","date":"2025-09-18T04:00:00.000Z","_content":"\n你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 `git push`，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 `jiangxu.net` 为例，顺带聊聊背后的技术原理。\n\n### 术语速查表（新手友好）\n\n| 术语 | 解释 |\n| --- | --- |\n| Webhook | 当仓库发生事件（如 push）时，GitHub 主动向一个 URL 发送 HTTP 请求，通知第三方（这里是 Vercel）触发自动流程。|\n| 原子发布 | 新版本先在后台完整构建并准备好，随后用一次“瞬间切换”替换旧版本；全站要么是旧版，要么是新版，不会出现一半新一半旧；出问题可秒级回滚。|\n| CDN | 内容分发网络，把静态资源复制到多个边缘节点，用户就近访问，延迟更低、带宽更大、稳定性更好。|\n| 全球 CDN | 覆盖全球多个区域的 CDN，让不同地区的访客都能就近获取内容；Vercel 发布会把 `public/` 分发到其全球边缘节点。|\n| 根域（apex） | 不带子域的域名，例如 `jiangxu.net`。通常用 A 记录指向服务商提供的 IP（如 `76.76.21.21`）。|\n| www 子域 | 带 `www` 的子域，例如 `www.jiangxu.net`。通常用 CNAME 指向托管商域名（如 `cname.vercel-dns.com`），并可在托管侧设置重定向到根域或相反方向。|\n| 静态化 | 预先把页面生成成静态的 HTML/CSS/JS 文件（例如 Hexo 的 `hexo generate` 生成 `public/`），上线时无需后端渲染。|\n| PR（Pull Request） | 在 Git 平台上发起的“合并申请”，用于变更的讨论与审核；每个 PR 在 Vercel 都会有独立的 Preview 环境，方便预览和评审。|\n\n\n> 小注：\n> - A 记录 = 把域名直接指向一个 IPv4 地址（IPv6 用 AAAA）。例：`jiangxu.net -> A 76.76.21.21`。\n> - CNAME = 给域名起“别名”，把一个域名指向另一个域名，再由对方域名解析到 IP。例：`www.jiangxu.net -> CNAME cname.vercel-dns.com`。\n> - 通常根域名用 A 记录，`www` 子域用 CNAME（少数 DNS 支持根域“平展”别名，叫 ALIAS/ANAME）。\n\n## 我们要得到什么\n\n- 写文章 → `git push` → 几十秒后网站自动发布\n- 自定义域名 `jiangxu.net`，含 `www` 子域\n- 全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）\n\n## 项目现状（以本仓库为例）\n\n本项目是一个标准 Hexo 项目，核心配置如下：\n\n```yaml\n# _config.yml（节选）\nurl: https://jiangxu.net/\ntheme: pure\npost_asset_folder: true\nrelative_link: true\nsyntax_highlighter: highlight.js\n```\n\n```json\n// package.json（节选）\n{\n  \"hexo\": { \"version\": \"7.3.0\" },\n  \"scripts\": {\n    \"start\": \"hexo server\",\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"clean:deploy\": \"hexo clean && hexo generate && hexo deploy\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.3.0\",\n    \"hexo-renderer-marked\": \"^7.0.0\",\n    \"hexo-server\": \"^3.0.0\"\n  }\n}\n```\n\n注意：项目里虽然安装了 `hexo-deployer-git`，但我们将由 Vercel 来托管与发布静态文件，不必再用 `hexo deploy` 推到 GitHub Pages。Vercel 在构建时会执行 `npm ci && npm run build`（或者你自定义的命令），生成 `public/` 目录并发布。\n\n## 架构一图流（你可以先收藏再细看）\n\n```mermaid\nflowchart LR\n  A[本地写 Markdown] --> B[git push 到 GitHub 仓库]\n  B --> C[GitHub 触发 Webhook 通知 Vercel]\n  C --> D[Vercel 拉取最新提交]\n  D --> E[执行构建: hexo generate]\n  E --> F[生成静态站点 public/]\n  F --> G[Vercel 原子发布到全球 CDN]\n  G --> H[用户访问 jiangxu.net 获取最新内容]\n```\n\n## 一步步搭起来\n\n### 1）把 Hexo 项目放到 GitHub\n\n如果你已经有仓库，跳过本节。否则：\n\n```bash\ngit init\ngit remote add origin https://github.com/<your-username>/<your-repo>.git\ngit add .\ngit commit -m \"init blog\"\ngit branch -M main\ngit push -u origin main\n```\n\n### 2）在 Vercel 里“导入”这个仓库\n\n1. 用 GitHub 账号登录 Vercel。\n2. New Project → 选中你的仓库 → Import。\n3. 配置：\n   - Framework Preset：选择 Hexo（或手动）\n   - Install Command：默认（推荐 `npm ci`）\n   - Build Command：`hexo generate`\n   - Output Directory：`public`\n4. 点击 Deploy。几十秒后会拿到一个 `*.vercel.app` 的临时域名。\n\n此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。\n\n### 3）绑定自定义域名 jiangxu.net\n\n在项目 → Settings → Domains 里添加 `jiangxu.net` 与 `www.jiangxu.net`，按提示去域名注册商配置 DNS：\n\n- 根域（apex）：添加 A 记录 → 指向 `76.76.21.21`（Vercel 的 Anycast IP）\n- `www` 子域：添加 CNAME → 指向 `cname.vercel-dns.com`\n\n等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 `www` 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。\n\n顺带一提，Hexo 的 `_config.yml` 已把 `url` 设为 `https://jiangxu.net/`：\n\n```yaml\nurl: https://jiangxu.net/\npretty_urls:\n  trailing_index: true\n  trailing_html: true\n```\n\n这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。\n\n### 4）写作与发布流程（真正的“自动化”）\n\n日常只做三步：\n\n```bash\nhexo new \"我的新文章\"  # 生成草稿/文章\n# 写！配图放到同名资源文件夹（post_asset_folder: true）\ngit add . && git commit -m \"post: 我的新文章\" && git push\n```\n\n然后泡杯咖啡，等 Vercel 自动完成构建与发布。\n\n## 这些技术原理，知其所以然更香\n\n- Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。\n- CI/CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 `hexo generate` → 上传 `public/`。\n- 静态化：Hexo 预渲染为纯静态文件（HTML/CSS/JS），天然适合 CDN，延迟低、可承载高并发。\n- 原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。\n- 缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。\n- 预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。\n\n## 常用实践与“避坑锦囊”\n\n- 资源管理：`post_asset_folder: true` 已开启。用 `source/_posts/我的新文章/` 管理配图，Markdown 里直接相对路径引用，迁移/重构都不怕。\n- 相对链接：`relative_link: true` 可减少跨域/环境差异带来的链接问题。\n- 主题与样式：当前主题为 `pure`。如果你改了主题静态资源路径，别忘了清缓存再构建：`npm run clean && npm run build`。\n- 不混用两套部署：既然用了 Vercel，就不必再通过 `hexo-deployer-git` 推 GitHub Pages，避免“双主发布”互相覆盖。\n- Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 `NODE_VERSION`（如 18/20）并使用 `npm ci`。\n\n## DNS 解析小抄（再来一张图）\n\n```mermaid\ngraph TD\n  User[访客浏览器] -->|jiangxu.net| DNS[权威 DNS]\n  DNS -->|A 76.76.21.21| Vercel[Vercel Edge Network]\n  User2[访客浏览器] -->|www.jiangxu.net| DNS2[权威 DNS]\n  DNS2 -->|CNAME cname.vercel-dns.com| Vercel\n  Vercel --> CDN[全球 CDN 节点]\n  CDN --> Site[静态站点 public/]\n```\n\n## 收尾：写作体验从“还行”升到“上头”\n\n现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。\n\n如果你想继续进阶：\n\n- 在 PR 的 Preview 环境里做 A/B 尝试（比如新主题、新排版）\n- 接入评论系统（如 Gitalk/Giscus），在 Vercel 环境变量里配置 Token\n- 在构建脚本里加上字数统计、站点地图、SEO 插件\n\n愿你写得开心，站点常新。`jiangxu.net` 我们下次见！\n\n\n### 面试实战自述（段落版）\n\n直白说，我把写博客变成了“像发朋友圈一样简单”：我在本地用 Markdown 写完，`git push` 一下，几十秒后网站就自动更新。我用 Hexo 把文章提前生成为静态网页（不需要服务器算），代码放在 GitHub，Vercel 负责自动构建和发布，并把网页分发到全球的 CDN 节点，让离用户近的机器来服务，访问更快、更稳定。\n\n它的工作流程很简单：我提交代码后，GitHub 会“提醒”Vercel（这叫 Webhook，就是一次通知）。Vercel 自动安装依赖并运行 `hexo generate` 生成网页文件，然后一次性把新版本切换上线（原子发布：不是一点点替换，而是“全部准备好再整体切换”，因此不会出现“有的页面新有的页面旧”）。域名这块，我把根域名和 `www` 都指到了 Vercel，证书是自动签发的，整站都是 HTTPS。\n\n为什么这样做？因为博客是“读多写少”，静态页面最合适：速度快、成本低、出错少。\n\n我为稳定性做了几个小细节：固定 Node 版本并用 `npm ci` 保证“在哪构建都一样”；文章的配图和资源放在同名文件夹并用相对路径，避免换主题或迁移时出现 404；DNS 按要求配置了根域名的 A 记录和 `www` 的 CNAME，确保国内外访问都能走最近的节点。\n\n这个项目让我把零散的名词（Webhook、CI/CD、静态化、原子发布、CDN、DNS）串成了一个能跑起来的系统。我能现场演示：改一行文案、`git push`，几秒钟后就能拿到一个预览地址；确认没问题，再合并上线。如果出问题，我也知道怎么通过日志定位，并在需要时一键回退。\n","source":"_posts/vercel-hexo-github-auto-deploy.md","raw":"---\ntitle: 用 Vercel + Hexo + GitHub 打造自动更新发布的个人网站（以 jiangxu.net 为例）\ndate: 2025-09-18 12:00:00\ncategories:\n- 技术\ntags:\n- Hexo\n- Vercel\n- GitHub\n- CI/CD\n- 域名\n---\n\n你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 `git push`，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 `jiangxu.net` 为例，顺带聊聊背后的技术原理。\n\n### 术语速查表（新手友好）\n\n| 术语 | 解释 |\n| --- | --- |\n| Webhook | 当仓库发生事件（如 push）时，GitHub 主动向一个 URL 发送 HTTP 请求，通知第三方（这里是 Vercel）触发自动流程。|\n| 原子发布 | 新版本先在后台完整构建并准备好，随后用一次“瞬间切换”替换旧版本；全站要么是旧版，要么是新版，不会出现一半新一半旧；出问题可秒级回滚。|\n| CDN | 内容分发网络，把静态资源复制到多个边缘节点，用户就近访问，延迟更低、带宽更大、稳定性更好。|\n| 全球 CDN | 覆盖全球多个区域的 CDN，让不同地区的访客都能就近获取内容；Vercel 发布会把 `public/` 分发到其全球边缘节点。|\n| 根域（apex） | 不带子域的域名，例如 `jiangxu.net`。通常用 A 记录指向服务商提供的 IP（如 `76.76.21.21`）。|\n| www 子域 | 带 `www` 的子域，例如 `www.jiangxu.net`。通常用 CNAME 指向托管商域名（如 `cname.vercel-dns.com`），并可在托管侧设置重定向到根域或相反方向。|\n| 静态化 | 预先把页面生成成静态的 HTML/CSS/JS 文件（例如 Hexo 的 `hexo generate` 生成 `public/`），上线时无需后端渲染。|\n| PR（Pull Request） | 在 Git 平台上发起的“合并申请”，用于变更的讨论与审核；每个 PR 在 Vercel 都会有独立的 Preview 环境，方便预览和评审。|\n\n\n> 小注：\n> - A 记录 = 把域名直接指向一个 IPv4 地址（IPv6 用 AAAA）。例：`jiangxu.net -> A 76.76.21.21`。\n> - CNAME = 给域名起“别名”，把一个域名指向另一个域名，再由对方域名解析到 IP。例：`www.jiangxu.net -> CNAME cname.vercel-dns.com`。\n> - 通常根域名用 A 记录，`www` 子域用 CNAME（少数 DNS 支持根域“平展”别名，叫 ALIAS/ANAME）。\n\n## 我们要得到什么\n\n- 写文章 → `git push` → 几十秒后网站自动发布\n- 自定义域名 `jiangxu.net`，含 `www` 子域\n- 全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）\n\n## 项目现状（以本仓库为例）\n\n本项目是一个标准 Hexo 项目，核心配置如下：\n\n```yaml\n# _config.yml（节选）\nurl: https://jiangxu.net/\ntheme: pure\npost_asset_folder: true\nrelative_link: true\nsyntax_highlighter: highlight.js\n```\n\n```json\n// package.json（节选）\n{\n  \"hexo\": { \"version\": \"7.3.0\" },\n  \"scripts\": {\n    \"start\": \"hexo server\",\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"clean:deploy\": \"hexo clean && hexo generate && hexo deploy\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^7.3.0\",\n    \"hexo-renderer-marked\": \"^7.0.0\",\n    \"hexo-server\": \"^3.0.0\"\n  }\n}\n```\n\n注意：项目里虽然安装了 `hexo-deployer-git`，但我们将由 Vercel 来托管与发布静态文件，不必再用 `hexo deploy` 推到 GitHub Pages。Vercel 在构建时会执行 `npm ci && npm run build`（或者你自定义的命令），生成 `public/` 目录并发布。\n\n## 架构一图流（你可以先收藏再细看）\n\n```mermaid\nflowchart LR\n  A[本地写 Markdown] --> B[git push 到 GitHub 仓库]\n  B --> C[GitHub 触发 Webhook 通知 Vercel]\n  C --> D[Vercel 拉取最新提交]\n  D --> E[执行构建: hexo generate]\n  E --> F[生成静态站点 public/]\n  F --> G[Vercel 原子发布到全球 CDN]\n  G --> H[用户访问 jiangxu.net 获取最新内容]\n```\n\n## 一步步搭起来\n\n### 1）把 Hexo 项目放到 GitHub\n\n如果你已经有仓库，跳过本节。否则：\n\n```bash\ngit init\ngit remote add origin https://github.com/<your-username>/<your-repo>.git\ngit add .\ngit commit -m \"init blog\"\ngit branch -M main\ngit push -u origin main\n```\n\n### 2）在 Vercel 里“导入”这个仓库\n\n1. 用 GitHub 账号登录 Vercel。\n2. New Project → 选中你的仓库 → Import。\n3. 配置：\n   - Framework Preset：选择 Hexo（或手动）\n   - Install Command：默认（推荐 `npm ci`）\n   - Build Command：`hexo generate`\n   - Output Directory：`public`\n4. 点击 Deploy。几十秒后会拿到一个 `*.vercel.app` 的临时域名。\n\n此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。\n\n### 3）绑定自定义域名 jiangxu.net\n\n在项目 → Settings → Domains 里添加 `jiangxu.net` 与 `www.jiangxu.net`，按提示去域名注册商配置 DNS：\n\n- 根域（apex）：添加 A 记录 → 指向 `76.76.21.21`（Vercel 的 Anycast IP）\n- `www` 子域：添加 CNAME → 指向 `cname.vercel-dns.com`\n\n等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 `www` 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。\n\n顺带一提，Hexo 的 `_config.yml` 已把 `url` 设为 `https://jiangxu.net/`：\n\n```yaml\nurl: https://jiangxu.net/\npretty_urls:\n  trailing_index: true\n  trailing_html: true\n```\n\n这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。\n\n### 4）写作与发布流程（真正的“自动化”）\n\n日常只做三步：\n\n```bash\nhexo new \"我的新文章\"  # 生成草稿/文章\n# 写！配图放到同名资源文件夹（post_asset_folder: true）\ngit add . && git commit -m \"post: 我的新文章\" && git push\n```\n\n然后泡杯咖啡，等 Vercel 自动完成构建与发布。\n\n## 这些技术原理，知其所以然更香\n\n- Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。\n- CI/CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 `hexo generate` → 上传 `public/`。\n- 静态化：Hexo 预渲染为纯静态文件（HTML/CSS/JS），天然适合 CDN，延迟低、可承载高并发。\n- 原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。\n- 缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。\n- 预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。\n\n## 常用实践与“避坑锦囊”\n\n- 资源管理：`post_asset_folder: true` 已开启。用 `source/_posts/我的新文章/` 管理配图，Markdown 里直接相对路径引用，迁移/重构都不怕。\n- 相对链接：`relative_link: true` 可减少跨域/环境差异带来的链接问题。\n- 主题与样式：当前主题为 `pure`。如果你改了主题静态资源路径，别忘了清缓存再构建：`npm run clean && npm run build`。\n- 不混用两套部署：既然用了 Vercel，就不必再通过 `hexo-deployer-git` 推 GitHub Pages，避免“双主发布”互相覆盖。\n- Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 `NODE_VERSION`（如 18/20）并使用 `npm ci`。\n\n## DNS 解析小抄（再来一张图）\n\n```mermaid\ngraph TD\n  User[访客浏览器] -->|jiangxu.net| DNS[权威 DNS]\n  DNS -->|A 76.76.21.21| Vercel[Vercel Edge Network]\n  User2[访客浏览器] -->|www.jiangxu.net| DNS2[权威 DNS]\n  DNS2 -->|CNAME cname.vercel-dns.com| Vercel\n  Vercel --> CDN[全球 CDN 节点]\n  CDN --> Site[静态站点 public/]\n```\n\n## 收尾：写作体验从“还行”升到“上头”\n\n现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。\n\n如果你想继续进阶：\n\n- 在 PR 的 Preview 环境里做 A/B 尝试（比如新主题、新排版）\n- 接入评论系统（如 Gitalk/Giscus），在 Vercel 环境变量里配置 Token\n- 在构建脚本里加上字数统计、站点地图、SEO 插件\n\n愿你写得开心，站点常新。`jiangxu.net` 我们下次见！\n\n\n### 面试实战自述（段落版）\n\n直白说，我把写博客变成了“像发朋友圈一样简单”：我在本地用 Markdown 写完，`git push` 一下，几十秒后网站就自动更新。我用 Hexo 把文章提前生成为静态网页（不需要服务器算），代码放在 GitHub，Vercel 负责自动构建和发布，并把网页分发到全球的 CDN 节点，让离用户近的机器来服务，访问更快、更稳定。\n\n它的工作流程很简单：我提交代码后，GitHub 会“提醒”Vercel（这叫 Webhook，就是一次通知）。Vercel 自动安装依赖并运行 `hexo generate` 生成网页文件，然后一次性把新版本切换上线（原子发布：不是一点点替换，而是“全部准备好再整体切换”，因此不会出现“有的页面新有的页面旧”）。域名这块，我把根域名和 `www` 都指到了 Vercel，证书是自动签发的，整站都是 HTTPS。\n\n为什么这样做？因为博客是“读多写少”，静态页面最合适：速度快、成本低、出错少。\n\n我为稳定性做了几个小细节：固定 Node 版本并用 `npm ci` 保证“在哪构建都一样”；文章的配图和资源放在同名文件夹并用相对路径，避免换主题或迁移时出现 404；DNS 按要求配置了根域名的 A 记录和 `www` 的 CNAME，确保国内外访问都能走最近的节点。\n\n这个项目让我把零散的名词（Webhook、CI/CD、静态化、原子发布、CDN、DNS）串成了一个能跑起来的系统。我能现场演示：改一行文案、`git push`，几秒钟后就能拿到一个预览地址；确认没问题，再合并上线。如果出问题，我也知道怎么通过日志定位，并在需要时一键回退。\n","slug":"vercel-hexo-github-auto-deploy","published":1,"updated":"2025-09-28T14:47:34.556Z","_id":"cmg0gdy01000bk49kdlcj5v2a","comments":1,"layout":"post","photos":[],"content":"<p>你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 <code>git push</code>，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 <code>jiangxu.net</code> 为例，顺带聊聊背后的技术原理。</p>\n<h3 id=\"术语速查表（新手友好）\"><a href=\"#术语速查表（新手友好）\" class=\"headerlink\" title=\"术语速查表（新手友好）\"></a>术语速查表（新手友好）</h3><table>\n<thead>\n<tr>\n<th>术语</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Webhook</td>\n<td>当仓库发生事件（如 push）时，GitHub 主动向一个 URL 发送 HTTP 请求，通知第三方（这里是 Vercel）触发自动流程。</td>\n</tr>\n<tr>\n<td>原子发布</td>\n<td>新版本先在后台完整构建并准备好，随后用一次“瞬间切换”替换旧版本；全站要么是旧版，要么是新版，不会出现一半新一半旧；出问题可秒级回滚。</td>\n</tr>\n<tr>\n<td>CDN</td>\n<td>内容分发网络，把静态资源复制到多个边缘节点，用户就近访问，延迟更低、带宽更大、稳定性更好。</td>\n</tr>\n<tr>\n<td>全球 CDN</td>\n<td>覆盖全球多个区域的 CDN，让不同地区的访客都能就近获取内容；Vercel 发布会把 <code>public/</code> 分发到其全球边缘节点。</td>\n</tr>\n<tr>\n<td>根域（apex）</td>\n<td>不带子域的域名，例如 <code>jiangxu.net</code>。通常用 A 记录指向服务商提供的 IP（如 <code>76.76.21.21</code>）。</td>\n</tr>\n<tr>\n<td>www 子域</td>\n<td>带 <code>www</code> 的子域，例如 <code>www.jiangxu.net</code>。通常用 CNAME 指向托管商域名（如 <code>cname.vercel-dns.com</code>），并可在托管侧设置重定向到根域或相反方向。</td>\n</tr>\n<tr>\n<td>静态化</td>\n<td>预先把页面生成成静态的 HTML&#x2F;CSS&#x2F;JS 文件（例如 Hexo 的 <code>hexo generate</code> 生成 <code>public/</code>），上线时无需后端渲染。</td>\n</tr>\n<tr>\n<td>PR（Pull Request）</td>\n<td>在 Git 平台上发起的“合并申请”，用于变更的讨论与审核；每个 PR 在 Vercel 都会有独立的 Preview 环境，方便预览和评审。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>小注：</p>\n<ul>\n<li>A 记录 &#x3D; 把域名直接指向一个 IPv4 地址（IPv6 用 AAAA）。例：<code>jiangxu.net -&gt; A 76.76.21.21</code>。</li>\n<li>CNAME &#x3D; 给域名起“别名”，把一个域名指向另一个域名，再由对方域名解析到 IP。例：<code>www.jiangxu.net -&gt; CNAME cname.vercel-dns.com</code>。</li>\n<li>通常根域名用 A 记录，<code>www</code> 子域用 CNAME（少数 DNS 支持根域“平展”别名，叫 ALIAS&#x2F;ANAME）。</li>\n</ul>\n</blockquote>\n<h2 id=\"我们要得到什么\"><a href=\"#我们要得到什么\" class=\"headerlink\" title=\"我们要得到什么\"></a>我们要得到什么</h2><ul>\n<li>写文章 → <code>git push</code> → 几十秒后网站自动发布</li>\n<li>自定义域名 <code>jiangxu.net</code>，含 <code>www</code> 子域</li>\n<li>全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）</li>\n</ul>\n<h2 id=\"项目现状（以本仓库为例）\"><a href=\"#项目现状（以本仓库为例）\" class=\"headerlink\" title=\"项目现状（以本仓库为例）\"></a>项目现状（以本仓库为例）</h2><p>本项目是一个标准 Hexo 项目，核心配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml（节选）</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">pure</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">syntax_highlighter:</span> <span class=\"string\">highlight.js</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json（节选）</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;7.3.0&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo server&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo generate&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo deploy&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean:deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.3.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-marked&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-server&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^3.0.0&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：项目里虽然安装了 <code>hexo-deployer-git</code>，但我们将由 Vercel 来托管与发布静态文件，不必再用 <code>hexo deploy</code> 推到 GitHub Pages。Vercel 在构建时会执行 <code>npm ci &amp;&amp; npm run build</code>（或者你自定义的命令），生成 <code>public/</code> 目录并发布。</p>\n<h2 id=\"架构一图流（你可以先收藏再细看）\"><a href=\"#架构一图流（你可以先收藏再细看）\" class=\"headerlink\" title=\"架构一图流（你可以先收藏再细看）\"></a>架构一图流（你可以先收藏再细看）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flowchart LR</span><br><span class=\"line\">  A[本地写 Markdown] --&gt; B[git push 到 GitHub 仓库]</span><br><span class=\"line\">  B --&gt; C[GitHub 触发 Webhook 通知 Vercel]</span><br><span class=\"line\">  C --&gt; D[Vercel 拉取最新提交]</span><br><span class=\"line\">  D --&gt; E[执行构建: hexo generate]</span><br><span class=\"line\">  E --&gt; F[生成静态站点 public/]</span><br><span class=\"line\">  F --&gt; G[Vercel 原子发布到全球 CDN]</span><br><span class=\"line\">  G --&gt; H[用户访问 jiangxu.net 获取最新内容]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一步步搭起来\"><a href=\"#一步步搭起来\" class=\"headerlink\" title=\"一步步搭起来\"></a>一步步搭起来</h2><h3 id=\"1）把-Hexo-项目放到-GitHub\"><a href=\"#1）把-Hexo-项目放到-GitHub\" class=\"headerlink\" title=\"1）把 Hexo 项目放到 GitHub\"></a>1）把 Hexo 项目放到 GitHub</h3><p>如果你已经有仓库，跳过本节。否则：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin https://github.com/&lt;your-username&gt;/&lt;your-repo&gt;.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init blog&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2）在-Vercel-里“导入”这个仓库\"><a href=\"#2）在-Vercel-里“导入”这个仓库\" class=\"headerlink\" title=\"2）在 Vercel 里“导入”这个仓库\"></a>2）在 Vercel 里“导入”这个仓库</h3><ol>\n<li>用 GitHub 账号登录 Vercel。</li>\n<li>New Project → 选中你的仓库 → Import。</li>\n<li>配置：<ul>\n<li>Framework Preset：选择 Hexo（或手动）</li>\n<li>Install Command：默认（推荐 <code>npm ci</code>）</li>\n<li>Build Command：<code>hexo generate</code></li>\n<li>Output Directory：<code>public</code></li>\n</ul>\n</li>\n<li>点击 Deploy。几十秒后会拿到一个 <code>*.vercel.app</code> 的临时域名。</li>\n</ol>\n<p>此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。</p>\n<h3 id=\"3）绑定自定义域名-jiangxu-net\"><a href=\"#3）绑定自定义域名-jiangxu-net\" class=\"headerlink\" title=\"3）绑定自定义域名 jiangxu.net\"></a>3）绑定自定义域名 jiangxu.net</h3><p>在项目 → Settings → Domains 里添加 <code>jiangxu.net</code> 与 <code>www.jiangxu.net</code>，按提示去域名注册商配置 DNS：</p>\n<ul>\n<li>根域（apex）：添加 A 记录 → 指向 <code>76.76.21.21</code>（Vercel 的 Anycast IP）</li>\n<li><code>www</code> 子域：添加 CNAME → 指向 <code>cname.vercel-dns.com</code></li>\n</ul>\n<p>等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 <code>www</code> 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。</p>\n<p>顺带一提，Hexo 的 <code>_config.yml</code> 已把 <code>url</code> 设为 <code>https://jiangxu.net/</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。</p>\n<h3 id=\"4）写作与发布流程（真正的“自动化”）\"><a href=\"#4）写作与发布流程（真正的“自动化”）\" class=\"headerlink\" title=\"4）写作与发布流程（真正的“自动化”）\"></a>4）写作与发布流程（真正的“自动化”）</h3><p>日常只做三步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;我的新文章&quot;</span>  <span class=\"comment\"># 生成草稿/文章</span></span><br><span class=\"line\"><span class=\"comment\"># 写！配图放到同名资源文件夹（post_asset_folder: true）</span></span><br><span class=\"line\">git add . &amp;&amp; git commit -m <span class=\"string\">&quot;post: 我的新文章&quot;</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure>\n\n<p>然后泡杯咖啡，等 Vercel 自动完成构建与发布。</p>\n<h2 id=\"这些技术原理，知其所以然更香\"><a href=\"#这些技术原理，知其所以然更香\" class=\"headerlink\" title=\"这些技术原理，知其所以然更香\"></a>这些技术原理，知其所以然更香</h2><ul>\n<li>Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。</li>\n<li>CI&#x2F;CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 <code>hexo generate</code> → 上传 <code>public/</code>。</li>\n<li>静态化：Hexo 预渲染为纯静态文件（HTML&#x2F;CSS&#x2F;JS），天然适合 CDN，延迟低、可承载高并发。</li>\n<li>原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。</li>\n<li>缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。</li>\n<li>预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。</li>\n</ul>\n<h2 id=\"常用实践与“避坑锦囊”\"><a href=\"#常用实践与“避坑锦囊”\" class=\"headerlink\" title=\"常用实践与“避坑锦囊”\"></a>常用实践与“避坑锦囊”</h2><ul>\n<li>资源管理：<code>post_asset_folder: true</code> 已开启。用 <code>source/_posts/我的新文章/</code> 管理配图，Markdown 里直接相对路径引用，迁移&#x2F;重构都不怕。</li>\n<li>相对链接：<code>relative_link: true</code> 可减少跨域&#x2F;环境差异带来的链接问题。</li>\n<li>主题与样式：当前主题为 <code>pure</code>。如果你改了主题静态资源路径，别忘了清缓存再构建：<code>npm run clean &amp;&amp; npm run build</code>。</li>\n<li>不混用两套部署：既然用了 Vercel，就不必再通过 <code>hexo-deployer-git</code> 推 GitHub Pages，避免“双主发布”互相覆盖。</li>\n<li>Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 <code>NODE_VERSION</code>（如 18&#x2F;20）并使用 <code>npm ci</code>。</li>\n</ul>\n<h2 id=\"DNS-解析小抄（再来一张图）\"><a href=\"#DNS-解析小抄（再来一张图）\" class=\"headerlink\" title=\"DNS 解析小抄（再来一张图）\"></a>DNS 解析小抄（再来一张图）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">  User[访客浏览器] --&gt;|jiangxu.net| DNS[权威 DNS]</span><br><span class=\"line\">  DNS --&gt;|A 76.76.21.21| Vercel[Vercel Edge Network]</span><br><span class=\"line\">  User2[访客浏览器] --&gt;|www.jiangxu.net| DNS2[权威 DNS]</span><br><span class=\"line\">  DNS2 --&gt;|CNAME cname.vercel-dns.com| Vercel</span><br><span class=\"line\">  Vercel --&gt; CDN[全球 CDN 节点]</span><br><span class=\"line\">  CDN --&gt; Site[静态站点 public/]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"收尾：写作体验从“还行”升到“上头”\"><a href=\"#收尾：写作体验从“还行”升到“上头”\" class=\"headerlink\" title=\"收尾：写作体验从“还行”升到“上头”\"></a>收尾：写作体验从“还行”升到“上头”</h2><p>现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。</p>\n<p>如果你想继续进阶：</p>\n<ul>\n<li>在 PR 的 Preview 环境里做 A&#x2F;B 尝试（比如新主题、新排版）</li>\n<li>接入评论系统（如 Gitalk&#x2F;Giscus），在 Vercel 环境变量里配置 Token</li>\n<li>在构建脚本里加上字数统计、站点地图、SEO 插件</li>\n</ul>\n<p>愿你写得开心，站点常新。<code>jiangxu.net</code> 我们下次见！</p>\n<h3 id=\"面试实战自述（段落版）\"><a href=\"#面试实战自述（段落版）\" class=\"headerlink\" title=\"面试实战自述（段落版）\"></a>面试实战自述（段落版）</h3><p>直白说，我把写博客变成了“像发朋友圈一样简单”：我在本地用 Markdown 写完，<code>git push</code> 一下，几十秒后网站就自动更新。我用 Hexo 把文章提前生成为静态网页（不需要服务器算），代码放在 GitHub，Vercel 负责自动构建和发布，并把网页分发到全球的 CDN 节点，让离用户近的机器来服务，访问更快、更稳定。</p>\n<p>它的工作流程很简单：我提交代码后，GitHub 会“提醒”Vercel（这叫 Webhook，就是一次通知）。Vercel 自动安装依赖并运行 <code>hexo generate</code> 生成网页文件，然后一次性把新版本切换上线（原子发布：不是一点点替换，而是“全部准备好再整体切换”，因此不会出现“有的页面新有的页面旧”）。域名这块，我把根域名和 <code>www</code> 都指到了 Vercel，证书是自动签发的，整站都是 HTTPS。</p>\n<p>为什么这样做？因为博客是“读多写少”，静态页面最合适：速度快、成本低、出错少。</p>\n<p>我为稳定性做了几个小细节：固定 Node 版本并用 <code>npm ci</code> 保证“在哪构建都一样”；文章的配图和资源放在同名文件夹并用相对路径，避免换主题或迁移时出现 404；DNS 按要求配置了根域名的 A 记录和 <code>www</code> 的 CNAME，确保国内外访问都能走最近的节点。</p>\n<p>这个项目让我把零散的名词（Webhook、CI&#x2F;CD、静态化、原子发布、CDN、DNS）串成了一个能跑起来的系统。我能现场演示：改一行文案、<code>git push</code>，几秒钟后就能拿到一个预览地址；确认没问题，再合并上线。如果出问题，我也知道怎么通过日志定位，并在需要时一键回退。</p>\n","excerpt":"","more":"<p>你可能已经把博客搭好了，但每次发文都还要“打包-上传-部署”？今天我们来点优雅的：写完 Markdown，一把 <code>git push</code>，网站自动更新，全程无手动。本文用 Hexo + GitHub + Vercel 的经典三件套，手把手带你把自动化这件事变得像呼吸一样自然。整篇文章以已上线的 <code>jiangxu.net</code> 为例，顺带聊聊背后的技术原理。</p>\n<h3 id=\"术语速查表（新手友好）\"><a href=\"#术语速查表（新手友好）\" class=\"headerlink\" title=\"术语速查表（新手友好）\"></a>术语速查表（新手友好）</h3><table>\n<thead>\n<tr>\n<th>术语</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Webhook</td>\n<td>当仓库发生事件（如 push）时，GitHub 主动向一个 URL 发送 HTTP 请求，通知第三方（这里是 Vercel）触发自动流程。</td>\n</tr>\n<tr>\n<td>原子发布</td>\n<td>新版本先在后台完整构建并准备好，随后用一次“瞬间切换”替换旧版本；全站要么是旧版，要么是新版，不会出现一半新一半旧；出问题可秒级回滚。</td>\n</tr>\n<tr>\n<td>CDN</td>\n<td>内容分发网络，把静态资源复制到多个边缘节点，用户就近访问，延迟更低、带宽更大、稳定性更好。</td>\n</tr>\n<tr>\n<td>全球 CDN</td>\n<td>覆盖全球多个区域的 CDN，让不同地区的访客都能就近获取内容；Vercel 发布会把 <code>public/</code> 分发到其全球边缘节点。</td>\n</tr>\n<tr>\n<td>根域（apex）</td>\n<td>不带子域的域名，例如 <code>jiangxu.net</code>。通常用 A 记录指向服务商提供的 IP（如 <code>76.76.21.21</code>）。</td>\n</tr>\n<tr>\n<td>www 子域</td>\n<td>带 <code>www</code> 的子域，例如 <code>www.jiangxu.net</code>。通常用 CNAME 指向托管商域名（如 <code>cname.vercel-dns.com</code>），并可在托管侧设置重定向到根域或相反方向。</td>\n</tr>\n<tr>\n<td>静态化</td>\n<td>预先把页面生成成静态的 HTML&#x2F;CSS&#x2F;JS 文件（例如 Hexo 的 <code>hexo generate</code> 生成 <code>public/</code>），上线时无需后端渲染。</td>\n</tr>\n<tr>\n<td>PR（Pull Request）</td>\n<td>在 Git 平台上发起的“合并申请”，用于变更的讨论与审核；每个 PR 在 Vercel 都会有独立的 Preview 环境，方便预览和评审。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>小注：</p>\n<ul>\n<li>A 记录 &#x3D; 把域名直接指向一个 IPv4 地址（IPv6 用 AAAA）。例：<code>jiangxu.net -&gt; A 76.76.21.21</code>。</li>\n<li>CNAME &#x3D; 给域名起“别名”，把一个域名指向另一个域名，再由对方域名解析到 IP。例：<code>www.jiangxu.net -&gt; CNAME cname.vercel-dns.com</code>。</li>\n<li>通常根域名用 A 记录，<code>www</code> 子域用 CNAME（少数 DNS 支持根域“平展”别名，叫 ALIAS&#x2F;ANAME）。</li>\n</ul>\n</blockquote>\n<h2 id=\"我们要得到什么\"><a href=\"#我们要得到什么\" class=\"headerlink\" title=\"我们要得到什么\"></a>我们要得到什么</h2><ul>\n<li>写文章 → <code>git push</code> → 几十秒后网站自动发布</li>\n<li>自定义域名 <code>jiangxu.net</code>，含 <code>www</code> 子域</li>\n<li>全站 CDN 加速、原子发布（不会出现“构建到一半页面 404”的尴尬）</li>\n</ul>\n<h2 id=\"项目现状（以本仓库为例）\"><a href=\"#项目现状（以本仓库为例）\" class=\"headerlink\" title=\"项目现状（以本仓库为例）\"></a>项目现状（以本仓库为例）</h2><p>本项目是一个标准 Hexo 项目，核心配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml（节选）</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">pure</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">syntax_highlighter:</span> <span class=\"string\">highlight.js</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json（节选）</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;7.3.0&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo server&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo generate&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo deploy&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;clean:deploy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.3.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-marked&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^7.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-server&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^3.0.0&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：项目里虽然安装了 <code>hexo-deployer-git</code>，但我们将由 Vercel 来托管与发布静态文件，不必再用 <code>hexo deploy</code> 推到 GitHub Pages。Vercel 在构建时会执行 <code>npm ci &amp;&amp; npm run build</code>（或者你自定义的命令），生成 <code>public/</code> 目录并发布。</p>\n<h2 id=\"架构一图流（你可以先收藏再细看）\"><a href=\"#架构一图流（你可以先收藏再细看）\" class=\"headerlink\" title=\"架构一图流（你可以先收藏再细看）\"></a>架构一图流（你可以先收藏再细看）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flowchart LR</span><br><span class=\"line\">  A[本地写 Markdown] --&gt; B[git push 到 GitHub 仓库]</span><br><span class=\"line\">  B --&gt; C[GitHub 触发 Webhook 通知 Vercel]</span><br><span class=\"line\">  C --&gt; D[Vercel 拉取最新提交]</span><br><span class=\"line\">  D --&gt; E[执行构建: hexo generate]</span><br><span class=\"line\">  E --&gt; F[生成静态站点 public/]</span><br><span class=\"line\">  F --&gt; G[Vercel 原子发布到全球 CDN]</span><br><span class=\"line\">  G --&gt; H[用户访问 jiangxu.net 获取最新内容]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一步步搭起来\"><a href=\"#一步步搭起来\" class=\"headerlink\" title=\"一步步搭起来\"></a>一步步搭起来</h2><h3 id=\"1）把-Hexo-项目放到-GitHub\"><a href=\"#1）把-Hexo-项目放到-GitHub\" class=\"headerlink\" title=\"1）把 Hexo 项目放到 GitHub\"></a>1）把 Hexo 项目放到 GitHub</h3><p>如果你已经有仓库，跳过本节。否则：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin https://github.com/&lt;your-username&gt;/&lt;your-repo&gt;.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init blog&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2）在-Vercel-里“导入”这个仓库\"><a href=\"#2）在-Vercel-里“导入”这个仓库\" class=\"headerlink\" title=\"2）在 Vercel 里“导入”这个仓库\"></a>2）在 Vercel 里“导入”这个仓库</h3><ol>\n<li>用 GitHub 账号登录 Vercel。</li>\n<li>New Project → 选中你的仓库 → Import。</li>\n<li>配置：<ul>\n<li>Framework Preset：选择 Hexo（或手动）</li>\n<li>Install Command：默认（推荐 <code>npm ci</code>）</li>\n<li>Build Command：<code>hexo generate</code></li>\n<li>Output Directory：<code>public</code></li>\n</ul>\n</li>\n<li>点击 Deploy。几十秒后会拿到一个 <code>*.vercel.app</code> 的临时域名。</li>\n</ol>\n<p>此后每次 push，Vercel 都会自动构建与发布。开分支提 PR 也会生成“预览环境”，方便你把文章和样式改动发给朋友“云审稿”。</p>\n<h3 id=\"3）绑定自定义域名-jiangxu-net\"><a href=\"#3）绑定自定义域名-jiangxu-net\" class=\"headerlink\" title=\"3）绑定自定义域名 jiangxu.net\"></a>3）绑定自定义域名 jiangxu.net</h3><p>在项目 → Settings → Domains 里添加 <code>jiangxu.net</code> 与 <code>www.jiangxu.net</code>，按提示去域名注册商配置 DNS：</p>\n<ul>\n<li>根域（apex）：添加 A 记录 → 指向 <code>76.76.21.21</code>（Vercel 的 Anycast IP）</li>\n<li><code>www</code> 子域：添加 CNAME → 指向 <code>cname.vercel-dns.com</code></li>\n</ul>\n<p>等 DNS 生效后，Vercel 会自动签发 HTTPS 证书（Let’s Encrypt）。如果你想把 <code>www</code> 跳转到根域（或反过来），在 Vercel 域名设置里点一下“Redirect”即可。</p>\n<p>顺带一提，Hexo 的 <code>_config.yml</code> 已把 <code>url</code> 设为 <code>https://jiangxu.net/</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>这会影响站内链接、RSS、Canonical 等生成，记得与实际域名保持一致。</p>\n<h3 id=\"4）写作与发布流程（真正的“自动化”）\"><a href=\"#4）写作与发布流程（真正的“自动化”）\" class=\"headerlink\" title=\"4）写作与发布流程（真正的“自动化”）\"></a>4）写作与发布流程（真正的“自动化”）</h3><p>日常只做三步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;我的新文章&quot;</span>  <span class=\"comment\"># 生成草稿/文章</span></span><br><span class=\"line\"><span class=\"comment\"># 写！配图放到同名资源文件夹（post_asset_folder: true）</span></span><br><span class=\"line\">git add . &amp;&amp; git commit -m <span class=\"string\">&quot;post: 我的新文章&quot;</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure>\n\n<p>然后泡杯咖啡，等 Vercel 自动完成构建与发布。</p>\n<h2 id=\"这些技术原理，知其所以然更香\"><a href=\"#这些技术原理，知其所以然更香\" class=\"headerlink\" title=\"这些技术原理，知其所以然更香\"></a>这些技术原理，知其所以然更香</h2><ul>\n<li>Webhooks：Vercel 与 GitHub 通过 Webhooks 通知协作。仓库有新提交 → 触发一次构建。</li>\n<li>CI&#x2F;CD：Vercel 内置流水线，拉代码 → 安装依赖 → 执行 <code>hexo generate</code> → 上传 <code>public/</code>。</li>\n<li>静态化：Hexo 预渲染为纯静态文件（HTML&#x2F;CSS&#x2F;JS），天然适合 CDN，延迟低、可承载高并发。</li>\n<li>原子发布：新版本构建完成后一次性切换，不会出现“部分页面旧、部分页面新”。</li>\n<li>缓存与失效：CDN 命中为王。新版本发布后 Vercel 会做缓存失效处理，通常无需你手动清缓存。</li>\n<li>预览环境：每个 PR 一条独立的 Preview URL，不影响生产站点。</li>\n</ul>\n<h2 id=\"常用实践与“避坑锦囊”\"><a href=\"#常用实践与“避坑锦囊”\" class=\"headerlink\" title=\"常用实践与“避坑锦囊”\"></a>常用实践与“避坑锦囊”</h2><ul>\n<li>资源管理：<code>post_asset_folder: true</code> 已开启。用 <code>source/_posts/我的新文章/</code> 管理配图，Markdown 里直接相对路径引用，迁移&#x2F;重构都不怕。</li>\n<li>相对链接：<code>relative_link: true</code> 可减少跨域&#x2F;环境差异带来的链接问题。</li>\n<li>主题与样式：当前主题为 <code>pure</code>。如果你改了主题静态资源路径，别忘了清缓存再构建：<code>npm run clean &amp;&amp; npm run build</code>。</li>\n<li>不混用两套部署：既然用了 Vercel，就不必再通过 <code>hexo-deployer-git</code> 推 GitHub Pages，避免“双主发布”互相覆盖。</li>\n<li>Node 与依赖：为一致的构建结果，建议在 Vercel 的 Project Settings → Environment 里设置 <code>NODE_VERSION</code>（如 18&#x2F;20）并使用 <code>npm ci</code>。</li>\n</ul>\n<h2 id=\"DNS-解析小抄（再来一张图）\"><a href=\"#DNS-解析小抄（再来一张图）\" class=\"headerlink\" title=\"DNS 解析小抄（再来一张图）\"></a>DNS 解析小抄（再来一张图）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">  User[访客浏览器] --&gt;|jiangxu.net| DNS[权威 DNS]</span><br><span class=\"line\">  DNS --&gt;|A 76.76.21.21| Vercel[Vercel Edge Network]</span><br><span class=\"line\">  User2[访客浏览器] --&gt;|www.jiangxu.net| DNS2[权威 DNS]</span><br><span class=\"line\">  DNS2 --&gt;|CNAME cname.vercel-dns.com| Vercel</span><br><span class=\"line\">  Vercel --&gt; CDN[全球 CDN 节点]</span><br><span class=\"line\">  CDN --&gt; Site[静态站点 public/]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"收尾：写作体验从“还行”升到“上头”\"><a href=\"#收尾：写作体验从“还行”升到“上头”\" class=\"headerlink\" title=\"收尾：写作体验从“还行”升到“上头”\"></a>收尾：写作体验从“还行”升到“上头”</h2><p>现在，发文这件事就像发朋友圈：写完点发送（push 一下），剩下交给机器。你要做的，不过是保持输出而已。</p>\n<p>如果你想继续进阶：</p>\n<ul>\n<li>在 PR 的 Preview 环境里做 A&#x2F;B 尝试（比如新主题、新排版）</li>\n<li>接入评论系统（如 Gitalk&#x2F;Giscus），在 Vercel 环境变量里配置 Token</li>\n<li>在构建脚本里加上字数统计、站点地图、SEO 插件</li>\n</ul>\n<p>愿你写得开心，站点常新。<code>jiangxu.net</code> 我们下次见！</p>\n<h3 id=\"面试实战自述（段落版）\"><a href=\"#面试实战自述（段落版）\" class=\"headerlink\" title=\"面试实战自述（段落版）\"></a>面试实战自述（段落版）</h3><p>直白说，我把写博客变成了“像发朋友圈一样简单”：我在本地用 Markdown 写完，<code>git push</code> 一下，几十秒后网站就自动更新。我用 Hexo 把文章提前生成为静态网页（不需要服务器算），代码放在 GitHub，Vercel 负责自动构建和发布，并把网页分发到全球的 CDN 节点，让离用户近的机器来服务，访问更快、更稳定。</p>\n<p>它的工作流程很简单：我提交代码后，GitHub 会“提醒”Vercel（这叫 Webhook，就是一次通知）。Vercel 自动安装依赖并运行 <code>hexo generate</code> 生成网页文件，然后一次性把新版本切换上线（原子发布：不是一点点替换，而是“全部准备好再整体切换”，因此不会出现“有的页面新有的页面旧”）。域名这块，我把根域名和 <code>www</code> 都指到了 Vercel，证书是自动签发的，整站都是 HTTPS。</p>\n<p>为什么这样做？因为博客是“读多写少”，静态页面最合适：速度快、成本低、出错少。</p>\n<p>我为稳定性做了几个小细节：固定 Node 版本并用 <code>npm ci</code> 保证“在哪构建都一样”；文章的配图和资源放在同名文件夹并用相对路径，避免换主题或迁移时出现 404；DNS 按要求配置了根域名的 A 记录和 <code>www</code> 的 CNAME，确保国内外访问都能走最近的节点。</p>\n<p>这个项目让我把零散的名词（Webhook、CI&#x2F;CD、静态化、原子发布、CDN、DNS）串成了一个能跑起来的系统。我能现场演示：改一行文案、<code>git push</code>，几秒钟后就能拿到一个预览地址；确认没问题，再合并上线。如果出问题，我也知道怎么通过日志定位，并在需要时一键回退。</p>\n"},{"title":"August","date":"2025-08-31T09:32:32.000Z","_content":"- 线代：姜晓千+研掌\n- 数据结构：英雄cpp + 严蔚敏\n- 英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊\n- 减脂：控制饮食，五分化训练\n\n## 2025-08-14 星期四\n- **Mood:** \n- **Note:** 做了今天到开学学习和健身规划，蓄势待发\n- **Math:** \n- **Code:** \n- **Exercise:** \n- **English:** \n\n## 2025-08-15 星期五\n- **Mood:** 8\n- **Note:** \n- **Math:** 1.5h行列式定义，5个性质，5个重要行列式\n- **Code:** 1.5h线性表模版\n- **Exercise:** 38min慢跑5公里\n- **English:** \n  - 30min学歌\n  - 20min观看油管发音视频\"VvsW\"\n  - 20min记单词\n  - 20min豆包口语练习\n  > 修正文本：Hello Doubao, I'm Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers' home for vacation. Now I've come back to school and I'll restart the challenge for about a month. I know you're an AI and can't recognize my pronunciation, but that's okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I've also learned a song named \"Love the Way You Lie\" by Eminem and Rihanna. And I studied the pronunciation difference between \"we\" and \"we've\" on YouTube. Okay, that's all. See you tomorrow.\n\n## 2025-08-16 星期六\n- **Mood:** 6\n- **Note:** 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。\n- **Math:** 2h行列式展开定理，7个行列式重要公式\n- **Code:** 1.5h杭电3题力扣1题\n- **Exercise:**  86 push - ups\n- **English:** \n    - 12min pronunciation-words ending with \"x,t,ck\"\n    - 30min learning \n    - 20min public speaking practice \n    > 修正文本：Hi, my friend. Today is August 16th. Today isn't an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don't know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with 'x', 't' and 'ck'. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.\n\t  > - 冠词使用错误，\"a ordinary day\"应为\"an ordinary day\"。\n\t  > - 时态错误，\"estimated i will score\"应是\"estimated I would score\"，因为\"estimated\"是过去式，从句要用相应过去时态。\n\t  > - 动词搭配，\"spend... in 夯练\"应是\"spend... practicing\"；\"spend... practice\"应是\"spend... practicing\"。\n    > - 名词单复数，\"advicees\"应为\"advice\"，advice 是不可数名词，没有复数形式。\n    > - 中式英语，\"我可能有点木强\"这种表述应转化为符合英语习惯的表达，如\"have a desire to be better\"。\n    \n## 2025-08-18 星期一\n- **Mood:** 6\n- **Note:** 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。\n- **Math:** 1h 矩阵基本运算，矩阵的逆\n- **Code:** 3h 深入学习指针，默写线性表模版，leetcode10题\n- **Exercise:** 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60\n- **English:** 20min youtube发音课\n\n## 2025-08-19 星期二\n- **Mood:** 8\n- **Note:** \n- **Math:** 1h 线性代数前两章笔记整理，\n- **Code:** 3h 十道力扣题目\n- **Exercise:** 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹\n- **English:** \n  - 15min 单词\n\n\n## 2025-08-21 星期四\n- **Mood:** 6\n- **Note:** \n- **Math:** \n- **Code:** 2h 单向链表模版代码\n- **Exercise:** \n- **English:** \n\n\n\n## 2025-08-28 星期四\n- **Mood:** \n- **Note:** \n- **Math:** 2h线性代数\n- **Code:** 1.5h 单向链表力扣题\n- **Exercise:** \n- **English:** \n\n## 2025-08-29 星期五\n- **Mood:** 6\n- **Note:** \n- **Math:** 3h 线性代数，矩阵的逆，矩阵的秩\n- **Code:** \n- **Exercise:** 游泳，憋气蛙\n- **English:** \n\n## 2025-08-31 星期日\n- **Mood:** 4\n- **Note:** 久坐很累\n- **Math:** 3h 伴随矩阵，分块矩阵，向量基本运算\n- **Code:** \n- **Exercise:** \n- **English:** 外刊20min\n","source":"_posts/August.md","raw":"---\ntitle: August\ndate: 2025-08-31 17:32:32\ncategories: \n- diary\ntags:\n- 学习记录\n---\n- 线代：姜晓千+研掌\n- 数据结构：英雄cpp + 严蔚敏\n- 英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊\n- 减脂：控制饮食，五分化训练\n\n## 2025-08-14 星期四\n- **Mood:** \n- **Note:** 做了今天到开学学习和健身规划，蓄势待发\n- **Math:** \n- **Code:** \n- **Exercise:** \n- **English:** \n\n## 2025-08-15 星期五\n- **Mood:** 8\n- **Note:** \n- **Math:** 1.5h行列式定义，5个性质，5个重要行列式\n- **Code:** 1.5h线性表模版\n- **Exercise:** 38min慢跑5公里\n- **English:** \n  - 30min学歌\n  - 20min观看油管发音视频\"VvsW\"\n  - 20min记单词\n  - 20min豆包口语练习\n  > 修正文本：Hello Doubao, I'm Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers' home for vacation. Now I've come back to school and I'll restart the challenge for about a month. I know you're an AI and can't recognize my pronunciation, but that's okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I've also learned a song named \"Love the Way You Lie\" by Eminem and Rihanna. And I studied the pronunciation difference between \"we\" and \"we've\" on YouTube. Okay, that's all. See you tomorrow.\n\n## 2025-08-16 星期六\n- **Mood:** 6\n- **Note:** 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。\n- **Math:** 2h行列式展开定理，7个行列式重要公式\n- **Code:** 1.5h杭电3题力扣1题\n- **Exercise:**  86 push - ups\n- **English:** \n    - 12min pronunciation-words ending with \"x,t,ck\"\n    - 30min learning \n    - 20min public speaking practice \n    > 修正文本：Hi, my friend. Today is August 16th. Today isn't an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don't know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with 'x', 't' and 'ck'. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.\n\t  > - 冠词使用错误，\"a ordinary day\"应为\"an ordinary day\"。\n\t  > - 时态错误，\"estimated i will score\"应是\"estimated I would score\"，因为\"estimated\"是过去式，从句要用相应过去时态。\n\t  > - 动词搭配，\"spend... in 夯练\"应是\"spend... practicing\"；\"spend... practice\"应是\"spend... practicing\"。\n    > - 名词单复数，\"advicees\"应为\"advice\"，advice 是不可数名词，没有复数形式。\n    > - 中式英语，\"我可能有点木强\"这种表述应转化为符合英语习惯的表达，如\"have a desire to be better\"。\n    \n## 2025-08-18 星期一\n- **Mood:** 6\n- **Note:** 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。\n- **Math:** 1h 矩阵基本运算，矩阵的逆\n- **Code:** 3h 深入学习指针，默写线性表模版，leetcode10题\n- **Exercise:** 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60\n- **English:** 20min youtube发音课\n\n## 2025-08-19 星期二\n- **Mood:** 8\n- **Note:** \n- **Math:** 1h 线性代数前两章笔记整理，\n- **Code:** 3h 十道力扣题目\n- **Exercise:** 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹\n- **English:** \n  - 15min 单词\n\n\n## 2025-08-21 星期四\n- **Mood:** 6\n- **Note:** \n- **Math:** \n- **Code:** 2h 单向链表模版代码\n- **Exercise:** \n- **English:** \n\n\n\n## 2025-08-28 星期四\n- **Mood:** \n- **Note:** \n- **Math:** 2h线性代数\n- **Code:** 1.5h 单向链表力扣题\n- **Exercise:** \n- **English:** \n\n## 2025-08-29 星期五\n- **Mood:** 6\n- **Note:** \n- **Math:** 3h 线性代数，矩阵的逆，矩阵的秩\n- **Code:** \n- **Exercise:** 游泳，憋气蛙\n- **English:** \n\n## 2025-08-31 星期日\n- **Mood:** 4\n- **Note:** 久坐很累\n- **Math:** 3h 伴随矩阵，分块矩阵，向量基本运算\n- **Code:** \n- **Exercise:** \n- **English:** 外刊20min\n","slug":"August","published":1,"updated":"2025-09-10T05:34:05.735Z","comments":1,"layout":"post","photos":[],"_id":"cmg0gdy0y0016k49khecq6y47","content":"<ul>\n<li>线代：姜晓千+研掌</li>\n<li>数据结构：英雄cpp + 严蔚敏</li>\n<li>英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊</li>\n<li>减脂：控制饮食，五分化训练</li>\n</ul>\n<h2 id=\"2025-08-14-星期四\"><a href=\"#2025-08-14-星期四\" class=\"headerlink\" title=\"2025-08-14 星期四\"></a>2025-08-14 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> 做了今天到开学学习和健身规划，蓄势待发</li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-15-星期五\"><a href=\"#2025-08-15-星期五\" class=\"headerlink\" title=\"2025-08-15 星期五\"></a>2025-08-15 星期五</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1.5h行列式定义，5个性质，5个重要行列式</li>\n<li><strong>Code:</strong> 1.5h线性表模版</li>\n<li><strong>Exercise:</strong> 38min慢跑5公里</li>\n<li><strong>English:</strong> <ul>\n<li>30min学歌</li>\n<li>20min观看油管发音视频”VvsW”</li>\n<li>20min记单词</li>\n<li>20min豆包口语练习<blockquote>\n<p>修正文本：Hello Doubao, I’m Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers’ home for vacation. Now I’ve come back to school and I’ll restart the challenge for about a month. I know you’re an AI and can’t recognize my pronunciation, but that’s okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I’ve also learned a song named “Love the Way You Lie” by Eminem and Rihanna. And I studied the pronunciation difference between “we” and “we’ve” on YouTube. Okay, that’s all. See you tomorrow.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-16-星期六\"><a href=\"#2025-08-16-星期六\" class=\"headerlink\" title=\"2025-08-16 星期六\"></a>2025-08-16 星期六</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。</li>\n<li><strong>Math:</strong> 2h行列式展开定理，7个行列式重要公式</li>\n<li><strong>Code:</strong> 1.5h杭电3题力扣1题</li>\n<li><strong>Exercise:</strong>  86 push - ups</li>\n<li><strong>English:</strong> <ul>\n<li>12min pronunciation-words ending with “x,t,ck”</li>\n<li>30min learning </li>\n<li>20min public speaking practice <blockquote>\n<p>修正文本：Hi, my friend. Today is August 16th. Today isn’t an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don’t know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with ‘x’, ‘t’ and ‘ck’. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.</p>\n<ul>\n<li>冠词使用错误，”a ordinary day”应为”an ordinary day”。</li>\n<li>时态错误，”estimated i will score”应是”estimated I would score”，因为”estimated”是过去式，从句要用相应过去时态。</li>\n<li>动词搭配，”spend… in 夯练”应是”spend… practicing”；”spend… practice”应是”spend… practicing”。</li>\n<li>名词单复数，”advicees”应为”advice”，advice 是不可数名词，没有复数形式。</li>\n<li>中式英语，”我可能有点木强”这种表述应转化为符合英语习惯的表达，如”have a desire to be better”。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-18-星期一\"><a href=\"#2025-08-18-星期一\" class=\"headerlink\" title=\"2025-08-18 星期一\"></a>2025-08-18 星期一</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。</li>\n<li><strong>Math:</strong> 1h 矩阵基本运算，矩阵的逆</li>\n<li><strong>Code:</strong> 3h 深入学习指针，默写线性表模版，leetcode10题</li>\n<li><strong>Exercise:</strong> 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60</li>\n<li><strong>English:</strong> 20min youtube发音课</li>\n</ul>\n<h2 id=\"2025-08-19-星期二\"><a href=\"#2025-08-19-星期二\" class=\"headerlink\" title=\"2025-08-19 星期二\"></a>2025-08-19 星期二</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1h 线性代数前两章笔记整理，</li>\n<li><strong>Code:</strong> 3h 十道力扣题目</li>\n<li><strong>Exercise:</strong> 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹</li>\n<li><strong>English:</strong> <ul>\n<li>15min 单词</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-21-星期四\"><a href=\"#2025-08-21-星期四\" class=\"headerlink\" title=\"2025-08-21 星期四\"></a>2025-08-21 星期四</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> 2h 单向链表模版代码</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-28-星期四\"><a href=\"#2025-08-28-星期四\" class=\"headerlink\" title=\"2025-08-28 星期四\"></a>2025-08-28 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 2h线性代数</li>\n<li><strong>Code:</strong> 1.5h 单向链表力扣题</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-29-星期五\"><a href=\"#2025-08-29-星期五\" class=\"headerlink\" title=\"2025-08-29 星期五\"></a>2025-08-29 星期五</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 3h 线性代数，矩阵的逆，矩阵的秩</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> 游泳，憋气蛙</li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-31-星期日\"><a href=\"#2025-08-31-星期日\" class=\"headerlink\" title=\"2025-08-31 星期日\"></a>2025-08-31 星期日</h2><ul>\n<li><strong>Mood:</strong> 4</li>\n<li><strong>Note:</strong> 久坐很累</li>\n<li><strong>Math:</strong> 3h 伴随矩阵，分块矩阵，向量基本运算</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong> 外刊20min</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>线代：姜晓千+研掌</li>\n<li>数据结构：英雄cpp + 严蔚敏</li>\n<li>英语：发音youtuber（english with ronnie），记单词15min，一分钟口语录音，读20min外刊</li>\n<li>减脂：控制饮食，五分化训练</li>\n</ul>\n<h2 id=\"2025-08-14-星期四\"><a href=\"#2025-08-14-星期四\" class=\"headerlink\" title=\"2025-08-14 星期四\"></a>2025-08-14 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> 做了今天到开学学习和健身规划，蓄势待发</li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-15-星期五\"><a href=\"#2025-08-15-星期五\" class=\"headerlink\" title=\"2025-08-15 星期五\"></a>2025-08-15 星期五</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1.5h行列式定义，5个性质，5个重要行列式</li>\n<li><strong>Code:</strong> 1.5h线性表模版</li>\n<li><strong>Exercise:</strong> 38min慢跑5公里</li>\n<li><strong>English:</strong> <ul>\n<li>30min学歌</li>\n<li>20min观看油管发音视频”VvsW”</li>\n<li>20min记单词</li>\n<li>20min豆包口语练习<blockquote>\n<p>修正文本：Hello Doubao, I’m Jiang Xu. About a month ago, I tried the challenge of doing public speaking for one minute every day. I did it for about three days, but then I went to my brothers’ home for vacation. Now I’ve come back to school and I’ll restart the challenge for about a month. I know you’re an AI and can’t recognize my pronunciation, but that’s okay. So, what did I do today? Let me think. In the morning, I studied data structures. In the afternoon, I studied linear algebra. In the late afternoon, I jogged for about forty minutes. In the evening, I practiced my English with you, Doubao. I’ve also learned a song named “Love the Way You Lie” by Eminem and Rihanna. And I studied the pronunciation difference between “we” and “we’ve” on YouTube. Okay, that’s all. See you tomorrow.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-16-星期六\"><a href=\"#2025-08-16-星期六\" class=\"headerlink\" title=\"2025-08-16 星期六\"></a>2025-08-16 星期六</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 四级出分，536，一开始失落的，虽然之前估分也就是500出头，不知道为啥还失落，后来看到大家都挺差的也好想了一些，但是我这种心态显然不对。</li>\n<li><strong>Math:</strong> 2h行列式展开定理，7个行列式重要公式</li>\n<li><strong>Code:</strong> 1.5h杭电3题力扣1题</li>\n<li><strong>Exercise:</strong>  86 push - ups</li>\n<li><strong>English:</strong> <ul>\n<li>12min pronunciation-words ending with “x,t,ck”</li>\n<li>30min learning </li>\n<li>20min public speaking practice <blockquote>\n<p>修正文本：Hi, my friend. Today is August 16th. Today isn’t an ordinary day for me because the CET - 4 results came out today. I scored 536. When I saw the score, I felt a bit disappointed even if I had expected to score around 500. But I don’t know why I still felt a little down. So I think maybe I have a desire to be better. And what did I do today? For math, I spent two hours practicing determinant. I also spent about 1.5 hours on some problems from Hangzhou University of Science and Technology. As for exercise, I did 86 push - ups. Regarding English, I spent twelve minutes practicing my pronunciation of words ending with ‘x’, ‘t’ and ‘ck’. I spent about thirty minutes learning the same song as yesterday. And I spent about twenty minutes practicing speaking with you. So I hope you can check my grammar mistakes and offer some advice. Thank you.</p>\n<ul>\n<li>冠词使用错误，”a ordinary day”应为”an ordinary day”。</li>\n<li>时态错误，”estimated i will score”应是”estimated I would score”，因为”estimated”是过去式，从句要用相应过去时态。</li>\n<li>动词搭配，”spend… in 夯练”应是”spend… practicing”；”spend… practice”应是”spend… practicing”。</li>\n<li>名词单复数，”advicees”应为”advice”，advice 是不可数名词，没有复数形式。</li>\n<li>中式英语，”我可能有点木强”这种表述应转化为符合英语习惯的表达，如”have a desire to be better”。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-18-星期一\"><a href=\"#2025-08-18-星期一\" class=\"headerlink\" title=\"2025-08-18 星期一\"></a>2025-08-18 星期一</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> 起晚了，以后十一点睡觉，早上七点起床读外刊喝黑咖啡，然后健身，洗澡，下午六点开始离开自习室，回宿舍后弄英语然后玩，避免报复性熬夜娱乐。</li>\n<li><strong>Math:</strong> 1h 矩阵基本运算，矩阵的逆</li>\n<li><strong>Code:</strong> 3h 深入学习指针，默写线性表模版，leetcode10题</li>\n<li><strong>Exercise:</strong> 1h 俯卧撑60，臂力棒弯举36，弹力带夹胸60</li>\n<li><strong>English:</strong> 20min youtube发音课</li>\n</ul>\n<h2 id=\"2025-08-19-星期二\"><a href=\"#2025-08-19-星期二\" class=\"headerlink\" title=\"2025-08-19 星期二\"></a>2025-08-19 星期二</h2><ul>\n<li><strong>Mood:</strong> 8</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 1h 线性代数前两章笔记整理，</li>\n<li><strong>Code:</strong> 3h 十道力扣题目</li>\n<li><strong>Exercise:</strong> 1h 弹力带划船，俯身Y字伸展，弹力带下拉，平板支撑，卷腹</li>\n<li><strong>English:</strong> <ul>\n<li>15min 单词</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2025-08-21-星期四\"><a href=\"#2025-08-21-星期四\" class=\"headerlink\" title=\"2025-08-21 星期四\"></a>2025-08-21 星期四</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> </li>\n<li><strong>Code:</strong> 2h 单向链表模版代码</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-28-星期四\"><a href=\"#2025-08-28-星期四\" class=\"headerlink\" title=\"2025-08-28 星期四\"></a>2025-08-28 星期四</h2><ul>\n<li><strong>Mood:</strong> </li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 2h线性代数</li>\n<li><strong>Code:</strong> 1.5h 单向链表力扣题</li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-29-星期五\"><a href=\"#2025-08-29-星期五\" class=\"headerlink\" title=\"2025-08-29 星期五\"></a>2025-08-29 星期五</h2><ul>\n<li><strong>Mood:</strong> 6</li>\n<li><strong>Note:</strong> </li>\n<li><strong>Math:</strong> 3h 线性代数，矩阵的逆，矩阵的秩</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> 游泳，憋气蛙</li>\n<li><strong>English:</strong></li>\n</ul>\n<h2 id=\"2025-08-31-星期日\"><a href=\"#2025-08-31-星期日\" class=\"headerlink\" title=\"2025-08-31 星期日\"></a>2025-08-31 星期日</h2><ul>\n<li><strong>Mood:</strong> 4</li>\n<li><strong>Note:</strong> 久坐很累</li>\n<li><strong>Math:</strong> 3h 伴随矩阵，分块矩阵，向量基本运算</li>\n<li><strong>Code:</strong> </li>\n<li><strong>Exercise:</strong> </li>\n<li><strong>English:</strong> 外刊20min</li>\n</ul>\n"},{"title":"Nature of University","date":"2025-10-02T16:47:06.000Z","_content":"#### 声明\n- 可能引人不适，请谨慎观看\n- 虚构演绎，仅供娱乐\n- 内容纯属虚构不涉及不隐喻任何团体组织和自然人\n#### 参考\n- [上海交通大学生存手册](https://github.com/SurviveSJTU/SurviveSJTUManual/blob/master/SUMMARY.md)\n- [一位dy博主不可全信不可全不信](https://v.douyin.com/mUDKTfj_V94/)\n# 站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\n\n>《上海交通大学生存手册》里写了这样一句话，第一次看见时只当耸人听闻。等到真走进大学，才知字字见骨。\n<img src=\"/img/SJTUmanual.png\" alt=\"手册引用\" width=\"600\">\n\n听清楚：如果把大学比作一家公司，那么**本科生就是公司的礼仪小姐**。本科生 = 礼仪小姐；研究生 = 公司里的牛马。\n## 为什么本科生是“礼仪小姐”？\n\n礼仪小姐不参与生产，不创造价值。她的工作是“好看”“端着”——站在门口，给来访者和投资方一个漂亮的第一印象。大学里的本科生，正被安排去做这一件事：去上那些毫无营养的水课、去凑那些没有意义的讲座、去打卡签到，去站四年岗，然后拿一本毕业证书回家。\n\n你有没有想过，为什么学校要设计一堆水课、严抓考勤、逼你参加各种活动？就是为了把你牢牢绑定在校园内——不能去实习、不能去自由探索、不能轻易离开。大学要的是你作为“人数”和“面子”的存在：考试通过、出席率够、毕业证到手，外面看一切光鲜亮丽。你的青春、你的好奇、你的时间，都在这些“例行公事”里被耗尽，然后被包装成“校园生活精彩”的宣传照。\n\n再把“水课现象”讲透一点：\n\n- **大学的“客户”是谁？** 在高中，真正的付费者是家长，学校靠“分数+升学榜单”说话，教学质量抓上去=家长愿意买单；而在大学，主要“客户”是国家基金、企业项目与外部合作，真正给大钱的是他们，不是本科生的学费。\n- **于是出现策略差异：** 高中围绕“提分KPI”运转；大学围绕“名声与产出KPI”（论文、项目、合作、排名）运转。本科生成绩抬高，对大学的核心收入贡献有限，于是资源天然倾斜到“能变现的科研与合作”。\n- **水课/签到/讲座/德育分**的功能是“留人+稳场面+降风险”：把人留在校内、保持秩序和可控度，产出漂亮的出勤率与活动照片，服务“名声”与“风控”。\n\n别自欺欺人地以为你交的学费撑起了学校的大盘子。学费只是象征性的存在，真正的大钱根本不来自你这个“门口站岗”的角色。\n\n## 那么谁在“生产价值”？\n\n大学作为公司，真正的商品是科研：论文、项目、基金、技术成果、对外合作。这些东西的买家是谁？国家科研基金、企业委托、项目资助、广告冠名、产学研合作——这些才是钱流动的地方。而**谁在做这些“生产”活儿？是研究生，是导师和实验室**。他们是公司里的打工人：拿补贴、拿微薄工资、给导师创造产出、替学校申报项目、替企业做外包。研究生的劳动可以直接变现成经费、成果和名誉，而本科生？充其量是凑人数、凑场面、替学校做“招生宣传”的活体背景板。\n\n简而言之：研究生是真正被当作劳动力的“牛马”，他们做活、产出、背负评估指标；本科生被当作“门面”和“消费群体”。大学把你放在门口只是因为你便宜、听话、好控制。\n\n## 大学的三大钱袋子\n\n1. **国家基金与科研拨款**——论文、项目、课题，名校的显赫背后是靠这些大额拨款。\n2. **企业外包与横向课题**——大企业有事就把工作丢给大学的实验室和研究团队做，研究生去做具体活，学校和导师收钱、分成。\n3. **品牌合作与冠名广告**——“某某大学认证”“某某学院合作”这些把大学变成第三方背书的平台。\n\n你们这些礼仪小姐的出勤率、面子工程、讲座背书，对这些钱真正的流向毫无影响。别再天真地以为“我交的学费养活了学校”。大多数公办高校靠的是项目和合作，不靠你那点象征性的学费。\n\n再给一个粗糙但直观的算术：\n\n- 假设某“985级别”大学每年招收本科生 10,000 人，平均学费按 2 万/年计，那也不过约 2 亿元/年。\n- 这些学校的年度经费体量往往是“十亿—百亿级”的综合盘子，主要靠国家投入、科研基金、社会合作等填充。\n- 这意味着：把本科生课程分数整体抬高，并不会显著影响核心“现金流”；但“名声、项目、成果、评价、排名”波动，才会直接影响资金盘。\n\n## 为何学校鼓励考研、保研（尤其是留在本校）？\n\n这其实是公司的人事策略：把门口的礼仪小姐培养成门内的打工人。学校宁可你留在体制内继续“站岗——上岗”二转——也不希望你跑出去找真工厂、真公司、真实战的机会。为什么？因为你一旦有了选择、有了自由，自然不会乖乖地做“门面”；学校的名声、场面管理就危险了。把你调进研究生体系，你从“站门口的装饰”被变成“产值制造者”。对学校来说，这是一条顺畅的利益链条：培养出更多廉价劳动力，产出项目、拿下资金、夸耀排名。\n\n顺着这条逻辑，**为什么大学会安排一堆“无意义”的东西、卡你实习、卡你自由？**\n\n- **名声影响的是投资，不首先是招生。** 招生在很多地区有“刚需”与区域性稳定流量，一个学校若出负面舆情，最先受冲击的是合作方与出资方的信心——项目、基金、横向课题、品牌合作会犹豫甚至暂停。\n- **风控优先级极高。** 放开自由=更多校外活动与不确定性；一旦发生安全事故或舆情事件，名声下跌→融资与合作承压→问责到人。相比之下，把你稳在校内、两点一线，才是“最优解”。\n- **于是你看到：** 实习难批、长假难批、严格考勤、晚点名、宿舍门禁、安全教育、层层报备……这些并不一定提升你的“学习”，但显著降低学校的“风险”。\n\n你可能问：这和我个人成长有什么关系？很残酷——**对学校的KPI而言，你的长远能力成长并非核心指标。** 学校需要的是三个冰冷的数字：\n\n- 就业率（含灵活就业口径）\n- 考研率/保研率\n- 毕业率\n\n很少有学校长期、透明地公布“毕业生薪资中位数、三五年后纵向发展曲线”。因为这些指标不能立刻为“名声—资金”闭环服务。\n\n## 我们该怎么办？（别当门口的装饰）\n\n我不是讲恐吓，我是要点醒你。四年太宝贵，别把它交给一个把你当成“摆设”的系统来消耗。醒一醒，问问自己：\n\n* 你是在学习，还是在被安排去完成“出席率”和“讲座学分”？\n* 你的时间是在被设计来生产价值，还是被用来制造“校园风景”？\n* 你要做礼仪小姐，还是要去外面真正做事、实习、创业、摸真实工作的脊梁？\n\n现实很残酷：大学体制有其自保逻辑，不是专门坑你，但也绝不会为你个体负责。那就靠我们自己：提早实习、去企业、去实验室真正参与项目、选导师看清他的科研和项目来源、学会用时间换能力而不是换证书。不要把“考研保研”当成唯一出路，别把研究生身份当作终极荣誉——那可能只是从“门口站岗”被转移到“车间打工”而已。\n\n## 结语（不粉饰，不妥协）\n\n我们可以接收现实的残酷，也可以不被现实绑架。把大学当作资源——不是把自己当作资源的寄托。认清学校的本质，不是为了喷它，而是为了从迷雾里走出来，用我们的选择去拆解这套体系——去实习，去创业，去跨界，去用能力而非面子赢得未来。\n\n礼仪小姐可以有尊严地下岗，去做真正的事。","source":"_posts/Nature-of-University.md","raw":"---\ntitle: Nature of University\ndate: 2025-10-03 00:47:06\ntags: \n---\n#### 声明\n- 可能引人不适，请谨慎观看\n- 虚构演绎，仅供娱乐\n- 内容纯属虚构不涉及不隐喻任何团体组织和自然人\n#### 参考\n- [上海交通大学生存手册](https://github.com/SurviveSJTU/SurviveSJTUManual/blob/master/SUMMARY.md)\n- [一位dy博主不可全信不可全不信](https://v.douyin.com/mUDKTfj_V94/)\n# 站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\n\n>《上海交通大学生存手册》里写了这样一句话，第一次看见时只当耸人听闻。等到真走进大学，才知字字见骨。\n<img src=\"/img/SJTUmanual.png\" alt=\"手册引用\" width=\"600\">\n\n听清楚：如果把大学比作一家公司，那么**本科生就是公司的礼仪小姐**。本科生 = 礼仪小姐；研究生 = 公司里的牛马。\n## 为什么本科生是“礼仪小姐”？\n\n礼仪小姐不参与生产，不创造价值。她的工作是“好看”“端着”——站在门口，给来访者和投资方一个漂亮的第一印象。大学里的本科生，正被安排去做这一件事：去上那些毫无营养的水课、去凑那些没有意义的讲座、去打卡签到，去站四年岗，然后拿一本毕业证书回家。\n\n你有没有想过，为什么学校要设计一堆水课、严抓考勤、逼你参加各种活动？就是为了把你牢牢绑定在校园内——不能去实习、不能去自由探索、不能轻易离开。大学要的是你作为“人数”和“面子”的存在：考试通过、出席率够、毕业证到手，外面看一切光鲜亮丽。你的青春、你的好奇、你的时间，都在这些“例行公事”里被耗尽，然后被包装成“校园生活精彩”的宣传照。\n\n再把“水课现象”讲透一点：\n\n- **大学的“客户”是谁？** 在高中，真正的付费者是家长，学校靠“分数+升学榜单”说话，教学质量抓上去=家长愿意买单；而在大学，主要“客户”是国家基金、企业项目与外部合作，真正给大钱的是他们，不是本科生的学费。\n- **于是出现策略差异：** 高中围绕“提分KPI”运转；大学围绕“名声与产出KPI”（论文、项目、合作、排名）运转。本科生成绩抬高，对大学的核心收入贡献有限，于是资源天然倾斜到“能变现的科研与合作”。\n- **水课/签到/讲座/德育分**的功能是“留人+稳场面+降风险”：把人留在校内、保持秩序和可控度，产出漂亮的出勤率与活动照片，服务“名声”与“风控”。\n\n别自欺欺人地以为你交的学费撑起了学校的大盘子。学费只是象征性的存在，真正的大钱根本不来自你这个“门口站岗”的角色。\n\n## 那么谁在“生产价值”？\n\n大学作为公司，真正的商品是科研：论文、项目、基金、技术成果、对外合作。这些东西的买家是谁？国家科研基金、企业委托、项目资助、广告冠名、产学研合作——这些才是钱流动的地方。而**谁在做这些“生产”活儿？是研究生，是导师和实验室**。他们是公司里的打工人：拿补贴、拿微薄工资、给导师创造产出、替学校申报项目、替企业做外包。研究生的劳动可以直接变现成经费、成果和名誉，而本科生？充其量是凑人数、凑场面、替学校做“招生宣传”的活体背景板。\n\n简而言之：研究生是真正被当作劳动力的“牛马”，他们做活、产出、背负评估指标；本科生被当作“门面”和“消费群体”。大学把你放在门口只是因为你便宜、听话、好控制。\n\n## 大学的三大钱袋子\n\n1. **国家基金与科研拨款**——论文、项目、课题，名校的显赫背后是靠这些大额拨款。\n2. **企业外包与横向课题**——大企业有事就把工作丢给大学的实验室和研究团队做，研究生去做具体活，学校和导师收钱、分成。\n3. **品牌合作与冠名广告**——“某某大学认证”“某某学院合作”这些把大学变成第三方背书的平台。\n\n你们这些礼仪小姐的出勤率、面子工程、讲座背书，对这些钱真正的流向毫无影响。别再天真地以为“我交的学费养活了学校”。大多数公办高校靠的是项目和合作，不靠你那点象征性的学费。\n\n再给一个粗糙但直观的算术：\n\n- 假设某“985级别”大学每年招收本科生 10,000 人，平均学费按 2 万/年计，那也不过约 2 亿元/年。\n- 这些学校的年度经费体量往往是“十亿—百亿级”的综合盘子，主要靠国家投入、科研基金、社会合作等填充。\n- 这意味着：把本科生课程分数整体抬高，并不会显著影响核心“现金流”；但“名声、项目、成果、评价、排名”波动，才会直接影响资金盘。\n\n## 为何学校鼓励考研、保研（尤其是留在本校）？\n\n这其实是公司的人事策略：把门口的礼仪小姐培养成门内的打工人。学校宁可你留在体制内继续“站岗——上岗”二转——也不希望你跑出去找真工厂、真公司、真实战的机会。为什么？因为你一旦有了选择、有了自由，自然不会乖乖地做“门面”；学校的名声、场面管理就危险了。把你调进研究生体系，你从“站门口的装饰”被变成“产值制造者”。对学校来说，这是一条顺畅的利益链条：培养出更多廉价劳动力，产出项目、拿下资金、夸耀排名。\n\n顺着这条逻辑，**为什么大学会安排一堆“无意义”的东西、卡你实习、卡你自由？**\n\n- **名声影响的是投资，不首先是招生。** 招生在很多地区有“刚需”与区域性稳定流量，一个学校若出负面舆情，最先受冲击的是合作方与出资方的信心——项目、基金、横向课题、品牌合作会犹豫甚至暂停。\n- **风控优先级极高。** 放开自由=更多校外活动与不确定性；一旦发生安全事故或舆情事件，名声下跌→融资与合作承压→问责到人。相比之下，把你稳在校内、两点一线，才是“最优解”。\n- **于是你看到：** 实习难批、长假难批、严格考勤、晚点名、宿舍门禁、安全教育、层层报备……这些并不一定提升你的“学习”，但显著降低学校的“风险”。\n\n你可能问：这和我个人成长有什么关系？很残酷——**对学校的KPI而言，你的长远能力成长并非核心指标。** 学校需要的是三个冰冷的数字：\n\n- 就业率（含灵活就业口径）\n- 考研率/保研率\n- 毕业率\n\n很少有学校长期、透明地公布“毕业生薪资中位数、三五年后纵向发展曲线”。因为这些指标不能立刻为“名声—资金”闭环服务。\n\n## 我们该怎么办？（别当门口的装饰）\n\n我不是讲恐吓，我是要点醒你。四年太宝贵，别把它交给一个把你当成“摆设”的系统来消耗。醒一醒，问问自己：\n\n* 你是在学习，还是在被安排去完成“出席率”和“讲座学分”？\n* 你的时间是在被设计来生产价值，还是被用来制造“校园风景”？\n* 你要做礼仪小姐，还是要去外面真正做事、实习、创业、摸真实工作的脊梁？\n\n现实很残酷：大学体制有其自保逻辑，不是专门坑你，但也绝不会为你个体负责。那就靠我们自己：提早实习、去企业、去实验室真正参与项目、选导师看清他的科研和项目来源、学会用时间换能力而不是换证书。不要把“考研保研”当成唯一出路，别把研究生身份当作终极荣誉——那可能只是从“门口站岗”被转移到“车间打工”而已。\n\n## 结语（不粉饰，不妥协）\n\n我们可以接收现实的残酷，也可以不被现实绑架。把大学当作资源——不是把自己当作资源的寄托。认清学校的本质，不是为了喷它，而是为了从迷雾里走出来，用我们的选择去拆解这套体系——去实习，去创业，去跨界，去用能力而非面子赢得未来。\n\n礼仪小姐可以有尊严地下岗，去做真正的事。","slug":"Nature-of-University","published":1,"updated":"2025-10-04T09:32:41.677Z","_id":"cmgakvmel0000cx9k5ofyb7z6","comments":1,"layout":"post","photos":[],"content":"<h4 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h4><ul>\n<li>可能引人不适，请谨慎观看</li>\n<li>虚构演绎，仅供娱乐</li>\n<li>内容纯属虚构不涉及不隐喻任何团体组织和自然人</li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://github.com/SurviveSJTU/SurviveSJTUManual/blob/master/SUMMARY.md\">上海交通大学生存手册</a></li>\n<li><a href=\"https://v.douyin.com/mUDKTfj_V94/\">一位dy博主不可全信不可全不信</a></li>\n</ul>\n<h1 id=\"站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\"><a href=\"#站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\" class=\"headerlink\" title=\"站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\"></a>站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）</h1><blockquote>\n<p>《上海交通大学生存手册》里写了这样一句话，第一次看见时只当耸人听闻。等到真走进大学，才知字字见骨。</p>\n<img src=\"/img/SJTUmanual.png\" alt=\"手册引用\" width=\"600\"></blockquote>\n<p>听清楚：如果把大学比作一家公司，那么<strong>本科生就是公司的礼仪小姐</strong>。本科生 &#x3D; 礼仪小姐；研究生 &#x3D; 公司里的牛马。</p>\n<h2 id=\"为什么本科生是“礼仪小姐”？\"><a href=\"#为什么本科生是“礼仪小姐”？\" class=\"headerlink\" title=\"为什么本科生是“礼仪小姐”？\"></a>为什么本科生是“礼仪小姐”？</h2><p>礼仪小姐不参与生产，不创造价值。她的工作是“好看”“端着”——站在门口，给来访者和投资方一个漂亮的第一印象。大学里的本科生，正被安排去做这一件事：去上那些毫无营养的水课、去凑那些没有意义的讲座、去打卡签到，去站四年岗，然后拿一本毕业证书回家。</p>\n<p>你有没有想过，为什么学校要设计一堆水课、严抓考勤、逼你参加各种活动？就是为了把你牢牢绑定在校园内——不能去实习、不能去自由探索、不能轻易离开。大学要的是你作为“人数”和“面子”的存在：考试通过、出席率够、毕业证到手，外面看一切光鲜亮丽。你的青春、你的好奇、你的时间，都在这些“例行公事”里被耗尽，然后被包装成“校园生活精彩”的宣传照。</p>\n<p>再把“水课现象”讲透一点：</p>\n<ul>\n<li><strong>大学的“客户”是谁？</strong> 在高中，真正的付费者是家长，学校靠“分数+升学榜单”说话，教学质量抓上去&#x3D;家长愿意买单；而在大学，主要“客户”是国家基金、企业项目与外部合作，真正给大钱的是他们，不是本科生的学费。</li>\n<li><strong>于是出现策略差异：</strong> 高中围绕“提分KPI”运转；大学围绕“名声与产出KPI”（论文、项目、合作、排名）运转。本科生成绩抬高，对大学的核心收入贡献有限，于是资源天然倾斜到“能变现的科研与合作”。</li>\n<li><strong>水课&#x2F;签到&#x2F;讲座&#x2F;德育分</strong>的功能是“留人+稳场面+降风险”：把人留在校内、保持秩序和可控度，产出漂亮的出勤率与活动照片，服务“名声”与“风控”。</li>\n</ul>\n<p>别自欺欺人地以为你交的学费撑起了学校的大盘子。学费只是象征性的存在，真正的大钱根本不来自你这个“门口站岗”的角色。</p>\n<h2 id=\"那么谁在“生产价值”？\"><a href=\"#那么谁在“生产价值”？\" class=\"headerlink\" title=\"那么谁在“生产价值”？\"></a>那么谁在“生产价值”？</h2><p>大学作为公司，真正的商品是科研：论文、项目、基金、技术成果、对外合作。这些东西的买家是谁？国家科研基金、企业委托、项目资助、广告冠名、产学研合作——这些才是钱流动的地方。而<strong>谁在做这些“生产”活儿？是研究生，是导师和实验室</strong>。他们是公司里的打工人：拿补贴、拿微薄工资、给导师创造产出、替学校申报项目、替企业做外包。研究生的劳动可以直接变现成经费、成果和名誉，而本科生？充其量是凑人数、凑场面、替学校做“招生宣传”的活体背景板。</p>\n<p>简而言之：研究生是真正被当作劳动力的“牛马”，他们做活、产出、背负评估指标；本科生被当作“门面”和“消费群体”。大学把你放在门口只是因为你便宜、听话、好控制。</p>\n<h2 id=\"大学的三大钱袋子\"><a href=\"#大学的三大钱袋子\" class=\"headerlink\" title=\"大学的三大钱袋子\"></a>大学的三大钱袋子</h2><ol>\n<li><strong>国家基金与科研拨款</strong>——论文、项目、课题，名校的显赫背后是靠这些大额拨款。</li>\n<li><strong>企业外包与横向课题</strong>——大企业有事就把工作丢给大学的实验室和研究团队做，研究生去做具体活，学校和导师收钱、分成。</li>\n<li><strong>品牌合作与冠名广告</strong>——“某某大学认证”“某某学院合作”这些把大学变成第三方背书的平台。</li>\n</ol>\n<p>你们这些礼仪小姐的出勤率、面子工程、讲座背书，对这些钱真正的流向毫无影响。别再天真地以为“我交的学费养活了学校”。大多数公办高校靠的是项目和合作，不靠你那点象征性的学费。</p>\n<p>再给一个粗糙但直观的算术：</p>\n<ul>\n<li>假设某“985级别”大学每年招收本科生 10,000 人，平均学费按 2 万&#x2F;年计，那也不过约 2 亿元&#x2F;年。</li>\n<li>这些学校的年度经费体量往往是“十亿—百亿级”的综合盘子，主要靠国家投入、科研基金、社会合作等填充。</li>\n<li>这意味着：把本科生课程分数整体抬高，并不会显著影响核心“现金流”；但“名声、项目、成果、评价、排名”波动，才会直接影响资金盘。</li>\n</ul>\n<h2 id=\"为何学校鼓励考研、保研（尤其是留在本校）？\"><a href=\"#为何学校鼓励考研、保研（尤其是留在本校）？\" class=\"headerlink\" title=\"为何学校鼓励考研、保研（尤其是留在本校）？\"></a>为何学校鼓励考研、保研（尤其是留在本校）？</h2><p>这其实是公司的人事策略：把门口的礼仪小姐培养成门内的打工人。学校宁可你留在体制内继续“站岗——上岗”二转——也不希望你跑出去找真工厂、真公司、真实战的机会。为什么？因为你一旦有了选择、有了自由，自然不会乖乖地做“门面”；学校的名声、场面管理就危险了。把你调进研究生体系，你从“站门口的装饰”被变成“产值制造者”。对学校来说，这是一条顺畅的利益链条：培养出更多廉价劳动力，产出项目、拿下资金、夸耀排名。</p>\n<p>顺着这条逻辑，<strong>为什么大学会安排一堆“无意义”的东西、卡你实习、卡你自由？</strong></p>\n<ul>\n<li><strong>名声影响的是投资，不首先是招生。</strong> 招生在很多地区有“刚需”与区域性稳定流量，一个学校若出负面舆情，最先受冲击的是合作方与出资方的信心——项目、基金、横向课题、品牌合作会犹豫甚至暂停。</li>\n<li><strong>风控优先级极高。</strong> 放开自由&#x3D;更多校外活动与不确定性；一旦发生安全事故或舆情事件，名声下跌→融资与合作承压→问责到人。相比之下，把你稳在校内、两点一线，才是“最优解”。</li>\n<li><strong>于是你看到：</strong> 实习难批、长假难批、严格考勤、晚点名、宿舍门禁、安全教育、层层报备……这些并不一定提升你的“学习”，但显著降低学校的“风险”。</li>\n</ul>\n<p>你可能问：这和我个人成长有什么关系？很残酷——<strong>对学校的KPI而言，你的长远能力成长并非核心指标。</strong> 学校需要的是三个冰冷的数字：</p>\n<ul>\n<li>就业率（含灵活就业口径）</li>\n<li>考研率&#x2F;保研率</li>\n<li>毕业率</li>\n</ul>\n<p>很少有学校长期、透明地公布“毕业生薪资中位数、三五年后纵向发展曲线”。因为这些指标不能立刻为“名声—资金”闭环服务。</p>\n<h2 id=\"我们该怎么办？（别当门口的装饰）\"><a href=\"#我们该怎么办？（别当门口的装饰）\" class=\"headerlink\" title=\"我们该怎么办？（别当门口的装饰）\"></a>我们该怎么办？（别当门口的装饰）</h2><p>我不是讲恐吓，我是要点醒你。四年太宝贵，别把它交给一个把你当成“摆设”的系统来消耗。醒一醒，问问自己：</p>\n<ul>\n<li>你是在学习，还是在被安排去完成“出席率”和“讲座学分”？</li>\n<li>你的时间是在被设计来生产价值，还是被用来制造“校园风景”？</li>\n<li>你要做礼仪小姐，还是要去外面真正做事、实习、创业、摸真实工作的脊梁？</li>\n</ul>\n<p>现实很残酷：大学体制有其自保逻辑，不是专门坑你，但也绝不会为你个体负责。那就靠我们自己：提早实习、去企业、去实验室真正参与项目、选导师看清他的科研和项目来源、学会用时间换能力而不是换证书。不要把“考研保研”当成唯一出路，别把研究生身份当作终极荣誉——那可能只是从“门口站岗”被转移到“车间打工”而已。</p>\n<h2 id=\"结语（不粉饰，不妥协）\"><a href=\"#结语（不粉饰，不妥协）\" class=\"headerlink\" title=\"结语（不粉饰，不妥协）\"></a>结语（不粉饰，不妥协）</h2><p>我们可以接收现实的残酷，也可以不被现实绑架。把大学当作资源——不是把自己当作资源的寄托。认清学校的本质，不是为了喷它，而是为了从迷雾里走出来，用我们的选择去拆解这套体系——去实习，去创业，去跨界，去用能力而非面子赢得未来。</p>\n<p>礼仪小姐可以有尊严地下岗，去做真正的事。</p>\n","excerpt":"","more":"<h4 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h4><ul>\n<li>可能引人不适，请谨慎观看</li>\n<li>虚构演绎，仅供娱乐</li>\n<li>内容纯属虚构不涉及不隐喻任何团体组织和自然人</li>\n</ul>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li><a href=\"https://github.com/SurviveSJTU/SurviveSJTUManual/blob/master/SUMMARY.md\">上海交通大学生存手册</a></li>\n<li><a href=\"https://v.douyin.com/mUDKTfj_V94/\">一位dy博主不可全信不可全不信</a></li>\n</ul>\n<h1 id=\"站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\"><a href=\"#站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\" class=\"headerlink\" title=\"站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）\"></a>站岗四年：大学其实是一家公司（我们只是门口的礼仪小姐）</h1><blockquote>\n<p>《上海交通大学生存手册》里写了这样一句话，第一次看见时只当耸人听闻。等到真走进大学，才知字字见骨。</p>\n<img src=\"/img/SJTUmanual.png\" alt=\"手册引用\" width=\"600\"></blockquote>\n<p>听清楚：如果把大学比作一家公司，那么<strong>本科生就是公司的礼仪小姐</strong>。本科生 &#x3D; 礼仪小姐；研究生 &#x3D; 公司里的牛马。</p>\n<h2 id=\"为什么本科生是“礼仪小姐”？\"><a href=\"#为什么本科生是“礼仪小姐”？\" class=\"headerlink\" title=\"为什么本科生是“礼仪小姐”？\"></a>为什么本科生是“礼仪小姐”？</h2><p>礼仪小姐不参与生产，不创造价值。她的工作是“好看”“端着”——站在门口，给来访者和投资方一个漂亮的第一印象。大学里的本科生，正被安排去做这一件事：去上那些毫无营养的水课、去凑那些没有意义的讲座、去打卡签到，去站四年岗，然后拿一本毕业证书回家。</p>\n<p>你有没有想过，为什么学校要设计一堆水课、严抓考勤、逼你参加各种活动？就是为了把你牢牢绑定在校园内——不能去实习、不能去自由探索、不能轻易离开。大学要的是你作为“人数”和“面子”的存在：考试通过、出席率够、毕业证到手，外面看一切光鲜亮丽。你的青春、你的好奇、你的时间，都在这些“例行公事”里被耗尽，然后被包装成“校园生活精彩”的宣传照。</p>\n<p>再把“水课现象”讲透一点：</p>\n<ul>\n<li><strong>大学的“客户”是谁？</strong> 在高中，真正的付费者是家长，学校靠“分数+升学榜单”说话，教学质量抓上去&#x3D;家长愿意买单；而在大学，主要“客户”是国家基金、企业项目与外部合作，真正给大钱的是他们，不是本科生的学费。</li>\n<li><strong>于是出现策略差异：</strong> 高中围绕“提分KPI”运转；大学围绕“名声与产出KPI”（论文、项目、合作、排名）运转。本科生成绩抬高，对大学的核心收入贡献有限，于是资源天然倾斜到“能变现的科研与合作”。</li>\n<li><strong>水课&#x2F;签到&#x2F;讲座&#x2F;德育分</strong>的功能是“留人+稳场面+降风险”：把人留在校内、保持秩序和可控度，产出漂亮的出勤率与活动照片，服务“名声”与“风控”。</li>\n</ul>\n<p>别自欺欺人地以为你交的学费撑起了学校的大盘子。学费只是象征性的存在，真正的大钱根本不来自你这个“门口站岗”的角色。</p>\n<h2 id=\"那么谁在“生产价值”？\"><a href=\"#那么谁在“生产价值”？\" class=\"headerlink\" title=\"那么谁在“生产价值”？\"></a>那么谁在“生产价值”？</h2><p>大学作为公司，真正的商品是科研：论文、项目、基金、技术成果、对外合作。这些东西的买家是谁？国家科研基金、企业委托、项目资助、广告冠名、产学研合作——这些才是钱流动的地方。而<strong>谁在做这些“生产”活儿？是研究生，是导师和实验室</strong>。他们是公司里的打工人：拿补贴、拿微薄工资、给导师创造产出、替学校申报项目、替企业做外包。研究生的劳动可以直接变现成经费、成果和名誉，而本科生？充其量是凑人数、凑场面、替学校做“招生宣传”的活体背景板。</p>\n<p>简而言之：研究生是真正被当作劳动力的“牛马”，他们做活、产出、背负评估指标；本科生被当作“门面”和“消费群体”。大学把你放在门口只是因为你便宜、听话、好控制。</p>\n<h2 id=\"大学的三大钱袋子\"><a href=\"#大学的三大钱袋子\" class=\"headerlink\" title=\"大学的三大钱袋子\"></a>大学的三大钱袋子</h2><ol>\n<li><strong>国家基金与科研拨款</strong>——论文、项目、课题，名校的显赫背后是靠这些大额拨款。</li>\n<li><strong>企业外包与横向课题</strong>——大企业有事就把工作丢给大学的实验室和研究团队做，研究生去做具体活，学校和导师收钱、分成。</li>\n<li><strong>品牌合作与冠名广告</strong>——“某某大学认证”“某某学院合作”这些把大学变成第三方背书的平台。</li>\n</ol>\n<p>你们这些礼仪小姐的出勤率、面子工程、讲座背书，对这些钱真正的流向毫无影响。别再天真地以为“我交的学费养活了学校”。大多数公办高校靠的是项目和合作，不靠你那点象征性的学费。</p>\n<p>再给一个粗糙但直观的算术：</p>\n<ul>\n<li>假设某“985级别”大学每年招收本科生 10,000 人，平均学费按 2 万&#x2F;年计，那也不过约 2 亿元&#x2F;年。</li>\n<li>这些学校的年度经费体量往往是“十亿—百亿级”的综合盘子，主要靠国家投入、科研基金、社会合作等填充。</li>\n<li>这意味着：把本科生课程分数整体抬高，并不会显著影响核心“现金流”；但“名声、项目、成果、评价、排名”波动，才会直接影响资金盘。</li>\n</ul>\n<h2 id=\"为何学校鼓励考研、保研（尤其是留在本校）？\"><a href=\"#为何学校鼓励考研、保研（尤其是留在本校）？\" class=\"headerlink\" title=\"为何学校鼓励考研、保研（尤其是留在本校）？\"></a>为何学校鼓励考研、保研（尤其是留在本校）？</h2><p>这其实是公司的人事策略：把门口的礼仪小姐培养成门内的打工人。学校宁可你留在体制内继续“站岗——上岗”二转——也不希望你跑出去找真工厂、真公司、真实战的机会。为什么？因为你一旦有了选择、有了自由，自然不会乖乖地做“门面”；学校的名声、场面管理就危险了。把你调进研究生体系，你从“站门口的装饰”被变成“产值制造者”。对学校来说，这是一条顺畅的利益链条：培养出更多廉价劳动力，产出项目、拿下资金、夸耀排名。</p>\n<p>顺着这条逻辑，<strong>为什么大学会安排一堆“无意义”的东西、卡你实习、卡你自由？</strong></p>\n<ul>\n<li><strong>名声影响的是投资，不首先是招生。</strong> 招生在很多地区有“刚需”与区域性稳定流量，一个学校若出负面舆情，最先受冲击的是合作方与出资方的信心——项目、基金、横向课题、品牌合作会犹豫甚至暂停。</li>\n<li><strong>风控优先级极高。</strong> 放开自由&#x3D;更多校外活动与不确定性；一旦发生安全事故或舆情事件，名声下跌→融资与合作承压→问责到人。相比之下，把你稳在校内、两点一线，才是“最优解”。</li>\n<li><strong>于是你看到：</strong> 实习难批、长假难批、严格考勤、晚点名、宿舍门禁、安全教育、层层报备……这些并不一定提升你的“学习”，但显著降低学校的“风险”。</li>\n</ul>\n<p>你可能问：这和我个人成长有什么关系？很残酷——<strong>对学校的KPI而言，你的长远能力成长并非核心指标。</strong> 学校需要的是三个冰冷的数字：</p>\n<ul>\n<li>就业率（含灵活就业口径）</li>\n<li>考研率&#x2F;保研率</li>\n<li>毕业率</li>\n</ul>\n<p>很少有学校长期、透明地公布“毕业生薪资中位数、三五年后纵向发展曲线”。因为这些指标不能立刻为“名声—资金”闭环服务。</p>\n<h2 id=\"我们该怎么办？（别当门口的装饰）\"><a href=\"#我们该怎么办？（别当门口的装饰）\" class=\"headerlink\" title=\"我们该怎么办？（别当门口的装饰）\"></a>我们该怎么办？（别当门口的装饰）</h2><p>我不是讲恐吓，我是要点醒你。四年太宝贵，别把它交给一个把你当成“摆设”的系统来消耗。醒一醒，问问自己：</p>\n<ul>\n<li>你是在学习，还是在被安排去完成“出席率”和“讲座学分”？</li>\n<li>你的时间是在被设计来生产价值，还是被用来制造“校园风景”？</li>\n<li>你要做礼仪小姐，还是要去外面真正做事、实习、创业、摸真实工作的脊梁？</li>\n</ul>\n<p>现实很残酷：大学体制有其自保逻辑，不是专门坑你，但也绝不会为你个体负责。那就靠我们自己：提早实习、去企业、去实验室真正参与项目、选导师看清他的科研和项目来源、学会用时间换能力而不是换证书。不要把“考研保研”当成唯一出路，别把研究生身份当作终极荣誉——那可能只是从“门口站岗”被转移到“车间打工”而已。</p>\n<h2 id=\"结语（不粉饰，不妥协）\"><a href=\"#结语（不粉饰，不妥协）\" class=\"headerlink\" title=\"结语（不粉饰，不妥协）\"></a>结语（不粉饰，不妥协）</h2><p>我们可以接收现实的残酷，也可以不被现实绑架。把大学当作资源——不是把自己当作资源的寄托。认清学校的本质，不是为了喷它，而是为了从迷雾里走出来，用我们的选择去拆解这套体系——去实习，去创业，去跨界，去用能力而非面子赢得未来。</p>\n<p>礼仪小姐可以有尊严地下岗，去做真正的事。</p>\n"},{"title":"blog stuff","date":"2025-10-02T11:45:06.000Z","_content":"## 目录\n- [x] [linkformat](#linkformat)\n- [x] [Google analysis](#配置Google-analysis)\n- [] [Comment System](#comment-system)\n---\n## linkformat\n### 把文章链接改成 postname，无日期（已实操，已注释）\n\n我希望把文章地址从带日期的结构改为仅使用文章名。例如当前这篇示例是带日期的：`https://www.jiangxu.net/2025/08/14/study-materials/`（参考链接见文末）。目标是变为：`https://www.jiangxu.net/study-materials/`。\n\n- 关键词：Hexo `permalink`、`:title`、`slug`、`front-matter` 覆盖、`pretty_urls`\n\n> 更改之前\n<img src=\"/img/linkformatbf.png\" alt=\"before\" width=\"400\">\n\n> 更改之后\n<img src=\"/img/linkformataf.png\" alt=\"after\" width=\"400\">\n\n### 具体的技术问题\n\n1) 这是什么，为什么要改？\n- 在 Hexo 里，`permalink` 决定每篇文章最终生成的访问路径。默认常见的是 `:year/:month/:day/:title/`，更偏向博客时间线；改成 `:title/` 可以获得更短、更“永久”的链接，便于记忆与分享。\n\n2) 名词解释\n- [x] permalink：固定链接模板，支持占位符（如 `:title`）。\n- [x] title vs slug：`title` 是文章标题，`slug` 是 URL 里使用的“短名称”。中文标题会直接出现在 URL 中（或被转义）。为保证简洁稳定，建议在 front-matter 里显式写 `slug`（英文/拼音）。\n- [x] front-matter 覆盖：单篇文章的 `permalink` 字段可以覆盖全局策略。\n> 全站用一种规则，但某一篇你想要特别的 URL，就在这篇的 front-matter 里写 permalink，它会直接生效\n- [x] pretty_urls：去除 `index.html`/`.html` 的外观选项，不改变目录式链接本质。\n> 文件式链接显式带 .html 后缀；目录式链接不带后缀、更简洁\n3) 工作原理（Hexo 渲染 → 最终 URL）\n- Hexo 根据 `_config.yml` 的 `permalink` 模板，为每篇文章计算目标路径；例如 `:title/` 会在 `public/study-materials/index.html` 生成文件，访问时即 `https://域名/study-materials/`。\n- 主题里常用 `post.permalink`/`page.permalink` 读取该最终地址，变化后会自动跟随，无需改主题模板。\n\n4) 如何修改（不改主题，只动 Hexo 主配置）\n\n- 打开站点根目录的 `_config.yml`，把 `permalink` 改为仅使用文章名：\n\n```yaml\n# URL\nurl: https://jiangxu.net/\npermalink: :title/\npretty_urls:\n  trailing_index: false   # 去掉末尾的 index.html（目录式链接更干净）\n  trailing_html: true     # 保持目录式，不使用 .html 直出\n```\n\n\n- 对中文标题或想自定义 URL 的文章，在 front-matter 里增加 `slug`：\n\n```md\n---\ntitle: 学习资料\nslug: study-materials\ndate: 2025-08-14 00:00:00\n---\n```\n\n\n- slug 与 URL 情况对照表\n\n| 情况 | 源文件名 | front-matter | 全局 permalink | 最终 URL |\n| --- | --- | --- | --- | --- |\n| 标题=文件名，不写 slug | 学习资料.md | title: 学习资料 | :title/ | /学习资料/ |\n| 标题≠文件名，不写 slug | hello-world.md | title: 学习资料 | :title/ | /hello-world/ |\n| 写了 slug → 强制用 slug | hello-world.md | title: 学习资料, slug: study-materials | :title/ | /study-materials/ |\n| 文件名含空格/符号，不写 slug | My Post!!!.md | title: 随笔 | :title/ | /my-post/ |\n| 只改标题，不改文件名，不写 slug | hello-world.md | title: 学习资料（更新版） | :title/ | /hello-world/ |\n| 改了文件名，不写 slug | greeting.md（改名后） | title: 学习资料 | :title/ | /greeting/ |\n\n- 只想个别文章自定义完整路径（覆盖全局模板），可在该文 front-matter 指定 `permalink`：\n\n```md\n---\ntitle: 特殊文章\npermalink: my-special-post/\n---\n```\n5) 常见问题与排查\n- 重名冲突：`permalink: :title/` 下，两个同名标题会竞争同一路径。给其中一个加 `slug` 解决。\n- 中文/符号 URL：建议写 `slug`，避免 URL 编码或不稳定字符。\n- 分类在路径里？若你想保留分类，可用 `:categories/:title/` 模板。\n- 本地没生效：确认已 `hexo clean`，并非浏览器缓存；命令行无错误后再测试。\n\n\n## 配置Google analysis\n### 我的说明\n我给博客加了一个“计数器”。它能记录：有人打开了哪一页、做了哪些关键动作。\n- 整页跳转时，它会自动记一次“看了一页”。\n- 我还加了两个小统计：点出去的链接、复制代码。这样更容易看出哪些内容有用。\n- 我能在后台的“实时”页面马上看到有没有上报成功。\n\n我用到的：\n- GA4：谷歌的统计系统\n- Measurement ID：类似你家门牌号，告诉数据送到哪\n- gtag.js：放在页面上的统计代码\n- dataLayer：给统计代码传消息的“队列”\n- page_view：记录“看了一页”\n- 事件（event）：记录“做了一个动作”，比如点链接、复制\n- Realtime/DebugView：后台用来看数据有没有进来\n\n### 具体的技术问题\n\n1) 这是什么，为什么要用它？\n- GA4 是网站“访问统计与行为分析”的系统。它记录“有人来过哪一页、做了什么动作”。有了它，能回答“哪篇文章更受欢迎、用户从哪里来、点了哪些按钮”。\n\n2) 名词解释（最常见的就这些）\n- [x] GA4 Property：你的数据容器，所有事件最终汇总到这里。\n- [x] Measurement ID：形如 `G-XXXXXXXXXX`，告诉 GA4 “发到哪个容器”。\n- [x] gtag.js：Google 提供的统计代码（SDK：给开发者用的一包工具），负责把信息打包并发送。\n- [x] dataLayer：浏览器里的“事件队列”，`gtag()` 把配置与事件都 push 进去。\n- [x] page_view：页面浏览事件；SPA/PJAX 不会自动刷新页面，需要手动上报。\n- [x] Event：通用事件（名字 + 参数），比如 `click_outbound`、`copy_code`。\n- [x] Client ID（_ga）：匿名访客 ID（存在一方 Cookie），用于区分不同用户。\n- [x] DebugView/Realtime：调试与实时数据查看界面。\n- [x] Cookie：浏览器为网站保存的一小段文字，网站下次访问时能认出“还是你”。\n- [x] Client ID：存放在 Cookie 里的匿名编号，用来区分不同访客（不含个人信息）。\n- [x] CSP：内容安全策略，像“白名单”，只允许从指定域加载脚本/发请求；未放行会被浏览器拦截。\n- [x] 第一次访问：gtag.js 没找到编号 → 生成一个新的 Client ID → 写进 Cookie。\n- [x] 以后访问：浏览器会自动把 Cookie 带上；gtag.js 读取 Cookie 里的 Client ID → 识别是同一位访客。\n\n3) 数据流转图（GA4 上报链路）\n> 自制，边画图边理解约2h\n> <img src=\"/img/gaflowchart.png\" alt=\"Google analysis流程图\" width=\"800\">\n\n\n4) 如何接入（整页跳转站点）\n```html\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){ dataLayer.push(arguments); }\n  gtag('js', new Date());\n  gtag('config', 'G-XXXXXXXXXX', { send_page_view: true });\n</script>\n```\n\n### 举例 \n\n访客Y第一次打开（访客浏览器）\n\n- 访客浏览器：请求你的博客页面；页面里包含 `gtag.js`（从 Google 官网域名加载）。\n- gtag.js：在访客浏览器里执行，初始化 `dataLayer` 事件队列。\n- Cookie / Client ID：如果没有发现 `_ga`，就生成新的 Client ID，并把它写进 Cookie。\n- Measurement ID：调用 `gtag('config', 'G-XXXXXXXXXX', ...)`，把数据归到你自己的 GA4 Property。\n- Consent Mode：按默认规则限制可发送内容（更保守的上报）。\n- CSP：需放行 `googletagmanager.com` 与 `google-analytics.com`，否则浏览器会拦截统计请求。\n- page_view：\n  - 整页跳转主题：自动发送一次 `page_view`。\n- 事件：用户操作（如 `click_outbound`、`copy_code`）由 `gtag.js` 打包为“事件”。\n- 发送目的地：请求直接从“访客浏览器”发到“Google 官网” `google-analytics.com/g/collect`，不会经过你的服务器。\n- 入库与查看：数据进入你的 GA4 数据仓库（Property），你能在 Realtime/DebugView 里立刻看到。\n\n访客Y第二次打开（不同点，其它相同）\n\n- 访客浏览器：会自动带上上次保存的 Cookie。\n- gtag.js：读取到已有的 Client ID（不再新建），继续用同一个编号上报。\n- 其余步骤与第一次相同；由于 Client ID 相同，GA4 会把两次访问识别为同一位访客（除非清除了 Cookie、换了设备或浏览器）。\n\n\n---\n## comment sysytem\n### 给老师的一段话（概述）\n\n老师您好，我是正在转专业的学生。我在博客里开通“评论”功能，是想把自学过程中的疑问与收获沉淀下来，也方便向老师与同学请教、接受批改与反馈。配置评论让我动手理解了网站前端的基本结构：主题模板如何预留评论位置、配置文件如何驱动功能启停、以及如何把外部服务（例如 LeanCloud）安全地“接到”我的页面里。我会注意不收集不必要的个人信息，只用它来进行学术讨论与学习交流。\n\n### 配置教程与可学到的技术点（基于 theme: `pure` 与评论 `valine`）\n\n下面是完全零基础也能照做的步骤，全部不需要写代码，只修改配置即可。\n\n1) 选择评论系统（我们用 Valine）\n- 主题 `pure` 已内置 Disqus/Gitalk/Valine 等多种评论系统。你当前主题配置里已经选了 `valine`，所以我们沿用它。\n- 你可以在主题配置文件里看到开关：\n\n```166:154:/Users/jiangxu/Documents/code/myblog/themes/pure/_config.yml\n# Comment\ncomment:\n  type: valine  # 启用哪种评论系统\n  valine:\n    appid:  # your leancloud application appid\n    appkey:  # your leancloud application appkey\n    placeholder:  hello i'm jiangxu.\n```\n\n2) 注册 LeanCloud，拿到 `AppID` 和 `AppKey`\n- 打开浏览器，注册并登录 LeanCloud（国际版更稳定，建议使用国际站）。\n- 新建一个应用（随意命名，例如 `myblog-comments`）。\n- 在应用设置里找到并复制 `AppID` 与 `AppKey`。\n- Valine 首次运行时会自动创建数据表，无需手工建表。\n\n3) 把密钥填进主题配置\n- 打开文件：`themes/pure/_config.yml`。\n- 在 `comment.valine.appid` 与 `comment.valine.appkey` 填入你从 LeanCloud 拿到的值；占位符可按需调整，比如 `placeholder: 欢迎留言交流学习~`。\n- 保存后即可。\n\n4) 评论容器与脚本已经在主题里就绪（无需改模板）\n- 文章页底部已渲染评论容器：\n\n```17:20:/Users/jiangxu/Documents/code/myblog/themes/pure/layout/_partial/post/comment.ejs\n  <% } else if (theme.comment.type === 'valine') { %>\n    <div id=\"vcomments\"></div>\n  <% } %>\n```\n\n- 对应的初始化脚本也已内置，会把你在配置里填的 `appid/appkey/placeholder` 等传给 Valine：\n\n```2:7:/Users/jiangxu/Documents/code/myblog/themes/pure/layout/_script/_comment/valine.ejs\n  <script src=\"//cdn1.lncld.net/static/js/3.0.4/av-min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/valine\"></script>\n  <script type=\"text/javascript\">\n  var GUEST = ['nick', 'mail', 'link'];\n  var meta = '<%= theme.comment.valine.meta %>';\n```\n\n5) 确保文章开启评论\n- Hexo 对文章默认是开启评论的；若你在某篇 front‑matter 里显式写了 `comments: false`，请删掉或改为：\n\n```md\n---\ntitle: 某篇文章\ncomments: true\n---\n```\n\n6) 本地预览与部署\n- 本地预览：\n  - 运行：`hexo clean && hexo g && hexo s`\n  - 打开浏览器访问本地地址，进入任意文章页，滚动到页面底部，应该能看到评论框。\n- 部署上线：按你平时的发布方式（如 `hexo g -d` 或 Vercel 自动部署）。\n\n7) 常见问题（遇到看这里）\n- 页面没显示评论框：检查主题配置里的 `comment.type` 是否为 `valine`，以及该文章 `comments` 是否为 `true`。\n- 初始化报错或加载很慢：有时 `cdn1.lncld.net` 或 `cdn.jsdelivr.net` 在部分网络环境下不稳定，稍后再试或切换网络。如果长期不稳定，可考虑迁移到 Gitalk（需 GitHub OAuth）等方案。\n- 留言不入库：确认 LeanCloud 应用使用的“国际版/国内版”与你的脚本域相匹配；核对 `AppID/AppKey` 是否粘贴完整。\n\n8) 我能学到的技术点（零基础友好）\n- 配置驱动的前端能力：不改代码，通过改 YAML 配置实现功能启停与参数化。\n- 模板与占位容器：主题在文章底部放了一个 `#vcomments` 容器，脚本会把评论 UI 挂载进去。\n- 第三方 SDK 初始化：Valine 作为“无后端评论系统”，用浏览器直接连到 LeanCloud 保存数据。\n- 资源加载与网络调试：评论依赖的 JS 从 CDN 加载，学会在浏览器开发者工具里看 Network 面板排查问题。\n- 安全与隐私常识：仅填必要的 `AppID/AppKey`，不收集敏感信息，按需关闭邮件通知。\n\n做到这里，你已经完成了一个完整的小型“前端集成”任务：读配置 → 连接外部服务 → 本地验证 → 上线发布。后续如果你想尝试别的评论系统（例如 Gitalk），只要把 `comment.type` 改为 `gitalk` 并按照它的字段填写 `ClientID/ClientSecret` 等即可。\n\n### 评论原理：思维导图\n\n```mermaid\nmindmap\n  root(评论系统原理 Valine LeanCloud 主题 pure)\n    页面结构 Where\n      评论容器 vcomments\n      显示控制 front-matter comments\n    脚本初始化 How\n      加载CDN av-min.js 和 valine.js\n      注入参数 appid appkey placeholder meta\n      初始化 使用 Valine 初始化 并挂载 vcomments\n    数据流 Flow\n      用户填写并提交\n      Valine 使用 AppID 和 AppKey 请求 LeanCloud\n      LeanCloud 写入或创建数据表\n      页面加载时拉取并渲染\n    账号与权限 Auth\n      访客 匿名 可选 nick mail link\n      站长 控制台审查和删除\n      Key 用途 标识应用 非管理员密码\n    安全与稳定 SLA\n      依赖 CDN 和 LeanCloud 可用性\n      网络限制 可能加载失败\n      隐私 最小化收集字段\n    与主题的关系 Integration\n      主题职责 容器 选择系统 传配置\n      切换系统 修改 comment.type 并配置密钥\n    学到的点 Learning\n      配置驱动 与 模板占位\n      浏览器SDK 直连后端\n      CDN加载 与 排障\n      同一容器 可接入多种实现\n```","source":"_posts/blog-stuff.md","raw":"---\ntitle: blog stuff\ndate: 2025-10-02 19:45:06\ntags:\n---\n## 目录\n- [x] [linkformat](#linkformat)\n- [x] [Google analysis](#配置Google-analysis)\n- [] [Comment System](#comment-system)\n---\n## linkformat\n### 把文章链接改成 postname，无日期（已实操，已注释）\n\n我希望把文章地址从带日期的结构改为仅使用文章名。例如当前这篇示例是带日期的：`https://www.jiangxu.net/2025/08/14/study-materials/`（参考链接见文末）。目标是变为：`https://www.jiangxu.net/study-materials/`。\n\n- 关键词：Hexo `permalink`、`:title`、`slug`、`front-matter` 覆盖、`pretty_urls`\n\n> 更改之前\n<img src=\"/img/linkformatbf.png\" alt=\"before\" width=\"400\">\n\n> 更改之后\n<img src=\"/img/linkformataf.png\" alt=\"after\" width=\"400\">\n\n### 具体的技术问题\n\n1) 这是什么，为什么要改？\n- 在 Hexo 里，`permalink` 决定每篇文章最终生成的访问路径。默认常见的是 `:year/:month/:day/:title/`，更偏向博客时间线；改成 `:title/` 可以获得更短、更“永久”的链接，便于记忆与分享。\n\n2) 名词解释\n- [x] permalink：固定链接模板，支持占位符（如 `:title`）。\n- [x] title vs slug：`title` 是文章标题，`slug` 是 URL 里使用的“短名称”。中文标题会直接出现在 URL 中（或被转义）。为保证简洁稳定，建议在 front-matter 里显式写 `slug`（英文/拼音）。\n- [x] front-matter 覆盖：单篇文章的 `permalink` 字段可以覆盖全局策略。\n> 全站用一种规则，但某一篇你想要特别的 URL，就在这篇的 front-matter 里写 permalink，它会直接生效\n- [x] pretty_urls：去除 `index.html`/`.html` 的外观选项，不改变目录式链接本质。\n> 文件式链接显式带 .html 后缀；目录式链接不带后缀、更简洁\n3) 工作原理（Hexo 渲染 → 最终 URL）\n- Hexo 根据 `_config.yml` 的 `permalink` 模板，为每篇文章计算目标路径；例如 `:title/` 会在 `public/study-materials/index.html` 生成文件，访问时即 `https://域名/study-materials/`。\n- 主题里常用 `post.permalink`/`page.permalink` 读取该最终地址，变化后会自动跟随，无需改主题模板。\n\n4) 如何修改（不改主题，只动 Hexo 主配置）\n\n- 打开站点根目录的 `_config.yml`，把 `permalink` 改为仅使用文章名：\n\n```yaml\n# URL\nurl: https://jiangxu.net/\npermalink: :title/\npretty_urls:\n  trailing_index: false   # 去掉末尾的 index.html（目录式链接更干净）\n  trailing_html: true     # 保持目录式，不使用 .html 直出\n```\n\n\n- 对中文标题或想自定义 URL 的文章，在 front-matter 里增加 `slug`：\n\n```md\n---\ntitle: 学习资料\nslug: study-materials\ndate: 2025-08-14 00:00:00\n---\n```\n\n\n- slug 与 URL 情况对照表\n\n| 情况 | 源文件名 | front-matter | 全局 permalink | 最终 URL |\n| --- | --- | --- | --- | --- |\n| 标题=文件名，不写 slug | 学习资料.md | title: 学习资料 | :title/ | /学习资料/ |\n| 标题≠文件名，不写 slug | hello-world.md | title: 学习资料 | :title/ | /hello-world/ |\n| 写了 slug → 强制用 slug | hello-world.md | title: 学习资料, slug: study-materials | :title/ | /study-materials/ |\n| 文件名含空格/符号，不写 slug | My Post!!!.md | title: 随笔 | :title/ | /my-post/ |\n| 只改标题，不改文件名，不写 slug | hello-world.md | title: 学习资料（更新版） | :title/ | /hello-world/ |\n| 改了文件名，不写 slug | greeting.md（改名后） | title: 学习资料 | :title/ | /greeting/ |\n\n- 只想个别文章自定义完整路径（覆盖全局模板），可在该文 front-matter 指定 `permalink`：\n\n```md\n---\ntitle: 特殊文章\npermalink: my-special-post/\n---\n```\n5) 常见问题与排查\n- 重名冲突：`permalink: :title/` 下，两个同名标题会竞争同一路径。给其中一个加 `slug` 解决。\n- 中文/符号 URL：建议写 `slug`，避免 URL 编码或不稳定字符。\n- 分类在路径里？若你想保留分类，可用 `:categories/:title/` 模板。\n- 本地没生效：确认已 `hexo clean`，并非浏览器缓存；命令行无错误后再测试。\n\n\n## 配置Google analysis\n### 我的说明\n我给博客加了一个“计数器”。它能记录：有人打开了哪一页、做了哪些关键动作。\n- 整页跳转时，它会自动记一次“看了一页”。\n- 我还加了两个小统计：点出去的链接、复制代码。这样更容易看出哪些内容有用。\n- 我能在后台的“实时”页面马上看到有没有上报成功。\n\n我用到的：\n- GA4：谷歌的统计系统\n- Measurement ID：类似你家门牌号，告诉数据送到哪\n- gtag.js：放在页面上的统计代码\n- dataLayer：给统计代码传消息的“队列”\n- page_view：记录“看了一页”\n- 事件（event）：记录“做了一个动作”，比如点链接、复制\n- Realtime/DebugView：后台用来看数据有没有进来\n\n### 具体的技术问题\n\n1) 这是什么，为什么要用它？\n- GA4 是网站“访问统计与行为分析”的系统。它记录“有人来过哪一页、做了什么动作”。有了它，能回答“哪篇文章更受欢迎、用户从哪里来、点了哪些按钮”。\n\n2) 名词解释（最常见的就这些）\n- [x] GA4 Property：你的数据容器，所有事件最终汇总到这里。\n- [x] Measurement ID：形如 `G-XXXXXXXXXX`，告诉 GA4 “发到哪个容器”。\n- [x] gtag.js：Google 提供的统计代码（SDK：给开发者用的一包工具），负责把信息打包并发送。\n- [x] dataLayer：浏览器里的“事件队列”，`gtag()` 把配置与事件都 push 进去。\n- [x] page_view：页面浏览事件；SPA/PJAX 不会自动刷新页面，需要手动上报。\n- [x] Event：通用事件（名字 + 参数），比如 `click_outbound`、`copy_code`。\n- [x] Client ID（_ga）：匿名访客 ID（存在一方 Cookie），用于区分不同用户。\n- [x] DebugView/Realtime：调试与实时数据查看界面。\n- [x] Cookie：浏览器为网站保存的一小段文字，网站下次访问时能认出“还是你”。\n- [x] Client ID：存放在 Cookie 里的匿名编号，用来区分不同访客（不含个人信息）。\n- [x] CSP：内容安全策略，像“白名单”，只允许从指定域加载脚本/发请求；未放行会被浏览器拦截。\n- [x] 第一次访问：gtag.js 没找到编号 → 生成一个新的 Client ID → 写进 Cookie。\n- [x] 以后访问：浏览器会自动把 Cookie 带上；gtag.js 读取 Cookie 里的 Client ID → 识别是同一位访客。\n\n3) 数据流转图（GA4 上报链路）\n> 自制，边画图边理解约2h\n> <img src=\"/img/gaflowchart.png\" alt=\"Google analysis流程图\" width=\"800\">\n\n\n4) 如何接入（整页跳转站点）\n```html\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){ dataLayer.push(arguments); }\n  gtag('js', new Date());\n  gtag('config', 'G-XXXXXXXXXX', { send_page_view: true });\n</script>\n```\n\n### 举例 \n\n访客Y第一次打开（访客浏览器）\n\n- 访客浏览器：请求你的博客页面；页面里包含 `gtag.js`（从 Google 官网域名加载）。\n- gtag.js：在访客浏览器里执行，初始化 `dataLayer` 事件队列。\n- Cookie / Client ID：如果没有发现 `_ga`，就生成新的 Client ID，并把它写进 Cookie。\n- Measurement ID：调用 `gtag('config', 'G-XXXXXXXXXX', ...)`，把数据归到你自己的 GA4 Property。\n- Consent Mode：按默认规则限制可发送内容（更保守的上报）。\n- CSP：需放行 `googletagmanager.com` 与 `google-analytics.com`，否则浏览器会拦截统计请求。\n- page_view：\n  - 整页跳转主题：自动发送一次 `page_view`。\n- 事件：用户操作（如 `click_outbound`、`copy_code`）由 `gtag.js` 打包为“事件”。\n- 发送目的地：请求直接从“访客浏览器”发到“Google 官网” `google-analytics.com/g/collect`，不会经过你的服务器。\n- 入库与查看：数据进入你的 GA4 数据仓库（Property），你能在 Realtime/DebugView 里立刻看到。\n\n访客Y第二次打开（不同点，其它相同）\n\n- 访客浏览器：会自动带上上次保存的 Cookie。\n- gtag.js：读取到已有的 Client ID（不再新建），继续用同一个编号上报。\n- 其余步骤与第一次相同；由于 Client ID 相同，GA4 会把两次访问识别为同一位访客（除非清除了 Cookie、换了设备或浏览器）。\n\n\n---\n## comment sysytem\n### 给老师的一段话（概述）\n\n老师您好，我是正在转专业的学生。我在博客里开通“评论”功能，是想把自学过程中的疑问与收获沉淀下来，也方便向老师与同学请教、接受批改与反馈。配置评论让我动手理解了网站前端的基本结构：主题模板如何预留评论位置、配置文件如何驱动功能启停、以及如何把外部服务（例如 LeanCloud）安全地“接到”我的页面里。我会注意不收集不必要的个人信息，只用它来进行学术讨论与学习交流。\n\n### 配置教程与可学到的技术点（基于 theme: `pure` 与评论 `valine`）\n\n下面是完全零基础也能照做的步骤，全部不需要写代码，只修改配置即可。\n\n1) 选择评论系统（我们用 Valine）\n- 主题 `pure` 已内置 Disqus/Gitalk/Valine 等多种评论系统。你当前主题配置里已经选了 `valine`，所以我们沿用它。\n- 你可以在主题配置文件里看到开关：\n\n```166:154:/Users/jiangxu/Documents/code/myblog/themes/pure/_config.yml\n# Comment\ncomment:\n  type: valine  # 启用哪种评论系统\n  valine:\n    appid:  # your leancloud application appid\n    appkey:  # your leancloud application appkey\n    placeholder:  hello i'm jiangxu.\n```\n\n2) 注册 LeanCloud，拿到 `AppID` 和 `AppKey`\n- 打开浏览器，注册并登录 LeanCloud（国际版更稳定，建议使用国际站）。\n- 新建一个应用（随意命名，例如 `myblog-comments`）。\n- 在应用设置里找到并复制 `AppID` 与 `AppKey`。\n- Valine 首次运行时会自动创建数据表，无需手工建表。\n\n3) 把密钥填进主题配置\n- 打开文件：`themes/pure/_config.yml`。\n- 在 `comment.valine.appid` 与 `comment.valine.appkey` 填入你从 LeanCloud 拿到的值；占位符可按需调整，比如 `placeholder: 欢迎留言交流学习~`。\n- 保存后即可。\n\n4) 评论容器与脚本已经在主题里就绪（无需改模板）\n- 文章页底部已渲染评论容器：\n\n```17:20:/Users/jiangxu/Documents/code/myblog/themes/pure/layout/_partial/post/comment.ejs\n  <% } else if (theme.comment.type === 'valine') { %>\n    <div id=\"vcomments\"></div>\n  <% } %>\n```\n\n- 对应的初始化脚本也已内置，会把你在配置里填的 `appid/appkey/placeholder` 等传给 Valine：\n\n```2:7:/Users/jiangxu/Documents/code/myblog/themes/pure/layout/_script/_comment/valine.ejs\n  <script src=\"//cdn1.lncld.net/static/js/3.0.4/av-min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/valine\"></script>\n  <script type=\"text/javascript\">\n  var GUEST = ['nick', 'mail', 'link'];\n  var meta = '<%= theme.comment.valine.meta %>';\n```\n\n5) 确保文章开启评论\n- Hexo 对文章默认是开启评论的；若你在某篇 front‑matter 里显式写了 `comments: false`，请删掉或改为：\n\n```md\n---\ntitle: 某篇文章\ncomments: true\n---\n```\n\n6) 本地预览与部署\n- 本地预览：\n  - 运行：`hexo clean && hexo g && hexo s`\n  - 打开浏览器访问本地地址，进入任意文章页，滚动到页面底部，应该能看到评论框。\n- 部署上线：按你平时的发布方式（如 `hexo g -d` 或 Vercel 自动部署）。\n\n7) 常见问题（遇到看这里）\n- 页面没显示评论框：检查主题配置里的 `comment.type` 是否为 `valine`，以及该文章 `comments` 是否为 `true`。\n- 初始化报错或加载很慢：有时 `cdn1.lncld.net` 或 `cdn.jsdelivr.net` 在部分网络环境下不稳定，稍后再试或切换网络。如果长期不稳定，可考虑迁移到 Gitalk（需 GitHub OAuth）等方案。\n- 留言不入库：确认 LeanCloud 应用使用的“国际版/国内版”与你的脚本域相匹配；核对 `AppID/AppKey` 是否粘贴完整。\n\n8) 我能学到的技术点（零基础友好）\n- 配置驱动的前端能力：不改代码，通过改 YAML 配置实现功能启停与参数化。\n- 模板与占位容器：主题在文章底部放了一个 `#vcomments` 容器，脚本会把评论 UI 挂载进去。\n- 第三方 SDK 初始化：Valine 作为“无后端评论系统”，用浏览器直接连到 LeanCloud 保存数据。\n- 资源加载与网络调试：评论依赖的 JS 从 CDN 加载，学会在浏览器开发者工具里看 Network 面板排查问题。\n- 安全与隐私常识：仅填必要的 `AppID/AppKey`，不收集敏感信息，按需关闭邮件通知。\n\n做到这里，你已经完成了一个完整的小型“前端集成”任务：读配置 → 连接外部服务 → 本地验证 → 上线发布。后续如果你想尝试别的评论系统（例如 Gitalk），只要把 `comment.type` 改为 `gitalk` 并按照它的字段填写 `ClientID/ClientSecret` 等即可。\n\n### 评论原理：思维导图\n\n```mermaid\nmindmap\n  root(评论系统原理 Valine LeanCloud 主题 pure)\n    页面结构 Where\n      评论容器 vcomments\n      显示控制 front-matter comments\n    脚本初始化 How\n      加载CDN av-min.js 和 valine.js\n      注入参数 appid appkey placeholder meta\n      初始化 使用 Valine 初始化 并挂载 vcomments\n    数据流 Flow\n      用户填写并提交\n      Valine 使用 AppID 和 AppKey 请求 LeanCloud\n      LeanCloud 写入或创建数据表\n      页面加载时拉取并渲染\n    账号与权限 Auth\n      访客 匿名 可选 nick mail link\n      站长 控制台审查和删除\n      Key 用途 标识应用 非管理员密码\n    安全与稳定 SLA\n      依赖 CDN 和 LeanCloud 可用性\n      网络限制 可能加载失败\n      隐私 最小化收集字段\n    与主题的关系 Integration\n      主题职责 容器 选择系统 传配置\n      切换系统 修改 comment.type 并配置密钥\n    学到的点 Learning\n      配置驱动 与 模板占位\n      浏览器SDK 直连后端\n      CDN加载 与 排障\n      同一容器 可接入多种实现\n```","slug":"blog-stuff","published":1,"updated":"2025-10-12T11:02:32.935Z","_id":"cmgakvmet0001cx9ke05qefho","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <a href=\"#linkformat\">linkformat</a></li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <a href=\"#%E9%85%8D%E7%BD%AEGoogle-analysis\">Google analysis</a></li>\n<li>[] <a href=\"#comment-system\">Comment System</a></li>\n</ul>\n<hr>\n<h2 id=\"linkformat\"><a href=\"#linkformat\" class=\"headerlink\" title=\"linkformat\"></a>linkformat</h2><h3 id=\"把文章链接改成-postname，无日期（已实操，已注释）\"><a href=\"#把文章链接改成-postname，无日期（已实操，已注释）\" class=\"headerlink\" title=\"把文章链接改成 postname，无日期（已实操，已注释）\"></a>把文章链接改成 postname，无日期（已实操，已注释）</h3><p>我希望把文章地址从带日期的结构改为仅使用文章名。例如当前这篇示例是带日期的：<code>https://www.jiangxu.net/2025/08/14/study-materials/</code>（参考链接见文末）。目标是变为：<code>https://www.jiangxu.net/study-materials/</code>。</p>\n<ul>\n<li>关键词：Hexo <code>permalink</code>、<code>:title</code>、<code>slug</code>、<code>front-matter</code> 覆盖、<code>pretty_urls</code></li>\n</ul>\n<blockquote>\n<p>更改之前</p>\n<img src=\"/img/linkformatbf.png\" alt=\"before\" width=\"400\"></blockquote>\n<blockquote>\n<p>更改之后</p>\n<img src=\"/img/linkformataf.png\" alt=\"after\" width=\"400\"></blockquote>\n<h3 id=\"具体的技术问题\"><a href=\"#具体的技术问题\" class=\"headerlink\" title=\"具体的技术问题\"></a>具体的技术问题</h3><ol>\n<li>这是什么，为什么要改？</li>\n</ol>\n<ul>\n<li>在 Hexo 里，<code>permalink</code> 决定每篇文章最终生成的访问路径。默认常见的是 <code>:year/:month/:day/:title/</code>，更偏向博客时间线；改成 <code>:title/</code> 可以获得更短、更“永久”的链接，便于记忆与分享。</li>\n</ul>\n<ol start=\"2\">\n<li>名词解释</li>\n</ol>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> permalink：固定链接模板，支持占位符（如 <code>:title</code>）。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> title vs slug：<code>title</code> 是文章标题，<code>slug</code> 是 URL 里使用的“短名称”。中文标题会直接出现在 URL 中（或被转义）。为保证简洁稳定，建议在 front-matter 里显式写 <code>slug</code>（英文&#x2F;拼音）。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> front-matter 覆盖：单篇文章的 <code>permalink</code> 字段可以覆盖全局策略。<blockquote>\n<p>全站用一种规则，但某一篇你想要特别的 URL，就在这篇的 front-matter 里写 permalink，它会直接生效</p>\n</blockquote>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> pretty_urls：去除 <code>index.html</code>&#x2F;<code>.html</code> 的外观选项，不改变目录式链接本质。<blockquote>\n<p>文件式链接显式带 .html 后缀；目录式链接不带后缀、更简洁</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"3\">\n<li>工作原理（Hexo 渲染 → 最终 URL）</li>\n</ol>\n<ul>\n<li>Hexo 根据 <code>_config.yml</code> 的 <code>permalink</code> 模板，为每篇文章计算目标路径；例如 <code>:title/</code> 会在 <code>public/study-materials/index.html</code> 生成文件，访问时即 <code>https://域名/study-materials/</code>。</li>\n<li>主题里常用 <code>post.permalink</code>&#x2F;<code>page.permalink</code> 读取该最终地址，变化后会自动跟随，无需改主题模板。</li>\n</ul>\n<ol start=\"4\">\n<li>如何修改（不改主题，只动 Hexo 主配置）</li>\n</ol>\n<ul>\n<li>打开站点根目录的 <code>_config.yml</code>，把 <code>permalink</code> 改为仅使用文章名：</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:title/</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">false</span>   <span class=\"comment\"># 去掉末尾的 index.html（目录式链接更干净）</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span>     <span class=\"comment\"># 保持目录式，不使用 .html 直出</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>对中文标题或想自定义 URL 的文章，在 front-matter 里增加 <code>slug</code>：</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 学习资料</span><br><span class=\"line\">slug: study-materials</span><br><span class=\"line\"><span class=\"section\">date: 2025-08-14 00:00:00</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>slug 与 URL 情况对照表</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>情况</th>\n<th>源文件名</th>\n<th>front-matter</th>\n<th>全局 permalink</th>\n<th>最终 URL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标题&#x3D;文件名，不写 slug</td>\n<td>学习资料.md</td>\n<td>title: 学习资料</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;学习资料&#x2F;</td>\n</tr>\n<tr>\n<td>标题≠文件名，不写 slug</td>\n<td>hello-world.md</td>\n<td>title: 学习资料</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;hello-world&#x2F;</td>\n</tr>\n<tr>\n<td>写了 slug → 强制用 slug</td>\n<td>hello-world.md</td>\n<td>title: 学习资料, slug: study-materials</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;study-materials&#x2F;</td>\n</tr>\n<tr>\n<td>文件名含空格&#x2F;符号，不写 slug</td>\n<td>My Post!!!.md</td>\n<td>title: 随笔</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;my-post&#x2F;</td>\n</tr>\n<tr>\n<td>只改标题，不改文件名，不写 slug</td>\n<td>hello-world.md</td>\n<td>title: 学习资料（更新版）</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;hello-world&#x2F;</td>\n</tr>\n<tr>\n<td>改了文件名，不写 slug</td>\n<td>greeting.md（改名后）</td>\n<td>title: 学习资料</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;greeting&#x2F;</td>\n</tr>\n</tbody></table>\n<ul>\n<li>只想个别文章自定义完整路径（覆盖全局模板），可在该文 front-matter 指定 <code>permalink</code>：</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 特殊文章</span><br><span class=\"line\"><span class=\"section\">permalink: my-special-post/</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>常见问题与排查</li>\n</ol>\n<ul>\n<li>重名冲突：<code>permalink: :title/</code> 下，两个同名标题会竞争同一路径。给其中一个加 <code>slug</code> 解决。</li>\n<li>中文&#x2F;符号 URL：建议写 <code>slug</code>，避免 URL 编码或不稳定字符。</li>\n<li>分类在路径里？若你想保留分类，可用 <code>:categories/:title/</code> 模板。</li>\n<li>本地没生效：确认已 <code>hexo clean</code>，并非浏览器缓存；命令行无错误后再测试。</li>\n</ul>\n<h2 id=\"配置Google-analysis\"><a href=\"#配置Google-analysis\" class=\"headerlink\" title=\"配置Google analysis\"></a>配置Google analysis</h2><h3 id=\"我的说明\"><a href=\"#我的说明\" class=\"headerlink\" title=\"我的说明\"></a>我的说明</h3><p>我给博客加了一个“计数器”。它能记录：有人打开了哪一页、做了哪些关键动作。</p>\n<ul>\n<li>整页跳转时，它会自动记一次“看了一页”。</li>\n<li>我还加了两个小统计：点出去的链接、复制代码。这样更容易看出哪些内容有用。</li>\n<li>我能在后台的“实时”页面马上看到有没有上报成功。</li>\n</ul>\n<p>我用到的：</p>\n<ul>\n<li>GA4：谷歌的统计系统</li>\n<li>Measurement ID：类似你家门牌号，告诉数据送到哪</li>\n<li>gtag.js：放在页面上的统计代码</li>\n<li>dataLayer：给统计代码传消息的“队列”</li>\n<li>page_view：记录“看了一页”</li>\n<li>事件（event）：记录“做了一个动作”，比如点链接、复制</li>\n<li>Realtime&#x2F;DebugView：后台用来看数据有没有进来</li>\n</ul>\n<h3 id=\"具体的技术问题-1\"><a href=\"#具体的技术问题-1\" class=\"headerlink\" title=\"具体的技术问题\"></a>具体的技术问题</h3><ol>\n<li>这是什么，为什么要用它？</li>\n</ol>\n<ul>\n<li>GA4 是网站“访问统计与行为分析”的系统。它记录“有人来过哪一页、做了什么动作”。有了它，能回答“哪篇文章更受欢迎、用户从哪里来、点了哪些按钮”。</li>\n</ul>\n<ol start=\"2\">\n<li>名词解释（最常见的就这些）</li>\n</ol>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> GA4 Property：你的数据容器，所有事件最终汇总到这里。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Measurement ID：形如 <code>G-XXXXXXXXXX</code>，告诉 GA4 “发到哪个容器”。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> gtag.js：Google 提供的统计代码（SDK：给开发者用的一包工具），负责把信息打包并发送。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> dataLayer：浏览器里的“事件队列”，<code>gtag()</code> 把配置与事件都 push 进去。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> page_view：页面浏览事件；SPA&#x2F;PJAX 不会自动刷新页面，需要手动上报。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Event：通用事件（名字 + 参数），比如 <code>click_outbound</code>、<code>copy_code</code>。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Client ID（_ga）：匿名访客 ID（存在一方 Cookie），用于区分不同用户。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> DebugView&#x2F;Realtime：调试与实时数据查看界面。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Cookie：浏览器为网站保存的一小段文字，网站下次访问时能认出“还是你”。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Client ID：存放在 Cookie 里的匿名编号，用来区分不同访客（不含个人信息）。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> CSP：内容安全策略，像“白名单”，只允许从指定域加载脚本&#x2F;发请求；未放行会被浏览器拦截。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 第一次访问：gtag.js 没找到编号 → 生成一个新的 Client ID → 写进 Cookie。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 以后访问：浏览器会自动把 Cookie 带上；gtag.js 读取 Cookie 里的 Client ID → 识别是同一位访客。</li>\n</ul>\n<ol start=\"3\">\n<li><p>数据流转图（GA4 上报链路）</p>\n<blockquote>\n<p>自制，边画图边理解约2h<br><img src=\"/img/gaflowchart.png\" alt=\"Google analysis流程图\" width=\"800\"></p>\n</blockquote>\n</li>\n<li><p>如何接入（整页跳转站点）</p>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">window</span>.<span class=\"property\">dataLayer</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">dataLayer</span> || [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">gtag</span>(<span class=\"params\"></span>)&#123; dataLayer.<span class=\"title function_\">push</span>(<span class=\"variable language_\">arguments</span>); &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">gtag</span>(<span class=\"string\">&#x27;js&#x27;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">gtag</span>(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"string\">&#x27;G-XXXXXXXXXX&#x27;</span>, &#123; <span class=\"attr\">send_page_view</span>: <span class=\"literal\">true</span> &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>访客Y第一次打开（访客浏览器）</p>\n<ul>\n<li>访客浏览器：请求你的博客页面；页面里包含 <code>gtag.js</code>（从 Google 官网域名加载）。</li>\n<li>gtag.js：在访客浏览器里执行，初始化 <code>dataLayer</code> 事件队列。</li>\n<li>Cookie &#x2F; Client ID：如果没有发现 <code>_ga</code>，就生成新的 Client ID，并把它写进 Cookie。</li>\n<li>Measurement ID：调用 <code>gtag(&#39;config&#39;, &#39;G-XXXXXXXXXX&#39;, ...)</code>，把数据归到你自己的 GA4 Property。</li>\n<li>Consent Mode：按默认规则限制可发送内容（更保守的上报）。</li>\n<li>CSP：需放行 <code>googletagmanager.com</code> 与 <code>google-analytics.com</code>，否则浏览器会拦截统计请求。</li>\n<li>page_view：<ul>\n<li>整页跳转主题：自动发送一次 <code>page_view</code>。</li>\n</ul>\n</li>\n<li>事件：用户操作（如 <code>click_outbound</code>、<code>copy_code</code>）由 <code>gtag.js</code> 打包为“事件”。</li>\n<li>发送目的地：请求直接从“访客浏览器”发到“Google 官网” <code>google-analytics.com/g/collect</code>，不会经过你的服务器。</li>\n<li>入库与查看：数据进入你的 GA4 数据仓库（Property），你能在 Realtime&#x2F;DebugView 里立刻看到。</li>\n</ul>\n<p>访客Y第二次打开（不同点，其它相同）</p>\n<ul>\n<li>访客浏览器：会自动带上上次保存的 Cookie。</li>\n<li>gtag.js：读取到已有的 Client ID（不再新建），继续用同一个编号上报。</li>\n<li>其余步骤与第一次相同；由于 Client ID 相同，GA4 会把两次访问识别为同一位访客（除非清除了 Cookie、换了设备或浏览器）。</li>\n</ul>\n<hr>\n<h2 id=\"comment-sysytem\"><a href=\"#comment-sysytem\" class=\"headerlink\" title=\"comment sysytem\"></a>comment sysytem</h2><h3 id=\"给老师的一段话（概述）\"><a href=\"#给老师的一段话（概述）\" class=\"headerlink\" title=\"给老师的一段话（概述）\"></a>给老师的一段话（概述）</h3><p>老师您好，我是正在转专业的学生。我在博客里开通“评论”功能，是想把自学过程中的疑问与收获沉淀下来，也方便向老师与同学请教、接受批改与反馈。配置评论让我动手理解了网站前端的基本结构：主题模板如何预留评论位置、配置文件如何驱动功能启停、以及如何把外部服务（例如 LeanCloud）安全地“接到”我的页面里。我会注意不收集不必要的个人信息，只用它来进行学术讨论与学习交流。</p>\n<h3 id=\"配置教程与可学到的技术点（基于-theme-pure-与评论-valine）\"><a href=\"#配置教程与可学到的技术点（基于-theme-pure-与评论-valine）\" class=\"headerlink\" title=\"配置教程与可学到的技术点（基于 theme: pure 与评论 valine）\"></a>配置教程与可学到的技术点（基于 theme: <code>pure</code> 与评论 <code>valine</code>）</h3><p>下面是完全零基础也能照做的步骤，全部不需要写代码，只修改配置即可。</p>\n<ol>\n<li>选择评论系统（我们用 Valine）</li>\n</ol>\n<ul>\n<li>主题 <code>pure</code> 已内置 Disqus&#x2F;Gitalk&#x2F;Valine 等多种评论系统。你当前主题配置里已经选了 <code>valine</code>，所以我们沿用它。</li>\n<li>你可以在主题配置文件里看到开关：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Comment</span><br><span class=\"line\">comment:</span><br><span class=\"line\">  type: valine  # 启用哪种评论系统</span><br><span class=\"line\">  valine:</span><br><span class=\"line\">    appid:  # your leancloud application appid</span><br><span class=\"line\">    appkey:  # your leancloud application appkey</span><br><span class=\"line\">    placeholder:  hello i&#x27;m jiangxu.</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>注册 LeanCloud，拿到 <code>AppID</code> 和 <code>AppKey</code></li>\n</ol>\n<ul>\n<li>打开浏览器，注册并登录 LeanCloud（国际版更稳定，建议使用国际站）。</li>\n<li>新建一个应用（随意命名，例如 <code>myblog-comments</code>）。</li>\n<li>在应用设置里找到并复制 <code>AppID</code> 与 <code>AppKey</code>。</li>\n<li>Valine 首次运行时会自动创建数据表，无需手工建表。</li>\n</ul>\n<ol start=\"3\">\n<li>把密钥填进主题配置</li>\n</ol>\n<ul>\n<li>打开文件：<code>themes/pure/_config.yml</code>。</li>\n<li>在 <code>comment.valine.appid</code> 与 <code>comment.valine.appkey</code> 填入你从 LeanCloud 拿到的值；占位符可按需调整，比如 <code>placeholder: 欢迎留言交流学习~</code>。</li>\n<li>保存后即可。</li>\n</ul>\n<ol start=\"4\">\n<li>评论容器与脚本已经在主题里就绪（无需改模板）</li>\n</ol>\n<ul>\n<li>文章页底部已渲染评论容器：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% &#125; else if (theme.comment.type === &#x27;valine&#x27;) &#123; %&gt;</span><br><span class=\"line\">  &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对应的初始化脚本也已内置，会把你在配置里填的 <code>appid/appkey/placeholder</code> 等传给 Valine：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;//cdn.jsdelivr.net/npm/valine&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">var GUEST = [&#x27;nick&#x27;, &#x27;mail&#x27;, &#x27;link&#x27;];</span><br><span class=\"line\">var meta = &#x27;&lt;%= theme.comment.valine.meta %&gt;&#x27;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>确保文章开启评论</li>\n</ol>\n<ul>\n<li>Hexo 对文章默认是开启评论的；若你在某篇 front‑matter 里显式写了 <code>comments: false</code>，请删掉或改为：</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 某篇文章</span><br><span class=\"line\"><span class=\"section\">comments: true</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>本地预览与部署</li>\n</ol>\n<ul>\n<li>本地预览：<ul>\n<li>运行：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></li>\n<li>打开浏览器访问本地地址，进入任意文章页，滚动到页面底部，应该能看到评论框。</li>\n</ul>\n</li>\n<li>部署上线：按你平时的发布方式（如 <code>hexo g -d</code> 或 Vercel 自动部署）。</li>\n</ul>\n<ol start=\"7\">\n<li>常见问题（遇到看这里）</li>\n</ol>\n<ul>\n<li>页面没显示评论框：检查主题配置里的 <code>comment.type</code> 是否为 <code>valine</code>，以及该文章 <code>comments</code> 是否为 <code>true</code>。</li>\n<li>初始化报错或加载很慢：有时 <code>cdn1.lncld.net</code> 或 <code>cdn.jsdelivr.net</code> 在部分网络环境下不稳定，稍后再试或切换网络。如果长期不稳定，可考虑迁移到 Gitalk（需 GitHub OAuth）等方案。</li>\n<li>留言不入库：确认 LeanCloud 应用使用的“国际版&#x2F;国内版”与你的脚本域相匹配；核对 <code>AppID/AppKey</code> 是否粘贴完整。</li>\n</ul>\n<ol start=\"8\">\n<li>我能学到的技术点（零基础友好）</li>\n</ol>\n<ul>\n<li>配置驱动的前端能力：不改代码，通过改 YAML 配置实现功能启停与参数化。</li>\n<li>模板与占位容器：主题在文章底部放了一个 <code>#vcomments</code> 容器，脚本会把评论 UI 挂载进去。</li>\n<li>第三方 SDK 初始化：Valine 作为“无后端评论系统”，用浏览器直接连到 LeanCloud 保存数据。</li>\n<li>资源加载与网络调试：评论依赖的 JS 从 CDN 加载，学会在浏览器开发者工具里看 Network 面板排查问题。</li>\n<li>安全与隐私常识：仅填必要的 <code>AppID/AppKey</code>，不收集敏感信息，按需关闭邮件通知。</li>\n</ul>\n<p>做到这里，你已经完成了一个完整的小型“前端集成”任务：读配置 → 连接外部服务 → 本地验证 → 上线发布。后续如果你想尝试别的评论系统（例如 Gitalk），只要把 <code>comment.type</code> 改为 <code>gitalk</code> 并按照它的字段填写 <code>ClientID/ClientSecret</code> 等即可。</p>\n<h3 id=\"评论原理：思维导图\"><a href=\"#评论原理：思维导图\" class=\"headerlink\" title=\"评论原理：思维导图\"></a>评论原理：思维导图</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mindmap</span><br><span class=\"line\">  root(评论系统原理 Valine LeanCloud 主题 pure)</span><br><span class=\"line\">    页面结构 Where</span><br><span class=\"line\">      评论容器 vcomments</span><br><span class=\"line\">      显示控制 front-matter comments</span><br><span class=\"line\">    脚本初始化 How</span><br><span class=\"line\">      加载CDN av-min.js 和 valine.js</span><br><span class=\"line\">      注入参数 appid appkey placeholder meta</span><br><span class=\"line\">      初始化 使用 Valine 初始化 并挂载 vcomments</span><br><span class=\"line\">    数据流 Flow</span><br><span class=\"line\">      用户填写并提交</span><br><span class=\"line\">      Valine 使用 AppID 和 AppKey 请求 LeanCloud</span><br><span class=\"line\">      LeanCloud 写入或创建数据表</span><br><span class=\"line\">      页面加载时拉取并渲染</span><br><span class=\"line\">    账号与权限 Auth</span><br><span class=\"line\">      访客 匿名 可选 nick mail link</span><br><span class=\"line\">      站长 控制台审查和删除</span><br><span class=\"line\">      Key 用途 标识应用 非管理员密码</span><br><span class=\"line\">    安全与稳定 SLA</span><br><span class=\"line\">      依赖 CDN 和 LeanCloud 可用性</span><br><span class=\"line\">      网络限制 可能加载失败</span><br><span class=\"line\">      隐私 最小化收集字段</span><br><span class=\"line\">    与主题的关系 Integration</span><br><span class=\"line\">      主题职责 容器 选择系统 传配置</span><br><span class=\"line\">      切换系统 修改 comment.type 并配置密钥</span><br><span class=\"line\">    学到的点 Learning</span><br><span class=\"line\">      配置驱动 与 模板占位</span><br><span class=\"line\">      浏览器SDK 直连后端</span><br><span class=\"line\">      CDN加载 与 排障</span><br><span class=\"line\">      同一容器 可接入多种实现</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <a href=\"#linkformat\">linkformat</a></li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <a href=\"#%E9%85%8D%E7%BD%AEGoogle-analysis\">Google analysis</a></li>\n<li>[] <a href=\"#comment-system\">Comment System</a></li>\n</ul>\n<hr>\n<h2 id=\"linkformat\"><a href=\"#linkformat\" class=\"headerlink\" title=\"linkformat\"></a>linkformat</h2><h3 id=\"把文章链接改成-postname，无日期（已实操，已注释）\"><a href=\"#把文章链接改成-postname，无日期（已实操，已注释）\" class=\"headerlink\" title=\"把文章链接改成 postname，无日期（已实操，已注释）\"></a>把文章链接改成 postname，无日期（已实操，已注释）</h3><p>我希望把文章地址从带日期的结构改为仅使用文章名。例如当前这篇示例是带日期的：<code>https://www.jiangxu.net/2025/08/14/study-materials/</code>（参考链接见文末）。目标是变为：<code>https://www.jiangxu.net/study-materials/</code>。</p>\n<ul>\n<li>关键词：Hexo <code>permalink</code>、<code>:title</code>、<code>slug</code>、<code>front-matter</code> 覆盖、<code>pretty_urls</code></li>\n</ul>\n<blockquote>\n<p>更改之前</p>\n<img src=\"/img/linkformatbf.png\" alt=\"before\" width=\"400\"></blockquote>\n<blockquote>\n<p>更改之后</p>\n<img src=\"/img/linkformataf.png\" alt=\"after\" width=\"400\"></blockquote>\n<h3 id=\"具体的技术问题\"><a href=\"#具体的技术问题\" class=\"headerlink\" title=\"具体的技术问题\"></a>具体的技术问题</h3><ol>\n<li>这是什么，为什么要改？</li>\n</ol>\n<ul>\n<li>在 Hexo 里，<code>permalink</code> 决定每篇文章最终生成的访问路径。默认常见的是 <code>:year/:month/:day/:title/</code>，更偏向博客时间线；改成 <code>:title/</code> 可以获得更短、更“永久”的链接，便于记忆与分享。</li>\n</ul>\n<ol start=\"2\">\n<li>名词解释</li>\n</ol>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> permalink：固定链接模板，支持占位符（如 <code>:title</code>）。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> title vs slug：<code>title</code> 是文章标题，<code>slug</code> 是 URL 里使用的“短名称”。中文标题会直接出现在 URL 中（或被转义）。为保证简洁稳定，建议在 front-matter 里显式写 <code>slug</code>（英文&#x2F;拼音）。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> front-matter 覆盖：单篇文章的 <code>permalink</code> 字段可以覆盖全局策略。<blockquote>\n<p>全站用一种规则，但某一篇你想要特别的 URL，就在这篇的 front-matter 里写 permalink，它会直接生效</p>\n</blockquote>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> pretty_urls：去除 <code>index.html</code>&#x2F;<code>.html</code> 的外观选项，不改变目录式链接本质。<blockquote>\n<p>文件式链接显式带 .html 后缀；目录式链接不带后缀、更简洁</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"3\">\n<li>工作原理（Hexo 渲染 → 最终 URL）</li>\n</ol>\n<ul>\n<li>Hexo 根据 <code>_config.yml</code> 的 <code>permalink</code> 模板，为每篇文章计算目标路径；例如 <code>:title/</code> 会在 <code>public/study-materials/index.html</code> 生成文件，访问时即 <code>https://域名/study-materials/</code>。</li>\n<li>主题里常用 <code>post.permalink</code>&#x2F;<code>page.permalink</code> 读取该最终地址，变化后会自动跟随，无需改主题模板。</li>\n</ul>\n<ol start=\"4\">\n<li>如何修改（不改主题，只动 Hexo 主配置）</li>\n</ol>\n<ul>\n<li>打开站点根目录的 <code>_config.yml</code>，把 <code>permalink</code> 改为仅使用文章名：</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://jiangxu.net/</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:title/</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">false</span>   <span class=\"comment\"># 去掉末尾的 index.html（目录式链接更干净）</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span>     <span class=\"comment\"># 保持目录式，不使用 .html 直出</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>对中文标题或想自定义 URL 的文章，在 front-matter 里增加 <code>slug</code>：</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 学习资料</span><br><span class=\"line\">slug: study-materials</span><br><span class=\"line\"><span class=\"section\">date: 2025-08-14 00:00:00</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>slug 与 URL 情况对照表</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>情况</th>\n<th>源文件名</th>\n<th>front-matter</th>\n<th>全局 permalink</th>\n<th>最终 URL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标题&#x3D;文件名，不写 slug</td>\n<td>学习资料.md</td>\n<td>title: 学习资料</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;学习资料&#x2F;</td>\n</tr>\n<tr>\n<td>标题≠文件名，不写 slug</td>\n<td>hello-world.md</td>\n<td>title: 学习资料</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;hello-world&#x2F;</td>\n</tr>\n<tr>\n<td>写了 slug → 强制用 slug</td>\n<td>hello-world.md</td>\n<td>title: 学习资料, slug: study-materials</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;study-materials&#x2F;</td>\n</tr>\n<tr>\n<td>文件名含空格&#x2F;符号，不写 slug</td>\n<td>My Post!!!.md</td>\n<td>title: 随笔</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;my-post&#x2F;</td>\n</tr>\n<tr>\n<td>只改标题，不改文件名，不写 slug</td>\n<td>hello-world.md</td>\n<td>title: 学习资料（更新版）</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;hello-world&#x2F;</td>\n</tr>\n<tr>\n<td>改了文件名，不写 slug</td>\n<td>greeting.md（改名后）</td>\n<td>title: 学习资料</td>\n<td>:title&#x2F;</td>\n<td>&#x2F;greeting&#x2F;</td>\n</tr>\n</tbody></table>\n<ul>\n<li>只想个别文章自定义完整路径（覆盖全局模板），可在该文 front-matter 指定 <code>permalink</code>：</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 特殊文章</span><br><span class=\"line\"><span class=\"section\">permalink: my-special-post/</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>常见问题与排查</li>\n</ol>\n<ul>\n<li>重名冲突：<code>permalink: :title/</code> 下，两个同名标题会竞争同一路径。给其中一个加 <code>slug</code> 解决。</li>\n<li>中文&#x2F;符号 URL：建议写 <code>slug</code>，避免 URL 编码或不稳定字符。</li>\n<li>分类在路径里？若你想保留分类，可用 <code>:categories/:title/</code> 模板。</li>\n<li>本地没生效：确认已 <code>hexo clean</code>，并非浏览器缓存；命令行无错误后再测试。</li>\n</ul>\n<h2 id=\"配置Google-analysis\"><a href=\"#配置Google-analysis\" class=\"headerlink\" title=\"配置Google analysis\"></a>配置Google analysis</h2><h3 id=\"我的说明\"><a href=\"#我的说明\" class=\"headerlink\" title=\"我的说明\"></a>我的说明</h3><p>我给博客加了一个“计数器”。它能记录：有人打开了哪一页、做了哪些关键动作。</p>\n<ul>\n<li>整页跳转时，它会自动记一次“看了一页”。</li>\n<li>我还加了两个小统计：点出去的链接、复制代码。这样更容易看出哪些内容有用。</li>\n<li>我能在后台的“实时”页面马上看到有没有上报成功。</li>\n</ul>\n<p>我用到的：</p>\n<ul>\n<li>GA4：谷歌的统计系统</li>\n<li>Measurement ID：类似你家门牌号，告诉数据送到哪</li>\n<li>gtag.js：放在页面上的统计代码</li>\n<li>dataLayer：给统计代码传消息的“队列”</li>\n<li>page_view：记录“看了一页”</li>\n<li>事件（event）：记录“做了一个动作”，比如点链接、复制</li>\n<li>Realtime&#x2F;DebugView：后台用来看数据有没有进来</li>\n</ul>\n<h3 id=\"具体的技术问题-1\"><a href=\"#具体的技术问题-1\" class=\"headerlink\" title=\"具体的技术问题\"></a>具体的技术问题</h3><ol>\n<li>这是什么，为什么要用它？</li>\n</ol>\n<ul>\n<li>GA4 是网站“访问统计与行为分析”的系统。它记录“有人来过哪一页、做了什么动作”。有了它，能回答“哪篇文章更受欢迎、用户从哪里来、点了哪些按钮”。</li>\n</ul>\n<ol start=\"2\">\n<li>名词解释（最常见的就这些）</li>\n</ol>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> GA4 Property：你的数据容器，所有事件最终汇总到这里。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Measurement ID：形如 <code>G-XXXXXXXXXX</code>，告诉 GA4 “发到哪个容器”。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> gtag.js：Google 提供的统计代码（SDK：给开发者用的一包工具），负责把信息打包并发送。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> dataLayer：浏览器里的“事件队列”，<code>gtag()</code> 把配置与事件都 push 进去。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> page_view：页面浏览事件；SPA&#x2F;PJAX 不会自动刷新页面，需要手动上报。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Event：通用事件（名字 + 参数），比如 <code>click_outbound</code>、<code>copy_code</code>。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Client ID（_ga）：匿名访客 ID（存在一方 Cookie），用于区分不同用户。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> DebugView&#x2F;Realtime：调试与实时数据查看界面。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Cookie：浏览器为网站保存的一小段文字，网站下次访问时能认出“还是你”。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Client ID：存放在 Cookie 里的匿名编号，用来区分不同访客（不含个人信息）。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> CSP：内容安全策略，像“白名单”，只允许从指定域加载脚本&#x2F;发请求；未放行会被浏览器拦截。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 第一次访问：gtag.js 没找到编号 → 生成一个新的 Client ID → 写进 Cookie。</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 以后访问：浏览器会自动把 Cookie 带上；gtag.js 读取 Cookie 里的 Client ID → 识别是同一位访客。</li>\n</ul>\n<ol start=\"3\">\n<li><p>数据流转图（GA4 上报链路）</p>\n<blockquote>\n<p>自制，边画图边理解约2h<br><img src=\"/img/gaflowchart.png\" alt=\"Google analysis流程图\" width=\"800\"></p>\n</blockquote>\n</li>\n<li><p>如何接入（整页跳转站点）</p>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">window</span>.<span class=\"property\">dataLayer</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">dataLayer</span> || [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">gtag</span>(<span class=\"params\"></span>)&#123; dataLayer.<span class=\"title function_\">push</span>(<span class=\"variable language_\">arguments</span>); &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">gtag</span>(<span class=\"string\">&#x27;js&#x27;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">gtag</span>(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"string\">&#x27;G-XXXXXXXXXX&#x27;</span>, &#123; <span class=\"attr\">send_page_view</span>: <span class=\"literal\">true</span> &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>访客Y第一次打开（访客浏览器）</p>\n<ul>\n<li>访客浏览器：请求你的博客页面；页面里包含 <code>gtag.js</code>（从 Google 官网域名加载）。</li>\n<li>gtag.js：在访客浏览器里执行，初始化 <code>dataLayer</code> 事件队列。</li>\n<li>Cookie &#x2F; Client ID：如果没有发现 <code>_ga</code>，就生成新的 Client ID，并把它写进 Cookie。</li>\n<li>Measurement ID：调用 <code>gtag(&#39;config&#39;, &#39;G-XXXXXXXXXX&#39;, ...)</code>，把数据归到你自己的 GA4 Property。</li>\n<li>Consent Mode：按默认规则限制可发送内容（更保守的上报）。</li>\n<li>CSP：需放行 <code>googletagmanager.com</code> 与 <code>google-analytics.com</code>，否则浏览器会拦截统计请求。</li>\n<li>page_view：<ul>\n<li>整页跳转主题：自动发送一次 <code>page_view</code>。</li>\n</ul>\n</li>\n<li>事件：用户操作（如 <code>click_outbound</code>、<code>copy_code</code>）由 <code>gtag.js</code> 打包为“事件”。</li>\n<li>发送目的地：请求直接从“访客浏览器”发到“Google 官网” <code>google-analytics.com/g/collect</code>，不会经过你的服务器。</li>\n<li>入库与查看：数据进入你的 GA4 数据仓库（Property），你能在 Realtime&#x2F;DebugView 里立刻看到。</li>\n</ul>\n<p>访客Y第二次打开（不同点，其它相同）</p>\n<ul>\n<li>访客浏览器：会自动带上上次保存的 Cookie。</li>\n<li>gtag.js：读取到已有的 Client ID（不再新建），继续用同一个编号上报。</li>\n<li>其余步骤与第一次相同；由于 Client ID 相同，GA4 会把两次访问识别为同一位访客（除非清除了 Cookie、换了设备或浏览器）。</li>\n</ul>\n<hr>\n<h2 id=\"comment-sysytem\"><a href=\"#comment-sysytem\" class=\"headerlink\" title=\"comment sysytem\"></a>comment sysytem</h2><h3 id=\"给老师的一段话（概述）\"><a href=\"#给老师的一段话（概述）\" class=\"headerlink\" title=\"给老师的一段话（概述）\"></a>给老师的一段话（概述）</h3><p>老师您好，我是正在转专业的学生。我在博客里开通“评论”功能，是想把自学过程中的疑问与收获沉淀下来，也方便向老师与同学请教、接受批改与反馈。配置评论让我动手理解了网站前端的基本结构：主题模板如何预留评论位置、配置文件如何驱动功能启停、以及如何把外部服务（例如 LeanCloud）安全地“接到”我的页面里。我会注意不收集不必要的个人信息，只用它来进行学术讨论与学习交流。</p>\n<h3 id=\"配置教程与可学到的技术点（基于-theme-pure-与评论-valine）\"><a href=\"#配置教程与可学到的技术点（基于-theme-pure-与评论-valine）\" class=\"headerlink\" title=\"配置教程与可学到的技术点（基于 theme: pure 与评论 valine）\"></a>配置教程与可学到的技术点（基于 theme: <code>pure</code> 与评论 <code>valine</code>）</h3><p>下面是完全零基础也能照做的步骤，全部不需要写代码，只修改配置即可。</p>\n<ol>\n<li>选择评论系统（我们用 Valine）</li>\n</ol>\n<ul>\n<li>主题 <code>pure</code> 已内置 Disqus&#x2F;Gitalk&#x2F;Valine 等多种评论系统。你当前主题配置里已经选了 <code>valine</code>，所以我们沿用它。</li>\n<li>你可以在主题配置文件里看到开关：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Comment</span><br><span class=\"line\">comment:</span><br><span class=\"line\">  type: valine  # 启用哪种评论系统</span><br><span class=\"line\">  valine:</span><br><span class=\"line\">    appid:  # your leancloud application appid</span><br><span class=\"line\">    appkey:  # your leancloud application appkey</span><br><span class=\"line\">    placeholder:  hello i&#x27;m jiangxu.</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>注册 LeanCloud，拿到 <code>AppID</code> 和 <code>AppKey</code></li>\n</ol>\n<ul>\n<li>打开浏览器，注册并登录 LeanCloud（国际版更稳定，建议使用国际站）。</li>\n<li>新建一个应用（随意命名，例如 <code>myblog-comments</code>）。</li>\n<li>在应用设置里找到并复制 <code>AppID</code> 与 <code>AppKey</code>。</li>\n<li>Valine 首次运行时会自动创建数据表，无需手工建表。</li>\n</ul>\n<ol start=\"3\">\n<li>把密钥填进主题配置</li>\n</ol>\n<ul>\n<li>打开文件：<code>themes/pure/_config.yml</code>。</li>\n<li>在 <code>comment.valine.appid</code> 与 <code>comment.valine.appkey</code> 填入你从 LeanCloud 拿到的值；占位符可按需调整，比如 <code>placeholder: 欢迎留言交流学习~</code>。</li>\n<li>保存后即可。</li>\n</ul>\n<ol start=\"4\">\n<li>评论容器与脚本已经在主题里就绪（无需改模板）</li>\n</ol>\n<ul>\n<li>文章页底部已渲染评论容器：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% &#125; else if (theme.comment.type === &#x27;valine&#x27;) &#123; %&gt;</span><br><span class=\"line\">  &lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对应的初始化脚本也已内置，会把你在配置里填的 <code>appid/appkey/placeholder</code> 等传给 Valine：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;//cdn.jsdelivr.net/npm/valine&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">var GUEST = [&#x27;nick&#x27;, &#x27;mail&#x27;, &#x27;link&#x27;];</span><br><span class=\"line\">var meta = &#x27;&lt;%= theme.comment.valine.meta %&gt;&#x27;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>确保文章开启评论</li>\n</ol>\n<ul>\n<li>Hexo 对文章默认是开启评论的；若你在某篇 front‑matter 里显式写了 <code>comments: false</code>，请删掉或改为：</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 某篇文章</span><br><span class=\"line\"><span class=\"section\">comments: true</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>本地预览与部署</li>\n</ol>\n<ul>\n<li>本地预览：<ul>\n<li>运行：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></li>\n<li>打开浏览器访问本地地址，进入任意文章页，滚动到页面底部，应该能看到评论框。</li>\n</ul>\n</li>\n<li>部署上线：按你平时的发布方式（如 <code>hexo g -d</code> 或 Vercel 自动部署）。</li>\n</ul>\n<ol start=\"7\">\n<li>常见问题（遇到看这里）</li>\n</ol>\n<ul>\n<li>页面没显示评论框：检查主题配置里的 <code>comment.type</code> 是否为 <code>valine</code>，以及该文章 <code>comments</code> 是否为 <code>true</code>。</li>\n<li>初始化报错或加载很慢：有时 <code>cdn1.lncld.net</code> 或 <code>cdn.jsdelivr.net</code> 在部分网络环境下不稳定，稍后再试或切换网络。如果长期不稳定，可考虑迁移到 Gitalk（需 GitHub OAuth）等方案。</li>\n<li>留言不入库：确认 LeanCloud 应用使用的“国际版&#x2F;国内版”与你的脚本域相匹配；核对 <code>AppID/AppKey</code> 是否粘贴完整。</li>\n</ul>\n<ol start=\"8\">\n<li>我能学到的技术点（零基础友好）</li>\n</ol>\n<ul>\n<li>配置驱动的前端能力：不改代码，通过改 YAML 配置实现功能启停与参数化。</li>\n<li>模板与占位容器：主题在文章底部放了一个 <code>#vcomments</code> 容器，脚本会把评论 UI 挂载进去。</li>\n<li>第三方 SDK 初始化：Valine 作为“无后端评论系统”，用浏览器直接连到 LeanCloud 保存数据。</li>\n<li>资源加载与网络调试：评论依赖的 JS 从 CDN 加载，学会在浏览器开发者工具里看 Network 面板排查问题。</li>\n<li>安全与隐私常识：仅填必要的 <code>AppID/AppKey</code>，不收集敏感信息，按需关闭邮件通知。</li>\n</ul>\n<p>做到这里，你已经完成了一个完整的小型“前端集成”任务：读配置 → 连接外部服务 → 本地验证 → 上线发布。后续如果你想尝试别的评论系统（例如 Gitalk），只要把 <code>comment.type</code> 改为 <code>gitalk</code> 并按照它的字段填写 <code>ClientID/ClientSecret</code> 等即可。</p>\n<h3 id=\"评论原理：思维导图\"><a href=\"#评论原理：思维导图\" class=\"headerlink\" title=\"评论原理：思维导图\"></a>评论原理：思维导图</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mindmap</span><br><span class=\"line\">  root(评论系统原理 Valine LeanCloud 主题 pure)</span><br><span class=\"line\">    页面结构 Where</span><br><span class=\"line\">      评论容器 vcomments</span><br><span class=\"line\">      显示控制 front-matter comments</span><br><span class=\"line\">    脚本初始化 How</span><br><span class=\"line\">      加载CDN av-min.js 和 valine.js</span><br><span class=\"line\">      注入参数 appid appkey placeholder meta</span><br><span class=\"line\">      初始化 使用 Valine 初始化 并挂载 vcomments</span><br><span class=\"line\">    数据流 Flow</span><br><span class=\"line\">      用户填写并提交</span><br><span class=\"line\">      Valine 使用 AppID 和 AppKey 请求 LeanCloud</span><br><span class=\"line\">      LeanCloud 写入或创建数据表</span><br><span class=\"line\">      页面加载时拉取并渲染</span><br><span class=\"line\">    账号与权限 Auth</span><br><span class=\"line\">      访客 匿名 可选 nick mail link</span><br><span class=\"line\">      站长 控制台审查和删除</span><br><span class=\"line\">      Key 用途 标识应用 非管理员密码</span><br><span class=\"line\">    安全与稳定 SLA</span><br><span class=\"line\">      依赖 CDN 和 LeanCloud 可用性</span><br><span class=\"line\">      网络限制 可能加载失败</span><br><span class=\"line\">      隐私 最小化收集字段</span><br><span class=\"line\">    与主题的关系 Integration</span><br><span class=\"line\">      主题职责 容器 选择系统 传配置</span><br><span class=\"line\">      切换系统 修改 comment.type 并配置密钥</span><br><span class=\"line\">    学到的点 Learning</span><br><span class=\"line\">      配置驱动 与 模板占位</span><br><span class=\"line\">      浏览器SDK 直连后端</span><br><span class=\"line\">      CDN加载 与 排障</span><br><span class=\"line\">      同一容器 可接入多种实现</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/vercel-hexo-github-auto-deploy.pdf","slug":"-auto-deploy.pdf","post":"cmg0gdxyy0001k49k2rdn2gbp","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cmg0gdxyy0001k49k2rdn2gbp","category_id":"cmg0gdxzj0004k49k0cef7nyv","_id":"cmg0gdy0e000hk49kahikd398"},{"post_id":"cmg0gdxze0003k49k1lgp8rel","category_id":"cmg0gdy02000ck49k54lzegbr","_id":"cmg0gdy0h000mk49k0wypavl4"},{"post_id":"cmg0gdxzm0007k49k97mv0uu2","category_id":"cmg0gdy02000ck49k54lzegbr","_id":"cmg0gdy0i000pk49kds3s7uit"},{"post_id":"cmg0gdxzt0009k49k3iwi2vh2","category_id":"cmg0gdy02000ck49k54lzegbr","_id":"cmg0gdy0j000sk49kg2axhk4b"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","category_id":"cmg0gdy0i000ok49kf44f57u0","_id":"cmg0gdy0q000wk49k8s8badmr"},{"post_id":"cmg0gdy0y0016k49khecq6y47","category_id":"cmg0gdxzj0004k49k0cef7nyv","_id":"cmg0gdy0z0018k49k6zthdjlm"}],"PostTag":[{"post_id":"cmg0gdxyy0001k49k2rdn2gbp","tag_id":"cmg0gdxzl0005k49k2s529ldg","_id":"cmg0gdy0a000ek49kdiuk6m8j"},{"post_id":"cmg0gdxze0003k49k1lgp8rel","tag_id":"cmg0gdy03000dk49kg01w3zbt","_id":"cmg0gdy0h000kk49kaupu5j3p"},{"post_id":"cmg0gdxzm0007k49k97mv0uu2","tag_id":"cmg0gdy0f000jk49kdhqucj70","_id":"cmg0gdy0j000rk49kd4k2cjel"},{"post_id":"cmg0gdxzm0007k49k97mv0uu2","tag_id":"cmg0gdy0i000nk49ka2z05qmt","_id":"cmg0gdy0j000tk49k5v8e8rax"},{"post_id":"cmg0gdxzt0009k49k3iwi2vh2","tag_id":"cmg0gdy0i000qk49kh9z991ye","_id":"cmg0gdy0j000vk49k3tub4hr7"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0j000uk49kauln5bex","_id":"cmg0gdy0s0011k49khlal3496"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0q000xk49k5onn7lr7","_id":"cmg0gdy0s0012k49k9mqo3tua"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0r000yk49k7ogf82wq","_id":"cmg0gdy0s0013k49kh4bddb86"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0r000zk49k77agcns3","_id":"cmg0gdy0s0014k49kcb9347ju"},{"post_id":"cmg0gdy01000bk49kdlcj5v2a","tag_id":"cmg0gdy0r0010k49kflol7yqc","_id":"cmg0gdy0s0015k49khssfbgg2"},{"post_id":"cmg0gdy0y0016k49khecq6y47","tag_id":"cmg0gdxzl0005k49k2s529ldg","_id":"cmg0gdy0z0017k49k0llqbs3x"}],"Tag":[{"name":"学习记录","_id":"cmg0gdxzl0005k49k2s529ldg"},{"name":"C++","_id":"cmg0gdy03000dk49kg01w3zbt"},{"name":"git","_id":"cmg0gdy0f000jk49kdhqucj70"},{"name":"md","_id":"cmg0gdy0i000nk49ka2z05qmt"},{"name":"资料","_id":"cmg0gdy0i000qk49kh9z991ye"},{"name":"Hexo","_id":"cmg0gdy0j000uk49kauln5bex"},{"name":"Vercel","_id":"cmg0gdy0q000xk49k5onn7lr7"},{"name":"GitHub","_id":"cmg0gdy0r000yk49k7ogf82wq"},{"name":"CI/CD","_id":"cmg0gdy0r000zk49k77agcns3"},{"name":"域名","_id":"cmg0gdy0r0010k49kflol7yqc"}]}}